CREATE TYPE ActionToTakeEnumType AS ENUM ('HALT_PRODUCTION','CONTAINMENT','NEW_MATERIAL_BATCH','NEW_TOOLING','INSPECT_100PC','REBOOT','RECALIBRATE','OTHER');
CREATE TYPE AddressDescriptionEnumType AS ENUM ('DELIVERY','POSTAL','VISITOR','NOTDEFINED');
CREATE TYPE AngleBetweenAnalysisModeEnumType AS ENUM ('TWODIMENSIONAL','THREEDIMENSIONAL');
CREATE TYPE AngularCoordinateDirectionEnumType AS ENUM ('ANGULAR','AZIMUTH','POLAR');
CREATE TYPE ArcConicFormEnumType AS ENUM ('PARABOLA','ELLIPSE','HYPERBOLA');
CREATE TYPE AssignableCauseEnumType AS ENUM ('POWER_FAILURE','BROKEN_TOOL','COMPUTER_CRASH','WEATHER_EVENT','OTHER');
CREATE TYPE Attr23CoreEnumType AS ENUM ('FREEFORM','CYLINDER','CONE','TORUS','SPHERE','PLANE');
CREATE TYPE BooleanConstantEnumType AS ENUM ('QIF_TRUE','QIF_FALSE');
CREATE TYPE BottomEnumType AS ENUM ('BLIND','THROUGH','UNDEFINED');
CREATE TYPE CMMDirectionEnumType AS ENUM ('RIGHT','LEFT','FRONT','BACK','UP','DOWN');
CREATE TYPE CMMGeometryEnumType AS ENUM ('CANTILEVER','BRIDGEMOVINGBRIDGE','BRIDGEMOVINGTABLE','COLUMN','GANTRY','HORIZONTALARMMOVINGARM','HORIZONTALARMMOVINGTABLE','ARTICULATEDARM');
CREATE TYPE CameraFormEnumType AS ENUM ('ORTHOGRAPHIC','PERSPECTIVE');
CREATE TYPE CharacteristicStatusEnumType AS ENUM ('PASS','FAIL','REWORK','SYSERROR','INDETERMINATE','NOT_ANALYZED','BASIC','UNDEFINED');
CREATE TYPE CharacteristicTypeEnumType AS ENUM ('ANGLE','ANGLECOORDINATE','ANGLEFROM','ANGLEBETWEEN','ANGULARITY','CHORD','CIRCULARITY','CIRCULARRUNOUT','CONCENTRICITY','CURVELENGTH','CYLINDRICITY','DEPTH','DIAMETER','DISTANCE','DISTANCEFROM','FLATNESS','HEIGHT','LENGTH','LENGTHCOORDINATE','LINEPROFILE','PERPENDICULARITY','PARALLELISM','POINTPROFILE','POSITION','RADIUS','SQUARE','STRAIGHTNESS','SURFACEPROFILE','SURFACEPROFILENONUNIFORM','SYMMETRY','THICKNESS','THREAD','TOTALRUNOUT','WIDTH');
CREATE TYPE ClosedCurvePointSamplingStrategyEnumType AS ENUM ('POINTS','EQUIDISTANT');
CREATE TYPE CommonFileSpecEnumType AS ENUM ('AVI','BMP','DOC','DOCX','DXF','DTD','GIF','GZIP','HTML','IGES','JPEG','JPG','MOV','MPEG','MPG','PDF','PNG','PPM','PPT','PRT','RAR','RTF','STL','STEP','STP','TAR','TIF','TIFF','TXT','WMV','XLS','XLSX','XML','XSD','X_T','ZIP');
CREATE TYPE CompoundFeatureGeometryEnumType AS ENUM ('COAXIAL','COPLANAR','COCENTERED');
CREATE TYPE ConePointSamplingStrategyEnumType AS ENUM ('POLARGRID','STRATIFIED','SPIRAL','SPIDERWEB','POINTS');
CREATE TYPE ControlIssueEnumType AS ENUM ('OOT','CP','CPK','PP','PPK','OOC','TRENDING','SKEWED','ONETHIRDGROUPED','TWOTHIRDGROUPED','OSCILLATING','STRATIFIED','OOCRNG','UNDEFINED');
CREATE TYPE CoordinateEnumType AS ENUM ('CARTESIAN_2D','POLAR_2D','CARTESIAN_3D','CYLINDRICAL_3D','SPHERICAL_3D','UNDEFINED');
CREATE TYPE CurveSubstituteFeatureAlgorithmEnumType AS ENUM ('LEASTSQUARES','BSPLINE','MINMAX','UNDEFINED');
CREATE TYPE DegreeOfFreedomEnumType AS ENUM ('U','V','W','X','Y','Z');
CREATE TYPE DiameterModifierEnumType AS ENUM ('PD','MD','LD');
CREATE TYPE DigitalModelFormatEnumType AS ENUM ('STEPAP203','STEPAP203E2','STEPAP214','STEPAP242','JTOPEN','RPC','PDPMI','ACIS','PARASOLID','AUTODESK','PTC','NX','SOLIDWORKS','CATIA','NOTDEFINED');
CREATE TYPE DimensionCountEnumType AS ENUM ('TWODIMENSIONAL','THREEDIMENSIONAL');
CREATE TYPE DimensionModifierEnumType AS ENUM ('BASIC','SET','REFERENCE');
CREATE TYPE DistanceBetweenAnalysisModeEnumType AS ENUM ('ONEDIMENSIONAL','TWODIMENSIONAL','THREEDIMENSIONAL');
CREATE TYPE DistributionTransformationEnumType AS ENUM ('LOGNORMAL','BOUNDED','UNBOUNDED');
CREATE TYPE ElongatedCylinderPointSamplingStrategyEnumType AS ENUM ('ORTHOGONALGRID','BIRDCAGE','SPECIFIEDGRID','STRATIFIED','HELIX','POINTS');
CREATE TYPE ExclusionEnumType AS ENUM ('FLIER','EQUIPERROR','REWORK','KNOWNCAUSE');
CREATE TYPE ExtentEnumType AS ENUM ('ALLOVER','ALLAROUND','ALLOVERTHISSIDE','ALLAROUNDTHISSIDE','UNDEFINED');
CREATE TYPE ExtrudedCrossSectionPointSamplingStrategyEnumType AS ENUM ('BIRDCAGE','STRATIFIED','POINTS');
CREATE TYPE FeatureOfSizeSubstituteFeatureAlgorithmEnumType AS ENUM ('LEASTSQUARES','MINMAX','MINCIRCUMSCRIBED','MAXINSCRIBED','UNDEFINED');
CREATE TYPE FormalStandardEnumType AS ENUM ('ANSI','ASME-Y14.5-1982','ASME-Y14.5-1994','ASME-Y14.5-2009','ISO1101:1983','ISO1101:2004','ISO1101:2012','BS_8888_2004','JIS','DIN','COMPANY');
CREATE TYPE GDTEnumType AS ENUM ('UNKNOWN','HUMANREAD','MACHINEREAD','ABSENT');
CREATE TYPE GageRandRStudyEnumType AS ENUM ('RANGE','AVGANDRANGE','ANOVA');
CREATE TYPE ISODegreeOfFreedomEnumType AS ENUM ('Rx','Ry','Rz','Tx','Ty','Tz');
CREATE TYPE InspectionModeEnumType AS ENUM ('FAI_Full','FAI_Partial','100Percent','APQP','KPC','PPAP');
CREATE TYPE InspectionScopeEnumType AS ENUM ('DETAIL','ASSEMBLY');
CREATE TYPE InspectionStatusEnumType AS ENUM ('PASS','FAIL','REWORK','SYSERROR','UNKNOWN','NOT_CALCULATED','NOT_MEASURED','UNDEFINED');
CREATE TYPE InternalExternalEnumType AS ENUM ('INTERNAL','EXTERNAL','NOT_APPLICABLE');
CREATE TYPE IntersectionPlaneEnumType AS ENUM ('PARALLEL','PERPENDICULAR','INCLUDING');
CREATE TYPE LeaderHeadFormEnumType AS ENUM ('NONE','ARROW_OPEN','ARROW_UNFILLED','ARROW_BLANKED','ARROW_FILLED','TRIANGLE_BLANKED','TRIANGLE_FILLED','DOT_BLANKED','DOT_FILLED','BOX_BLANKED','BOX_FILLED','DIMENSION_ORIGIN','SYMBOL_SLASH','SYMBOL_INTEGRAL','SYMBOL_CROSS');
CREATE TYPE LinearCoordinateDirectionEnumType AS ENUM ('XAXIS','YAXIS','ZAXIS','RADIAL');
CREATE TYPE LoopFormEnumType AS ENUM ('UNKNOWN','OUTER','INNER','SLIT');
CREATE TYPE ManufacturingMethodEnumType AS ENUM ('ADDITIVE','CASTING','COMPOSITE','FABRICATION','FORMING','JOINING','MACHINING','MOLDING');
CREATE TYPE MaterialModifierEnumType AS ENUM ('REGARDLESS','LEAST','MAXIMUM','NONE');
CREATE TYPE MeasureActionGroupFunctionEnumType AS ENUM ('ROUTING_PLAN','OPERATION_SEQUENCE','SETUP_USAGE_GROUP','SENSOR_USAGE_GROUP','CARRIAGE_USAGE_GROUP','PCS_USAGE_GROUP','EVALUATE_CHAR_ACTIONS','ESTABLISH_DATUM_ACTIONS','UNDEFINED');
CREATE TYPE MeasurementDirectiveEnumType AS ENUM ('MINIMUM','MAXIMUM','AVERAGE','UNDEFINED');
CREATE TYPE ModifyingPlaneEnumType AS ENUM ('PARALLEL','PERPENDICULAR','INCLINED');
CREATE TYPE NonFeatureOfSizeSubstituteFeatureAlgorithmEnumType AS ENUM ('LEASTSQUARES','MINMAX','UNDEFINED');
CREATE TYPE NonToleranceEnumType AS ENUM ('MEASURED','SET');
CREATE TYPE NoteFormEnumType AS ENUM ('3D','SCREEN');
CREATE TYPE OneSidedCapabilityCalculationEnumType AS ENUM ('THREE_SIGMA','SIX_SIGMA');
CREATE TYPE OpenCurvePointSamplingStrategyEnumType AS ENUM ('POINTS');
CREATE TYPE PlanePointSamplingStrategyEnumType AS ENUM ('ORTHOGONALGRID','POLARGRID','SPECIFIEDGRID','STRATIFIED','SPIRAL','SPIDERWEB','POINTS');
CREATE TYPE PointDefinedPointSamplingStrategyEnumType AS ENUM ('GIVENPOINTS','POINTS');
CREATE TYPE PointPointSamplingStrategyEnumType AS ENUM ('POINTS');
CREATE TYPE PointSamplingStrategyEnumBaseType AS ENUM ('ORTHOGONALGRID','BIRDCAGE','POLARGRID','SPECIFIEDGRID','STRATIFIED','HELIX','SPIRAL','SPIDERWEB','POINTS');
CREATE TYPE PositionCapabilityCalculationEnumType AS ENUM ('THREE_SIGMA','SIX_SIGMA','BIVARIATE','TRIVARIATE');
CREATE TYPE PrecedenceEnumType AS ENUM ('PRIMARY','SECONDARY','TERTIARY','QUATERNARY','QUINARY','SENARY');
CREATE TYPE PrismPointSamplingStrategyEnumType AS ENUM ('ORTHOGONALGRID','BIRDCAGE','SPECIFIEDGRID','STRATIFIED','HELIX','POINTS');
CREATE TYPE ReducedDatumEnumType AS ENUM ('PT','SL','PL');
CREATE TYPE ReferencedComponentEnumType AS ENUM ('NOMINAL','ACTUAL');
CREATE TYPE RetrievalMethodEnumType AS ENUM ('AVERAGE','MAXEXTREME','MINEXTREME','CLOSEST1D','CLOSEST2D','CLOSEST3D');
CREATE TYPE SamplingIntervalEnumType AS ENUM ('SHIFT','DAY','HOUR','WEEK','MONTH','BATCH','LOT');
CREATE TYPE SectionModifierEnumType AS ENUM ('ACS','ALS');
CREATE TYPE SecurityClassificationEnumType AS ENUM ('NONE','UNCLASSIFIED','RESTRICTED','EU_RESTRICTED','WEU_RESTRICTED','FOR_OFFICIAL_USE_ONLY','PROTECTED','PROTECTED_A','PROTECTED_B','PROTECTED_C','CONFIDENTIAL','EU_CONFIDENTIAL','WEU_CONFIDENTIAL','SECRET','SECRET_NATIONAL_SECURITY_INFORMATION','SECRET_FORMERLY_RESTRICTED_DATA','SECRET_RESTRICTED_DATA','EU_SECRET','WEU_SECRET','TOP_SECRET_NATIONAL_SECURITY_INFORMATION','TOP_SECRET_FORMERLY_RESTRICTED_DATA','TOP_SECRET_RESTRICTED_DATA','EU_TOP_SECRET','FOCAL_TOP_SECRET','COMPANY_CONFIDENTIAL','OFFICAL_USE_ONLY','TRADE_SECRET','TRADEMARK','REGISTERED_TRADEMARK','PATENT','UNDEFINED');
CREATE TYPE ShapeClassEnumType AS ENUM ('GEAR','FREEFORM','PRISMATIC','ROTATIONAL','THINWALLED');
CREATE TYPE ShellFormEnumType AS ENUM ('UNKNOWN','OUTER','INNER');
CREATE TYPE SlotEndEnumType AS ENUM ('ROUND','FLAT','OPEN','UNDEFINED');
CREATE TYPE SpherePointSamplingStrategyEnumType AS ENUM ('ORTHOGONALGRID','SPECIFIEDGRID','STRATIFIED','HELIX','POINTS');
CREATE TYPE StatsEvalStatusEnumType AS ENUM ('PASS','FAIL','INFORMATIONAL','UNDEFINED');
CREATE TYPE StatsValuesEnumType AS ENUM ('TOTNUM','EFFNUM','NUMSUB','AVG','DIFF','RMS','MAX','MIN','RANGE','AVGRNG','STDDEV','SKEW','KURT','NORM','PROVAR','ESTSTDV','UCL','LCL','UCLRNG','LCLRNG','NUMOOC','NUMOOT','NOOTHI','NOOTLO','CP','CPK','PP','PPK','CM','CMK','AV','REL_AV','EV','REL_EV','INTERACTION','REL_INTERACTION','RANDR','REL_RANDR','PV','REL_PV','TV','REL_TV','LNRTY','BIAS','REL_LNRTY','REL_BIAS','R_SQR','SLOPE','INTCPT','UPRCONFLIM','LWRCONFLIM','TDIST');
CREATE TYPE SubgroupStatsValuesEnumType AS ENUM ('TOTNUM','EFFNUM','AVG','DIFF','MAX','MIN','RANGE','NUMOOT','NOOTHI','NOOTLO');
CREATE TYPE SummaryStatsValuesEnumType AS ENUM ('AVG','MAX','MIN','RANGE','STDDEV');
CREATE TYPE SurfaceOfRevolutionPointSamplingStrategyEnumType AS ENUM ('ORTHOGONALGRID','BIRDCAGE','SPECIFIEDGRID','STRATIFIED','HELIX','POINTS');
CREATE TYPE SurfaceSubstituteFeatureAlgorithmEnumType AS ENUM ('LEASTSQUARES','BEZIER','NURBS','MINMAX','UNDEFINED');
CREATE TYPE ThreadClassEnumType AS ENUM ('1A','1B','2A','2AG','2B','3A','3B','EXT_3E','EXT_3F','EXT_3G','EXT_3H','EXT_4E','EXT_4F','EXT_4G','EXT_4H','4G','4H','EXT_5E','EXT_5F','EXT_5G','EXT_5H','5G','5H','EXT_6E','EXT_6F','EXT_6G','EXT_6H','6G','6H','EXT_7E','EXT_7F','EXT_7G','EXT_7H','7G','7H','EXT_8E','EXT_8F','EXT_8G','EXT_8H','8G','8H','EXT_9E','EXT_9F','EXT_9G','EXT_9H','INT','EXT','SE','G','UNDEFINED');
CREATE TYPE ThreadSeriesEnumType AS ENUM ('ACME','ACME_C','ACME_G','AMO','ANPT','BUTT','PUSH_BUTT','F_PTF','M','MJ','MJS','NC5_HF','NC5_CSF','NC5_ONF','NC5_IF','NC5_INF','NGO','NGS','NGT','NH','NHR','NPSC','NPSF','NPSH','NPSI','NPSL','NPSM','NPT','NPTF','PTF_SAE_SHORT','PTF_SPL_SHORT','PTF_SPL_EXTRA_SHORT','SGT','SPL_PTF','STUB_ACME','UN','UNC','UNF','UNEF','UNJ','UNJC','UNJF','UNJEF','UNR','UNRC','UNRF','UNREF','UNM','UNS','G','R','RC','RP','S','TR','UNDEFINED');
CREATE TYPE TimeDescriptionEnumType AS ENUM ('INSPECTION_START','INSPECTION_END','INTERMEDIATE');
CREATE TYPE TopologyEnumType AS ENUM ('UNKNOWN','PRESENT','ABSENT');
CREATE TYPE ValidityEnumType AS ENUM ('REPORTED','DUMMY','MOOT','DERIVED','SET');
DROP TABLE IF EXISTS ActionMethods;
CREATE TABLE ActionMethods (
	index  SERIAL PRIMARY KEY,
	__CoordinateMeasureFeatureMethodType integer[], -- index into table CoordinateMeasureFeatureMethodType 
	__GageMeasureFeatureMethodType integer[], -- index into table GageMeasureFeatureMethodType 
	__ManualMeasureFeatureMethodType integer[], -- index into table ManualMeasureFeatureMethodType 
	__OtherMeasureFeatureMethodType integer[]  -- index into table OtherMeasureFeatureMethodType 
) ;

DROP TABLE IF EXISTS ActualAngularValue;
CREATE TABLE ActualAngularValue (
	index  SERIAL PRIMARY KEY,
	angularUnit text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS ActualAreaValue;
CREATE TABLE ActualAreaValue (
	index  SERIAL PRIMARY KEY,
	areaUnit text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS ActualAxis;
CREATE TABLE ActualAxis (
	index  SERIAL PRIMARY KEY,
	_AxisPoint integer, -- index into table PointType 
	_Direction integer  -- index into table UnitVectorType 
) ;

DROP TABLE IF EXISTS ActualComponentSet;
CREATE TABLE ActualComponentSet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__ActualComponent integer[]  -- index into table ActualComponentType 
) ;

DROP TABLE IF EXISTS ActualComponent;
CREATE TABLE ActualComponent (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	SerialNumber text, 
	AdditionalChanges text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_Traceability integer, -- index into table ProductTraceabilityType 
	AsmPathId text  
) ;

DROP TABLE IF EXISTS ActualDatumFeature;
CREATE TABLE ActualDatumFeature (
	index  SERIAL PRIMARY KEY,
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	MaterialModifier MaterialModifierEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS ActualEndRadius;
CREATE TABLE ActualEndRadius (
	index  SERIAL PRIMARY KEY,
	_EndRadius integer, -- index into table LinearValueType 
	Expanded BOOLEAN  
) ;

DROP TABLE IF EXISTS ActualForceValue;
CREATE TABLE ActualForceValue (
	index  SERIAL PRIMARY KEY,
	forceUnit text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS ActualLinearValue;
CREATE TABLE ActualLinearValue (
	index  SERIAL PRIMARY KEY,
	linearUnit text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS ActualMassValue;
CREATE TABLE ActualMassValue (
	index  SERIAL PRIMARY KEY,
	massUnit text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS ActualOffsetAlignmentOperation;
CREATE TABLE ActualOffsetAlignmentOperation (
	index  SERIAL PRIMARY KEY,
	SequenceNumber integer NOT NULL, 
	SequenceNumber integer NOT NULL, 
	__Origin integer[]  -- index into table ActualOriginOffsetType 
) ;

DROP TABLE IF EXISTS ActualOriginOffset;
CREATE TABLE ActualOriginOffset (
	index  SERIAL PRIMARY KEY,
	_OriginEntity integer, -- index into table AlignmentFeatureType 
	OriginDirection text NOT NULL  
) ;

DROP TABLE IF EXISTS ActualPlane;
CREATE TABLE ActualPlane (
	index  SERIAL PRIMARY KEY,
	_Point integer, -- index into table ElementReferenceType 
	_Normal integer  -- index into table UnitVectorSimpleType 
) ;

DROP TABLE IF EXISTS ActualPointAndVector;
CREATE TABLE ActualPointAndVector (
	index  SERIAL PRIMARY KEY,
	_StartPoint integer, -- index into table PointSimpleType 
	_Vector integer  -- index into table UnitVectorType 
) ;

DROP TABLE IF EXISTS ActualPoint;
CREATE TABLE ActualPoint (
	index  SERIAL PRIMARY KEY,
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	xCombinedUncertainty text NOT NULL,-- attribute
	xMeanError text NOT NULL,-- attribute
	yCombinedUncertainty text NOT NULL,-- attribute
	yMeanError text NOT NULL,-- attribute
	zCombinedUncertainty text NOT NULL,-- attribute
	zMeanError text NOT NULL,-- attribute
	linearUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	validity text NOT NULL,-- attribute
	xDecimalPlaces text NOT NULL,-- attribute
	xSignificantFigures text NOT NULL,-- attribute
	xValidity text NOT NULL,-- attribute
	yDecimalPlaces text NOT NULL,-- attribute
	ySignificantFigures text NOT NULL,-- attribute
	yValidity text NOT NULL,-- attribute
	zDecimalPlaces text NOT NULL,-- attribute
	zSignificantFigures text NOT NULL,-- attribute
	zValidity text NOT NULL,-- attribute
	linearUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	validity text NOT NULL,-- attribute
	xDecimalPlaces text NOT NULL,-- attribute
	xSignificantFigures text NOT NULL,-- attribute
	xValidity text NOT NULL,-- attribute
	yDecimalPlaces text NOT NULL,-- attribute
	ySignificantFigures text NOT NULL,-- attribute
	yValidity text NOT NULL,-- attribute
	zDecimalPlaces text NOT NULL,-- attribute
	zSignificantFigures text NOT NULL,-- attribute
	zValidity text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS ActualPressureValue;
CREATE TABLE ActualPressureValue (
	index  SERIAL PRIMARY KEY,
	pressureUnit text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS ActualProductTraceability;
CREATE TABLE ActualProductTraceability (
	index  SERIAL PRIMARY KEY,
	SampleNumber text, 
	LotNumber text, 
	ReportNumber text, 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_FixtureId integer, -- index into table QIFReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	InspectionStart TIMESTAMP, 
	InspectionEnd TIMESTAMP, 
	_InspectionSoftwareItems integer, -- index into table InspectionSoftwareItemsType 
	_InspectionProgram integer, -- index into table InspectionProgramType 
	_InspectionOperator integer, -- index into table EmployeeType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ProductEnvironments integer, -- index into table EnvironmentsType 
	_Errors integer  -- index into table ErrorsType 
) ;

DROP TABLE IF EXISTS ActualSpeedValue;
CREATE TABLE ActualSpeedValue (
	index  SERIAL PRIMARY KEY,
	speedUnit text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS ActualSubgroup;
CREATE TABLE ActualSubgroup (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	_ActualIds integer  -- index into table StatsArrayIdType 
) ;

DROP TABLE IF EXISTS ActualTemperatureValue;
CREATE TABLE ActualTemperatureValue (
	index  SERIAL PRIMARY KEY,
	temperatureUnit text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS ActualTimeValue;
CREATE TABLE ActualTimeValue (
	index  SERIAL PRIMARY KEY,
	timeUnit text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS ActualUnitVector;
CREATE TABLE ActualUnitVector (
	index  SERIAL PRIMARY KEY,
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	xCombinedUncertainty text NOT NULL,-- attribute
	xMeanError text NOT NULL,-- attribute
	yCombinedUncertainty text NOT NULL,-- attribute
	yMeanError text NOT NULL,-- attribute
	zCombinedUncertainty text NOT NULL,-- attribute
	zMeanError text NOT NULL,-- attribute
	linearUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	validity text NOT NULL,-- attribute
	xDecimalPlaces text NOT NULL,-- attribute
	xSignificantFigures text NOT NULL,-- attribute
	xValidity text NOT NULL,-- attribute
	yDecimalPlaces text NOT NULL,-- attribute
	ySignificantFigures text NOT NULL,-- attribute
	yValidity text NOT NULL,-- attribute
	zDecimalPlaces text NOT NULL,-- attribute
	zSignificantFigures text NOT NULL,-- attribute
	zValidity text NOT NULL,-- attribute
	linearUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	validity text NOT NULL,-- attribute
	xDecimalPlaces text NOT NULL,-- attribute
	xSignificantFigures text NOT NULL,-- attribute
	xValidity text NOT NULL,-- attribute
	yDecimalPlaces text NOT NULL,-- attribute
	ySignificantFigures text NOT NULL,-- attribute
	yValidity text NOT NULL,-- attribute
	zDecimalPlaces text NOT NULL,-- attribute
	zSignificantFigures text NOT NULL,-- attribute
	zValidity text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS ActualUserDefinedUnitValue;
CREATE TABLE ActualUserDefinedUnitValue (
	index  SERIAL PRIMARY KEY,
	unitName text,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS ActualZoneAxis;
CREATE TABLE ActualZoneAxis (
	index  SERIAL PRIMARY KEY,
	_ActualPointType integer, -- index into table ActualPointType 
	_AxisPoint integer, -- index into table PointType 
	Direction text NOT NULL, 
	_ActualPointType integer, -- index into table ActualPointType 
	_AxisPoint integer, -- index into table PointType 
	Direction text NOT NULL, 
	_Length integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS ActualZoneRadii;
CREATE TABLE ActualZoneRadii (
	index  SERIAL PRIMARY KEY,
	_MinRadius integer, -- index into table LinearValueType 
	_MaxRadius integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS AddressDescription;
CREATE TABLE AddressDescription (
	index  SERIAL PRIMARY KEY,
	AddressDescriptionEnum AddressDescriptionEnumType NOT NULL, 
	OtherAddressDescription text NOT NULL  
) ;

DROP TABLE IF EXISTS Aggregate12Core;
CREATE TABLE Aggregate12Core (
	index  SERIAL PRIMARY KEY,
	domain text,-- attribute
	domain text,-- attribute
	_SubCurves integer  -- index into table ArraySubCurve13Type 
) ;

DROP TABLE IF EXISTS Aggregate12;
CREATE TABLE Aggregate12 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Aggregate12Core integer  -- index into table Aggregate12CoreType 
) ;

DROP TABLE IF EXISTS Aggregate13Core;
CREATE TABLE Aggregate13Core (
	index  SERIAL PRIMARY KEY,
	domain text,-- attribute
	domain text,-- attribute
	_SubCurves integer  -- index into table ArraySubCurve13Type 
) ;

DROP TABLE IF EXISTS Aggregate13;
CREATE TABLE Aggregate13 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Aggregate13Core integer, -- index into table Aggregate13CoreType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS AlignmentFeature;
CREATE TABLE AlignmentFeature (
	index  SERIAL PRIMARY KEY,
	_DatumDefinitionId integer, -- index into table QIFReferenceFullType 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS AlignmentOperations;
CREATE TABLE AlignmentOperations (
	index  SERIAL PRIMARY KEY,
	__ActualOffsetAlignmentOperationType integer[], -- index into table ActualOffsetAlignmentOperationType 
	__BestFitAlignmentOperationType integer[], -- index into table BestFitAlignmentOperationType 
	__DatumPrecedenceAlignmentOperationType integer[], -- index into table DatumPrecedenceAlignmentOperationType 
	__MachineCoordinateSystemOperationType integer[], -- index into table MachineCoordinateSystemOperationType 
	__NominalOffsetAlignmentOperationType integer[], -- index into table NominalOffsetAlignmentOperationType 
	__NominalRotationAlignmentOperationType integer[], -- index into table NominalRotationAlignmentOperationType 
	__PrimaryAlignmentOperationType integer[], -- index into table PrimaryAlignmentOperationType 
	__SecondaryAlignmentOperationType integer[], -- index into table SecondaryAlignmentOperationType 
	_BaseCoordinateSystemId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS And;
CREATE TABLE And (
	index  SERIAL PRIMARY KEY,
	__AndType integer[], -- index into table AndType 
	__BooleanEqualType integer[], -- index into table BooleanEqualType 
	__GreaterOrEqualType integer[], -- index into table GreaterOrEqualType 
	__GreaterThanType integer[], -- index into table GreaterThanType 
	__LessOrEqualType integer[], -- index into table LessOrEqualType 
	__LessThanType integer[], -- index into table LessThanType 
	__NotType integer[], -- index into table NotType 
	__OrType integer[]  -- index into table OrType 
) ;

DROP TABLE IF EXISTS AngleBetweenCharacteristicActual;
CREATE TABLE AngleBetweenCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_AnalysisVector integer, -- index into table ActualUnitVectorType 
	_Vertex integer  -- index into table PointType 
) ;

DROP TABLE IF EXISTS AngleBetweenCharacteristicDefinition;
CREATE TABLE AngleBetweenCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS AngleBetweenCharacteristicItem;
CREATE TABLE AngleBetweenCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS AngleBetweenCharacteristicNominal;
CREATE TABLE AngleBetweenCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	AnalysisVector text, 
	AnalysisMode AngleBetweenAnalysisModeEnumType NOT NULL, 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_MeasurementDirective integer, -- index into table MeasurementDirectiveType 
	_ActualPointType integer, -- index into table ActualPointType 
	_Vertex integer, -- index into table PointType 
	_ZoneLimit integer  -- index into table CharacteristicDirectionalZoneLimitType 
) ;

DROP TABLE IF EXISTS AngleBetweenCharacteristicStatsEval;
CREATE TABLE AngleBetweenCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS AngleCharacteristicActual;
CREATE TABLE AngleCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS AngleCharacteristicDefinition;
CREATE TABLE AngleCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS AngleCharacteristicItem;
CREATE TABLE AngleCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS AngleCharacteristicNominal;
CREATE TABLE AngleCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS AngleCharacteristicStatsEval;
CREATE TABLE AngleCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS AngleFromCharacteristicActual;
CREATE TABLE AngleFromCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_AnalysisVector integer, -- index into table ActualUnitVectorType 
	_Vertex integer  -- index into table PointType 
) ;

DROP TABLE IF EXISTS AngleFromCharacteristicDefinition;
CREATE TABLE AngleFromCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS AngleFromCharacteristicItem;
CREATE TABLE AngleFromCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS AngleFromCharacteristicNominal;
CREATE TABLE AngleFromCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_OriginReference integer, -- index into table OriginReferenceType 
	AnalysisVector text, 
	AnalysisMode AngleBetweenAnalysisModeEnumType NOT NULL, 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_MeasurementDirective integer, -- index into table MeasurementDirectiveType 
	_ActualPointType integer, -- index into table ActualPointType 
	_Vertex integer, -- index into table PointType 
	_ZoneLimit integer  -- index into table CharacteristicDirectionalZoneLimitType 
) ;

DROP TABLE IF EXISTS AngleFromCharacteristicStatsEval;
CREATE TABLE AngleFromCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS AngleFunctionDiscrete;
CREATE TABLE AngleFunctionDiscrete (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	N text,-- attribute
	DomainValues FLOAT[] NOT NULL, 
	RangeValues FLOAT[] NOT NULL, 
	DomainValues FLOAT[] NOT NULL, 
	RangeValues FLOAT[] NOT NULL, 
	DomainLinearUnit text NOT NULL, 
	RangeAngularUnit text NOT NULL  
) ;

DROP TABLE IF EXISTS AngleRange;
CREATE TABLE AngleRange (
	index  SERIAL PRIMARY KEY,
	angularUnit text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS AngularCharacteristicStatsEval;
CREATE TABLE AngularCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS AngularCoordinateCharacteristicActual;
CREATE TABLE AngularCoordinateCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_TypeOfCoordinates integer, -- index into table TypeOfCoordinatesType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_TypeOfCoordinates integer, -- index into table TypeOfCoordinatesType 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS AngularCoordinateCharacteristicDefinition;
CREATE TABLE AngularCoordinateCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS AngularCoordinateCharacteristicItem;
CREATE TABLE AngularCoordinateCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS AngularCoordinateCharacteristicNominal;
CREATE TABLE AngularCoordinateCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	Direction AngularCoordinateDirectionEnumType NOT NULL, 
	_CoordinateSystemId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS AngularCoordinateCharacteristicStatsEval;
CREATE TABLE AngularCoordinateCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS AngularToleranceDefinition;
CREATE TABLE AngularToleranceDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS AngularTolerance;
CREATE TABLE AngularTolerance (
	index  SERIAL PRIMARY KEY,
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_DefinitionId integer, -- index into table QIFReferenceFullType 
	DefinedAsLimit BOOLEAN NOT NULL  
) ;

DROP TABLE IF EXISTS AngularUnit;
CREATE TABLE AngularUnit (
	index  SERIAL PRIMARY KEY,
	SIUnitName text, 
	UnitName text NOT NULL, 
	_UnitConversion integer  -- index into table UnitConversionType 
) ;

DROP TABLE IF EXISTS AngularValue;
CREATE TABLE AngularValue (
	index  SERIAL PRIMARY KEY,
	angularUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS AngularityCharacteristicActual;
CREATE TABLE AngularityCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	DatumsOk BOOLEAN, 
	_Bonus integer, -- index into table ActualLinearValueType 
	_ReferenceLength integer, -- index into table LinearValueType 
	_DRFTransformActualId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	DatumsOk BOOLEAN, 
	_Bonus integer, -- index into table ActualLinearValueType 
	_ReferenceLength integer, -- index into table LinearValueType 
	_DRFTransformActualId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS AngularityCharacteristicDefinition;
CREATE TABLE AngularityCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	MaterialCondition MaterialModifierEnumType NOT NULL, 
	_ZoneShape integer, -- index into table PositionZoneShapeType 
	TangentPlane BOOLEAN, 
	_MaximumToleranceValue integer, -- index into table LinearValueType 
	_ProjectedToleranceZoneValue integer, -- index into table LinearValueType 
	EachRadialElement BOOLEAN, 
	EachElement BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	MaterialCondition MaterialModifierEnumType NOT NULL, 
	_ZoneShape integer, -- index into table PositionZoneShapeType 
	TangentPlane BOOLEAN, 
	_MaximumToleranceValue integer, -- index into table LinearValueType 
	_ProjectedToleranceZoneValue integer, -- index into table LinearValueType 
	EachRadialElement BOOLEAN, 
	EachElement BOOLEAN  
) ;

DROP TABLE IF EXISTS AngularityCharacteristicItem;
CREATE TABLE AngularityCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS AngularityCharacteristicNominal;
CREATE TABLE AngularityCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_CircularZoneLimit integer, -- index into table CharacteristicCircularZoneLimitType 
	_DirectionalZoneLimit integer, -- index into table CharacteristicDirectionalZoneLimitType 
	_RectangularZoneLimit integer, -- index into table CharacteristicRectangularZoneLimitType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_CircularZoneLimit integer, -- index into table CharacteristicCircularZoneLimitType 
	_DirectionalZoneLimit integer, -- index into table CharacteristicDirectionalZoneLimitType 
	_RectangularZoneLimit integer, -- index into table CharacteristicRectangularZoneLimitType 
	_Angle integer  -- index into table AngularValueType 
) ;

DROP TABLE IF EXISTS AngularityCharacteristicStatsEval;
CREATE TABLE AngularityCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	_BonusStats integer, -- index into table StatsLinearType 
	_ReferenceLengthStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	_BonusStats integer, -- index into table StatsLinearType 
	_ReferenceLengthStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS Application;
CREATE TABLE Application (
	index  SERIAL PRIMARY KEY,
	Name text NOT NULL, 
	Organization text, 
	AddonName text, 
	AddonOrganization text  
) ;

DROP TABLE IF EXISTS ArcActualDetermination;
CREATE TABLE ArcActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS ArcBestFit;
CREATE TABLE ArcBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ArcCast;
CREATE TABLE ArcCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ArcCheckedFeature;
CREATE TABLE ArcCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS ArcChecked;
CREATE TABLE ArcChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS ArcCircular12Core;
CREATE TABLE ArcCircular12Core (
	index  SERIAL PRIMARY KEY,
	turned text NOT NULL,-- attribute
	domain text,-- attribute
	domain text,-- attribute
	Radius DOUBLE PRECISION NOT NULL, 
	Center FLOAT[2] NOT NULL, 
	DirBeg FLOAT[2] NOT NULL  
) ;

DROP TABLE IF EXISTS ArcCircular12;
CREATE TABLE ArcCircular12 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_ArcCircular12Core integer  -- index into table ArcCircular12CoreType 
) ;

DROP TABLE IF EXISTS ArcCircular13Core;
CREATE TABLE ArcCircular13Core (
	index  SERIAL PRIMARY KEY,
	domain text,-- attribute
	domain text,-- attribute
	Radius DOUBLE PRECISION NOT NULL, 
	Center FLOAT[3] NOT NULL, 
	DirBeg FLOAT[3] NOT NULL, 
	Normal FLOAT[3] NOT NULL  
) ;

DROP TABLE IF EXISTS ArcCircular13;
CREATE TABLE ArcCircular13 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_ArcCircular13Core integer, -- index into table ArcCircular13CoreType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS ArcConic12Core;
CREATE TABLE ArcConic12Core (
	index  SERIAL PRIMARY KEY,
	form text,-- attribute
	turned text NOT NULL,-- attribute
	domain text,-- attribute
	domain text,-- attribute
	A DOUBLE PRECISION NOT NULL, 
	B DOUBLE PRECISION NOT NULL, 
	Center FLOAT[2] NOT NULL, 
	DirBeg FLOAT[2] NOT NULL  
) ;

DROP TABLE IF EXISTS ArcConic12;
CREATE TABLE ArcConic12 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_ArcConic12Core integer  -- index into table ArcConic12CoreType 
) ;

DROP TABLE IF EXISTS ArcConic13Core;
CREATE TABLE ArcConic13Core (
	index  SERIAL PRIMARY KEY,
	form text,-- attribute
	domain text,-- attribute
	domain text,-- attribute
	A DOUBLE PRECISION NOT NULL, 
	B DOUBLE PRECISION NOT NULL, 
	Center FLOAT[3] NOT NULL, 
	DirBeg FLOAT[3] NOT NULL, 
	Normal FLOAT[3] NOT NULL  
) ;

DROP TABLE IF EXISTS ArcConic13;
CREATE TABLE ArcConic13 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_ArcConic13Core integer, -- index into table ArcConic13CoreType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS ArcConstructionMethod;
CREATE TABLE ArcConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Projection integer, -- index into table ArcProjectionType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_Transform integer, -- index into table ConicalSegmentTransformType 
	_FromScan integer, -- index into table CylinderFromScanType 
	_Extract integer  -- index into table PlaneExtractType 
) ;

DROP TABLE IF EXISTS ArcCopy;
CREATE TABLE ArcCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseArc integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ArcExtract;
CREATE TABLE ArcExtract (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_CurveFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ArcFeatureActual;
CREATE TABLE ArcFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Normal integer, -- index into table UnitVectorSimpleType 
	_Radius integer, -- index into table double 
	_RadiusMin integer, -- index into table ActualLinearValueType 
	_RadiusMax integer, -- index into table ActualLinearValueType 
	_Sweep integer, -- index into table SweepType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS ArcFeatureDefinition;
CREATE TABLE ArcFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	InternalExternal InternalExternalEnumType NOT NULL, 
	_Radius integer  -- index into table double 
) ;

DROP TABLE IF EXISTS ArcFeatureItem;
CREATE TABLE ArcFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS ArcFeatureNominal;
CREATE TABLE ArcFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_ActualPointType integer, -- index into table ActualPointType 
	_Location integer, -- index into table LocationType 
	_Sweep integer, -- index into table SweepType 
	Normal text NOT NULL  
) ;

DROP TABLE IF EXISTS ArcFromScan;
CREATE TABLE ArcFromScan (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_SurfaceFeature integer, -- index into table BaseFeatureType 
	_SearchRadius integer, -- index into table LinearValueType 
	_Depth integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS ArcPointSamplingStrategy;
CREATE TABLE ArcPointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum OpenCurvePointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS ArcProjection;
CREATE TABLE ArcProjection (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_ProjectionArc integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_ProjectionPlane integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ArcRecomp;
CREATE TABLE ArcRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS ArcTransform;
CREATE TABLE ArcTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseArc integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS AreaTolerance;
CREATE TABLE AreaTolerance (
	index  SERIAL PRIMARY KEY,
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	DefinedAsLimit BOOLEAN NOT NULL  
) ;

DROP TABLE IF EXISTS AreaUnit;
CREATE TABLE AreaUnit (
	index  SERIAL PRIMARY KEY,
	SIUnitName text, 
	UnitName text NOT NULL, 
	_UnitConversion integer  -- index into table UnitConversionType 
) ;

DROP TABLE IF EXISTS AreaValue;
CREATE TABLE AreaValue (
	index  SERIAL PRIMARY KEY,
	areaUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS ArithmeticCharacteristicParameter;
CREATE TABLE ArithmeticCharacteristicParameter (
	index  SERIAL PRIMARY KEY,
	CharacteristicTypeEnum CharacteristicTypeEnumType NOT NULL, 
	Parameter text NOT NULL  
) ;

DROP TABLE IF EXISTS ArithmeticConstant;
CREATE TABLE ArithmeticConstant (
	index  SERIAL PRIMARY KEY,
	val text -- attribute
) ;

DROP TABLE IF EXISTS ArithmeticFeatureParameter;
CREATE TABLE ArithmeticFeatureParameter (
	index  SERIAL PRIMARY KEY,
	Parameter text NOT NULL  
) ;

DROP TABLE IF EXISTS ArrayBinary;
CREATE TABLE ArrayBinary (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	sizeElement text -- attribute
) ;

DROP TABLE IF EXISTS ArrayDouble;
CREATE TABLE ArrayDouble (
	index  SERIAL PRIMARY KEY,
	N text -- attribute
) ;

DROP TABLE IF EXISTS ArrayI2;
CREATE TABLE ArrayI2 (
	index  SERIAL PRIMARY KEY,
	N text -- attribute
) ;

DROP TABLE IF EXISTS ArrayI3;
CREATE TABLE ArrayI3 (
	index  SERIAL PRIMARY KEY,
	N text -- attribute
) ;

DROP TABLE IF EXISTS ArrayInt;
CREATE TABLE ArrayInt (
	index  SERIAL PRIMARY KEY,
	N text -- attribute
) ;

DROP TABLE IF EXISTS ArrayNatural;
CREATE TABLE ArrayNatural (
	index  SERIAL PRIMARY KEY,
	N text -- attribute
) ;

DROP TABLE IF EXISTS ArrayPoint2d;
CREATE TABLE ArrayPoint2d (
	index  SERIAL PRIMARY KEY,
	N text -- attribute
) ;

DROP TABLE IF EXISTS ArrayReferenceFull;
CREATE TABLE ArrayReferenceFull (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__Id integer[]  -- index into table QIFReferenceType 
) ;

DROP TABLE IF EXISTS ArrayReference;
CREATE TABLE ArrayReference (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	Id text NOT NULL  
) ;

DROP TABLE IF EXISTS ArraySubCurve12;
CREATE TABLE ArraySubCurve12 (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__SubCurve integer[]  -- index into table Curve12OrientedType 
) ;

DROP TABLE IF EXISTS ArraySubCurve13;
CREATE TABLE ArraySubCurve13 (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__SubCurve integer[]  -- index into table Curve12OrientedType 
) ;

DROP TABLE IF EXISTS ArrayUnitVector;
CREATE TABLE ArrayUnitVector (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	linearUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	validity text NOT NULL,-- attribute
	xDecimalPlaces text NOT NULL,-- attribute
	xSignificantFigures text NOT NULL,-- attribute
	xValidity text NOT NULL,-- attribute
	yDecimalPlaces text NOT NULL,-- attribute
	ySignificantFigures text NOT NULL,-- attribute
	yValidity text NOT NULL,-- attribute
	zDecimalPlaces text NOT NULL,-- attribute
	zSignificantFigures text NOT NULL,-- attribute
	zValidity text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS ArrayUnsignedByte;
CREATE TABLE ArrayUnsignedByte (
	index  SERIAL PRIMARY KEY,
	N text -- attribute
) ;

DROP TABLE IF EXISTS AsmPath;
CREATE TABLE AsmPath (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	_ComponentIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS AsmPaths;
CREATE TABLE AsmPaths (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__AsmPath integer[]  -- index into table AsmPathType 
) ;

DROP TABLE IF EXISTS AssemblySet;
CREATE TABLE AssemblySet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__Assembly integer[]  -- index into table ElementReferenceType 
) ;

DROP TABLE IF EXISTS Assembly;
CREATE TABLE Assembly (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	QPId text, 
	ModelNumber text, 
	Description text, 
	Version text, 
	Material text, 
	_SecurityClassification integer, -- index into table SecurityClassificationType 
	ExportControlClassification text, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalIds integer, -- index into table ArrayReferenceFullType 
	_NoteIds integer, -- index into table ArrayReferenceFullType 
	_PartNoteIds integer, -- index into table ArrayReferenceFullType 
	_DatumDefinitionIds integer, -- index into table ArrayReferenceFullType 
	_DatumTargetDefinitionIds integer, -- index into table ArrayReferenceFullType 
	_DatumReferenceFrameIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	QPId text, 
	ModelNumber text, 
	Description text, 
	Version text, 
	Material text, 
	_SecurityClassification integer, -- index into table SecurityClassificationType 
	ExportControlClassification text, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalIds integer, -- index into table ArrayReferenceFullType 
	_NoteIds integer, -- index into table ArrayReferenceFullType 
	_PartNoteIds integer, -- index into table ArrayReferenceFullType 
	_DatumDefinitionIds integer, -- index into table ArrayReferenceFullType 
	_DatumTargetDefinitionIds integer, -- index into table ArrayReferenceFullType 
	_DatumReferenceFrameIds integer, -- index into table ArrayReferenceFullType 
	_ComponentIds integer, -- index into table ArrayReferenceFullType 
	_DefinitionInternal integer, -- index into table InternalPartAssemblyType 
	_DefinitionExternal integer  -- index into table DefinitionExternalType 
) ;

DROP TABLE IF EXISTS AssignableCause;
CREATE TABLE AssignableCause (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text NOT NULL, 
	AssignableCauseEnum AssignableCauseEnumType NOT NULL, 
	_CorrectiveActionIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS AssignableCauses;
CREATE TABLE AssignableCauses (
	index  SERIAL PRIMARY KEY,
	__AssignableCause integer[]  -- index into table AssignableCauseType 
) ;

DROP TABLE IF EXISTS AttributeBool;
CREATE TABLE AttributeBool (
	index  SERIAL PRIMARY KEY,
	value text,-- attribute
	name text -- attribute
) ;

DROP TABLE IF EXISTS AttributeD1;
CREATE TABLE AttributeD1 (
	index  SERIAL PRIMARY KEY,
	value text,-- attribute
	name text -- attribute
) ;

DROP TABLE IF EXISTS AttributeD3;
CREATE TABLE AttributeD3 (
	index  SERIAL PRIMARY KEY,
	value text,-- attribute
	name text -- attribute
) ;

DROP TABLE IF EXISTS AttributeI1;
CREATE TABLE AttributeI1 (
	index  SERIAL PRIMARY KEY,
	value text,-- attribute
	name text -- attribute
) ;

DROP TABLE IF EXISTS AttributeI2;
CREATE TABLE AttributeI2 (
	index  SERIAL PRIMARY KEY,
	value text,-- attribute
	name text -- attribute
) ;

DROP TABLE IF EXISTS AttributeQPId;
CREATE TABLE AttributeQPId (
	index  SERIAL PRIMARY KEY,
	value text,-- attribute
	name text -- attribute
) ;

DROP TABLE IF EXISTS AttributeStr;
CREATE TABLE AttributeStr (
	index  SERIAL PRIMARY KEY,
	value text,-- attribute
	name text -- attribute
) ;

DROP TABLE IF EXISTS AttributeUser;
CREATE TABLE AttributeUser (
	index  SERIAL PRIMARY KEY,
	nameUserAttribute text,-- attribute
	name text,-- attribute
	name text,-- attribute
	_UserDataXML integer, -- index into table UserDataXMLType 
	_UserDataBinary integer  -- index into table BinaryDataType 
) ;

DROP TABLE IF EXISTS Attributes;
CREATE TABLE Attributes (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__AttributeUserType integer[]  -- index into table AttributeUserType 
) ;

DROP TABLE IF EXISTS Author;
CREATE TABLE Author (
	index  SERIAL PRIMARY KEY,
	Name text, 
	Organization text  
) ;

DROP TABLE IF EXISTS AuxiliarySet;
CREATE TABLE AuxiliarySet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__PlaneClippingType integer[], -- index into table PlaneClippingType 
	__PlaneReferenceType integer[]  -- index into table PlaneReferenceType 
) ;

DROP TABLE IF EXISTS AverageFeature;
CREATE TABLE AverageFeature (
	index  SERIAL PRIMARY KEY,
	_ArcFeatureActualType integer, -- index into table ArcFeatureActualType 
	_CircleFeatureActualType integer, -- index into table CircleFeatureActualType 
	_CompoundFeatureActualType integer, -- index into table CompoundFeatureActualType 
	_ConeFeatureActualType integer, -- index into table ConeFeatureActualType 
	_ConicalSegmentFeatureActualType integer, -- index into table ConicalSegmentFeatureActualType 
	_CuboidFeatureActualType integer, -- index into table CuboidFeatureActualType 
	_CylinderFeatureActualType integer, -- index into table CylinderFeatureActualType 
	_CylindricalSegmentFeatureActualType integer, -- index into table CylindricalSegmentFeatureActualType 
	_EdgePointFeatureActualType integer, -- index into table EdgePointFeatureActualType 
	_EllipseFeatureActualType integer, -- index into table EllipseFeatureActualType 
	_ElongatedCylinderFeatureActualType integer, -- index into table ElongatedCylinderFeatureActualType 
	_ExtrudedCrossSectionFeatureActualType integer, -- index into table ExtrudedCrossSectionFeatureActualType 
	_GenericFeatureActualType integer, -- index into table GenericFeatureActualType 
	_LineFeatureActualType integer, -- index into table LineFeatureActualType 
	_OppositeLinesFeatureActualType integer, -- index into table OppositeLinesFeatureActualType 
	_OppositePlanesFeatureActualType integer, -- index into table OppositePlanesFeatureActualType 
	_PatternFeatureActualType integer, -- index into table PatternFeatureActualType 
	_PlaneFeatureActualType integer, -- index into table PlaneFeatureActualType 
	_PointDefinedCurveFeatureActualType integer, -- index into table PointDefinedCurveFeatureActualType 
	_PointDefinedSurfaceFeatureActualType integer, -- index into table PointDefinedSurfaceFeatureActualType 
	_PointFeatureActualType integer, -- index into table PointFeatureActualType 
	_ProfileGroupFeatureActualType integer, -- index into table ProfileGroupFeatureActualType 
	_RunoutGroupFeatureActualType integer, -- index into table RunoutGroupFeatureActualType 
	_SphereFeatureActualType integer, -- index into table SphereFeatureActualType 
	_SphericalSegmentFeatureActualType integer, -- index into table SphericalSegmentFeatureActualType 
	_SurfaceOfRevolutionFeatureActualType integer, -- index into table SurfaceOfRevolutionFeatureActualType 
	_ThreadedFeatureActualType integer, -- index into table ThreadedFeatureActualType 
	_ToroidalSegmentFeatureActualType integer, -- index into table ToroidalSegmentFeatureActualType 
	_TorusFeatureActualType integer, -- index into table TorusFeatureActualType 
	_ActualIds integer  -- index into table StatsArrayIdType 
) ;

DROP TABLE IF EXISTS AverageFeatures;
CREATE TABLE AverageFeatures (
	index  SERIAL PRIMARY KEY,
	__AverageFeature integer[]  -- index into table AverageFeatureType 
) ;

DROP TABLE IF EXISTS AxialDifferentialScale;
CREATE TABLE AxialDifferentialScale (
	index  SERIAL PRIMARY KEY,
	XScaleFactor DECIMAL(10,2) NOT NULL, 
	XaxisDirection text NOT NULL, 
	YScaleFactor DECIMAL(10,2) NOT NULL, 
	YaxisDirection text NOT NULL, 
	ZScaleFactor DECIMAL(10,2) NOT NULL, 
	ZaxisDirection text NOT NULL  
) ;

DROP TABLE IF EXISTS Axis;
CREATE TABLE Axis (
	index  SERIAL PRIMARY KEY,
	_ActualPointType integer, -- index into table ActualPointType 
	_AxisPoint integer, -- index into table PointType 
	Direction text NOT NULL  
) ;

DROP TABLE IF EXISTS B89Test;
CREATE TABLE B89Test (
	index  SERIAL PRIMARY KEY,
	_XLinearAccuracy integer, -- index into table LinearValueType 
	_YLinearAccuracy integer, -- index into table LinearValueType 
	_ZLinearAccuracy integer, -- index into table LinearValueType 
	_OffsetVolumetricPerformance integer, -- index into table LinearValueType 
	_VolumetricPerformance integer, -- index into table LinearValueType 
	_Repeatability integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS Balloon;
CREATE TABLE Balloon (
	index  SERIAL PRIMARY KEY,
	sub text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS BaseFeaturePointList;
CREATE TABLE BaseFeaturePointList (
	index  SERIAL PRIMARY KEY,
	__BaseFeaturePointSet integer[]  -- index into table BaseFeaturePointSetType 
) ;

DROP TABLE IF EXISTS BaseFeaturePointSet;
CREATE TABLE BaseFeaturePointSet (
	index  SERIAL PRIMARY KEY,
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_PointIndex integer, -- index into table PointIndexType 
	ReferencedComponent ReferencedComponentEnumType NOT NULL, 
	SequenceNumber integer NOT NULL  
) ;

DROP TABLE IF EXISTS BaseFeature;
CREATE TABLE BaseFeature (
	index  SERIAL PRIMARY KEY,
	ReferencedComponent ReferencedComponentEnumType NOT NULL, 
	_FeatureItemId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS BestFitAlignmentOperation;
CREATE TABLE BestFitAlignmentOperation (
	index  SERIAL PRIMARY KEY,
	SequenceNumber integer NOT NULL, 
	SequenceNumber integer NOT NULL, 
	_DegreesOfFreedom integer, -- index into table DegreesOfFreedomType 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS BiasStudyPlan;
CREATE TABLE BiasStudyPlan (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	NumberOfSamples integer NOT NULL, 
	SubgroupSize integer, 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	NumberOfSamples integer NOT NULL, 
	SubgroupSize integer, 
	_MeasurementDeviceIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS BiasStudyResults;
CREATE TABLE BiasStudyResults (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	SampleSize integer NOT NULL, 
	_MeasurementDeviceIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS BinaryData;
CREATE TABLE BinaryData (
	index  SERIAL PRIMARY KEY,
	N text -- attribute
) ;

DROP TABLE IF EXISTS BodySet;
CREATE TABLE BodySet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__Body integer[]  -- index into table BodyType 
) ;

DROP TABLE IF EXISTS Body;
CREATE TABLE Body (
	index  SERIAL PRIMARY KEY,
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Transform integer, -- index into table ConicalSegmentTransformType 
	_ShellIds integer, -- index into table ArrayReferenceType 
	_FaceIds integer, -- index into table ArrayReferenceType 
	_LoopIds integer, -- index into table ArrayReferenceType 
	_EdgeIds integer, -- index into table ArrayReferenceType 
	_VertexIds integer  -- index into table ArrayReferenceType 
) ;

DROP TABLE IF EXISTS BooleanEqual;
CREATE TABLE BooleanEqual (
	index  SERIAL PRIMARY KEY,
	__AndType integer[], -- index into table AndType 
	__BooleanEqualType integer[], -- index into table BooleanEqualType 
	__GreaterOrEqualType integer[], -- index into table GreaterOrEqualType 
	__GreaterThanType integer[], -- index into table GreaterThanType 
	__LessOrEqualType integer[], -- index into table LessOrEqualType 
	__LessThanType integer[], -- index into table LessThanType 
	__NotType integer[], -- index into table NotType 
	__OrType integer[], -- index into table OrType 
	__AndType integer[], -- index into table AndType 
	__BooleanEqualType integer[], -- index into table BooleanEqualType 
	__GreaterOrEqualType integer[], -- index into table GreaterOrEqualType 
	__GreaterThanType integer[], -- index into table GreaterThanType 
	__LessOrEqualType integer[], -- index into table LessOrEqualType 
	__LessThanType integer[], -- index into table LessThanType 
	__NotType integer[], -- index into table NotType 
	__OrType integer[]  -- index into table OrType 
) ;

DROP TABLE IF EXISTS Bottom;
CREATE TABLE Bottom (
	index  SERIAL PRIMARY KEY,
	BottomEnum BottomEnumType NOT NULL, 
	OtherBottom text NOT NULL  
) ;

DROP TABLE IF EXISTS BoundingBox;
CREATE TABLE BoundingBox (
	index  SERIAL PRIMARY KEY,
	_Length integer, -- index into table LinearValueType 
	_Width integer, -- index into table LinearValueType 
	_Height integer  -- index into table double 
) ;

DROP TABLE IF EXISTS CADCoordinateSystem;
CREATE TABLE CADCoordinateSystem (
	index  SERIAL PRIMARY KEY,
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_CoordinateSystemCore integer, -- index into table CoordinateSystemCoreType 
	_TransformInstanceType integer, -- index into table TransformInstanceType 
	_TransformMatrixType integer  -- index into table TransformMatrixType 
) ;

DROP TABLE IF EXISTS CMMAccuracy;
CREATE TABLE CMMAccuracy (
	index  SERIAL PRIMARY KEY,
	_MinTemperature integer, -- index into table TemperatureValueType 
	_MaxTemperature integer, -- index into table TemperatureValueType 
	_B89TestType integer, -- index into table B89TestType 
	_FPSTestType integer, -- index into table FPSTestType 
	_ISO10360TestType integer, -- index into table ISO10360TestType 
	_PointAccuracyTestType integer  -- index into table PointAccuracyTestType 
) ;

DROP TABLE IF EXISTS CMMAxisDirections;
CREATE TABLE CMMAxisDirections (
	index  SERIAL PRIMARY KEY,
	XAxisDirection CMMDirectionEnumType NOT NULL, 
	YAxisDirection CMMDirectionEnumType NOT NULL, 
	ZAxisDirection CMMDirectionEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS CMMGeometry;
CREATE TABLE CMMGeometry (
	index  SERIAL PRIMARY KEY,
	CMMGeometryEnum CMMGeometryEnumType NOT NULL, 
	OtherCMMGeometry text NOT NULL  
) ;

DROP TABLE IF EXISTS CMMScale;
CREATE TABLE CMMScale (
	index  SERIAL PRIMARY KEY,
	ScaleMaterial text NOT NULL, 
	ScaleCoefficientOfExpansion DECIMAL(10,2) NOT NULL, 
	ScaleCoefficientOfExpansionUncertainty DECIMAL(10,2) NOT NULL, 
	TypeOfScale text NOT NULL, 
	_ScaleResolution integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS CMMScales;
CREATE TABLE CMMScales (
	index  SERIAL PRIMARY KEY,
	_XScale integer, -- index into table CMMScaleType 
	_YScale integer, -- index into table CMMScaleType 
	_ZScale integer  -- index into table CMMScaleType 
) ;

DROP TABLE IF EXISTS CMMSpeeds;
CREATE TABLE CMMSpeeds (
	index  SERIAL PRIMARY KEY,
	_MaxXTraverseSpeed integer, -- index into table SpeedValueType 
	_MaxYTraverseSpeed integer, -- index into table SpeedValueType 
	_MaxZTraverseSpeed integer, -- index into table SpeedValueType 
	_MaxXProbingSpeed integer, -- index into table SpeedValueType 
	_MaxYProbingSpeed integer, -- index into table SpeedValueType 
	_MaxZProbingSpeed integer  -- index into table SpeedValueType 
) ;

DROP TABLE IF EXISTS CMM;
CREATE TABLE CMM (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Calibrations integer, -- index into table CalibrationsType 
	_InspectionTemperatures integer, -- index into table TemperaturesType 
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Calibrations integer, -- index into table CalibrationsType 
	_InspectionTemperatures integer, -- index into table TemperaturesType 
	_WorkingVolume integer, -- index into table WorkingVolumeType 
	_EffectiveWorkingVolume integer, -- index into table EffectiveWorkingVolumeType 
	_Resolution integer, -- index into table LinearValueType 
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Calibrations integer, -- index into table CalibrationsType 
	_InspectionTemperatures integer, -- index into table TemperaturesType 
	_WorkingVolume integer, -- index into table WorkingVolumeType 
	_EffectiveWorkingVolume integer, -- index into table EffectiveWorkingVolumeType 
	_Resolution integer, -- index into table LinearValueType 
	_ActualPointType integer, -- index into table ActualPointType 
	_HomeLocation integer, -- index into table PointType 
	_MachineGeometry integer, -- index into table CMMGeometryType 
	_AxisOrientation integer, -- index into table CMMAxisDirectionsType 
	_CMMScales integer, -- index into table CMMScalesType 
	_MaxWorkpieceHeight integer, -- index into table LinearValueType 
	_MaxWorkpieceMass integer, -- index into table MassValueType 
	_JoystickSpeeds integer, -- index into table CMMSpeedsType 
	_CNCSpeeds integer, -- index into table CMMSpeedsType 
	_RotaryTable integer, -- index into table RotaryTableType 
	_NominalAccuracy integer, -- index into table CMMAccuracyType 
	_ActualAccuracy integer, -- index into table CMMAccuracyType 
	_CarriageIds integer, -- index into table ArrayReferenceFullType 
	_ToolIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS CalibrationMaster;
CREATE TABLE CalibrationMaster (
	index  SERIAL PRIMARY KEY,
	SerialNumber text NOT NULL, 
	description text  
) ;

DROP TABLE IF EXISTS Calibration;
CREATE TABLE Calibration (
	index  SERIAL PRIMARY KEY,
	_CalibrationMaster integer, -- index into table CalibrationMasterType 
	_Temperatures integer, -- index into table TemperaturesType 
	TimeStamp TIMESTAMP NOT NULL  
) ;

DROP TABLE IF EXISTS Calibrations;
CREATE TABLE Calibrations (
	index  SERIAL PRIMARY KEY,
	__Calibration integer[]  -- index into table CalibrationType 
) ;

DROP TABLE IF EXISTS Caliper;
CREATE TABLE Caliper (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Calibrations integer, -- index into table CalibrationsType 
	_InspectionTemperatures integer, -- index into table TemperaturesType 
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Calibrations integer, -- index into table CalibrationsType 
	_InspectionTemperatures integer, -- index into table TemperaturesType 
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Calibrations integer, -- index into table CalibrationsType 
	_InspectionTemperatures integer, -- index into table TemperaturesType 
	_Resolution integer, -- index into table LinearValueType 
	_Accuracy integer, -- index into table NumericalLengthAccuracyType 
	_MinMeasurement integer, -- index into table LinearValueType 
	_MaxMeasurement integer, -- index into table LinearValueType 
	CanMeasureInnerD BOOLEAN, 
	CanMeasureOuterD BOOLEAN, 
	CanMeasureDepth BOOLEAN  
) ;

DROP TABLE IF EXISTS Camera;
CREATE TABLE Camera (
	index  SERIAL PRIMARY KEY,
	form text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	ViewPlaneOrigin FLOAT[3] NOT NULL, 
	_Orientation integer, -- index into table QuaternionType 
	Ratio DOUBLE PRECISION NOT NULL, 
	Near DOUBLE PRECISION NOT NULL, 
	Far DOUBLE PRECISION NOT NULL, 
	Height DOUBLE PRECISION NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	ViewPlaneOrigin FLOAT[3] NOT NULL, 
	_Orientation integer, -- index into table QuaternionType 
	Ratio DOUBLE PRECISION NOT NULL, 
	Near DOUBLE PRECISION NOT NULL, 
	Far DOUBLE PRECISION NOT NULL, 
	Height DOUBLE PRECISION NOT NULL  
) ;

DROP TABLE IF EXISTS CapabilityStudyPlan;
CREATE TABLE CapabilityStudyPlan (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	NumberOfSamples integer NOT NULL, 
	SubgroupSize integer, 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	NumberOfSamples integer NOT NULL, 
	SubgroupSize integer, 
	_CpkThreshold integer, -- index into table CriterionDecimalType 
	_CriterionAngularType integer, -- index into table CriterionAngularType 
	_CriterionAreaType integer, -- index into table CriterionAreaType 
	_CriterionForceType integer, -- index into table CriterionForceType 
	_CriterionLinearType integer, -- index into table CriterionLinearType 
	_CriterionMassType integer, -- index into table CriterionMassType 
	_CriterionPressureType integer, -- index into table CriterionPressureType 
	_CriterionSpeedType integer, -- index into table CriterionSpeedType 
	_CriterionTemperatureType integer, -- index into table CriterionTemperatureType 
	_CriterionTimeType integer, -- index into table CriterionTimeType 
	_CriterionUserDefinedUnitType integer, -- index into table CriterionUserDefinedUnitType 
	_CriterionAngularType integer, -- index into table CriterionAngularType 
	_CriterionAreaType integer, -- index into table CriterionAreaType 
	_CriterionForceType integer, -- index into table CriterionForceType 
	_CriterionLinearType integer, -- index into table CriterionLinearType 
	_CriterionMassType integer, -- index into table CriterionMassType 
	_CriterionPressureType integer, -- index into table CriterionPressureType 
	_CriterionSpeedType integer, -- index into table CriterionSpeedType 
	_CriterionTemperatureType integer, -- index into table CriterionTemperatureType 
	_CriterionTimeType integer, -- index into table CriterionTimeType 
	_CriterionUserDefinedUnitType integer, -- index into table CriterionUserDefinedUnitType 
	_PpkThreshold integer  -- index into table CriterionDecimalType 
) ;

DROP TABLE IF EXISTS CapabilityStudyResults;
CREATE TABLE CapabilityStudyResults (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	NumberOfSamples integer NOT NULL, 
	SubgroupSize integer, 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	NumberOfSamples integer NOT NULL, 
	SubgroupSize integer  
) ;

DROP TABLE IF EXISTS Carriage;
CREATE TABLE Carriage (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	_ToolIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS Carriages;
CREATE TABLE Carriages (
	index  SERIAL PRIMARY KEY,
	__Carriage integer[]  -- index into table CarriageType 
) ;

DROP TABLE IF EXISTS CharacteristicActuals;
CREATE TABLE CharacteristicActuals (
	index  SERIAL PRIMARY KEY,
	__AngleBetweenCharacteristicActualType integer[], -- index into table AngleBetweenCharacteristicActualType 
	__AngleCharacteristicActualType integer[], -- index into table AngleCharacteristicActualType 
	__AngleFromCharacteristicActualType integer[], -- index into table AngleFromCharacteristicActualType 
	__AngularCoordinateCharacteristicActualType integer[], -- index into table AngularCoordinateCharacteristicActualType 
	__AngularityCharacteristicActualType integer[], -- index into table AngularityCharacteristicActualType 
	__ChordCharacteristicActualType integer[], -- index into table ChordCharacteristicActualType 
	__CircularRunoutCharacteristicActualType integer[], -- index into table CircularRunoutCharacteristicActualType 
	__CircularityCharacteristicActualType integer[], -- index into table CircularityCharacteristicActualType 
	__ConcentricityCharacteristicActualType integer[], -- index into table ConcentricityCharacteristicActualType 
	__CurveLengthCharacteristicActualType integer[], -- index into table CurveLengthCharacteristicActualType 
	__CylindricityCharacteristicActualType integer[], -- index into table CylindricityCharacteristicActualType 
	__DepthCharacteristicActualType integer[], -- index into table DepthCharacteristicActualType 
	__DiameterCharacteristicActualType integer[], -- index into table DiameterCharacteristicActualType 
	__DistanceBetweenCharacteristicActualType integer[], -- index into table DistanceBetweenCharacteristicActualType 
	__DistanceFromCharacteristicActualType integer[], -- index into table DistanceFromCharacteristicActualType 
	__FlatnessCharacteristicActualType integer[], -- index into table FlatnessCharacteristicActualType 
	__HeightCharacteristicActualType integer[], -- index into table HeightCharacteristicActualType 
	__LengthCharacteristicActualType integer[], -- index into table LengthCharacteristicActualType 
	__LineProfileCharacteristicActualType integer[], -- index into table LineProfileCharacteristicActualType 
	__LinearCoordinateCharacteristicActualType integer[], -- index into table LinearCoordinateCharacteristicActualType 
	__ParallelismCharacteristicActualType integer[], -- index into table ParallelismCharacteristicActualType 
	__PerpendicularityCharacteristicActualType integer[], -- index into table PerpendicularityCharacteristicActualType 
	__PointProfileCharacteristicActualType integer[], -- index into table PointProfileCharacteristicActualType 
	__PositionCharacteristicActualType integer[], -- index into table PositionCharacteristicActualType 
	__RadiusCharacteristicActualType integer[], -- index into table RadiusCharacteristicActualType 
	__SquareCharacteristicActualType integer[], -- index into table SquareCharacteristicActualType 
	__StraightnessCharacteristicActualType integer[], -- index into table StraightnessCharacteristicActualType 
	__SurfaceProfileCharacteristicActualType integer[], -- index into table SurfaceProfileCharacteristicActualType 
	__SurfaceProfileNonUniformCharacteristicActualType integer[], -- index into table SurfaceProfileNonUniformCharacteristicActualType 
	__SurfaceTextureCharacteristicActualType integer[], -- index into table SurfaceTextureCharacteristicActualType 
	__SymmetryCharacteristicActualType integer[], -- index into table SymmetryCharacteristicActualType 
	__ThicknessCharacteristicActualType integer[], -- index into table ThicknessCharacteristicActualType 
	__ThreadCharacteristicActualType integer[], -- index into table ThreadCharacteristicActualType 
	__TotalRunoutCharacteristicActualType integer[], -- index into table TotalRunoutCharacteristicActualType 
	__UserDefinedAngularCharacteristicActualType integer[], -- index into table UserDefinedAngularCharacteristicActualType 
	__UserDefinedAreaCharacteristicActualType integer[], -- index into table UserDefinedAreaCharacteristicActualType 
	__UserDefinedAttributeCharacteristicActualType integer[], -- index into table UserDefinedAttributeCharacteristicActualType 
	__UserDefinedForceCharacteristicActualType integer[], -- index into table UserDefinedForceCharacteristicActualType 
	__UserDefinedLinearCharacteristicActualType integer[], -- index into table UserDefinedLinearCharacteristicActualType 
	__UserDefinedMassCharacteristicActualType integer[], -- index into table UserDefinedMassCharacteristicActualType 
	__UserDefinedPressureCharacteristicActualType integer[], -- index into table UserDefinedPressureCharacteristicActualType 
	__UserDefinedSpeedCharacteristicActualType integer[], -- index into table UserDefinedSpeedCharacteristicActualType 
	__UserDefinedTemperatureCharacteristicActualType integer[], -- index into table UserDefinedTemperatureCharacteristicActualType 
	__UserDefinedTimeCharacteristicActualType integer[], -- index into table UserDefinedTimeCharacteristicActualType 
	__UserDefinedUnitCharacteristicActualType integer[], -- index into table UserDefinedUnitCharacteristicActualType 
	__WidthCharacteristicActualType integer[]  -- index into table WidthCharacteristicActualType 
) ;

DROP TABLE IF EXISTS CharacteristicAspectsLists;
CREATE TABLE CharacteristicAspectsLists (
	index  SERIAL PRIMARY KEY,
	_FormalStandard integer, -- index into table FormalStandardType 
	_CharacteristicDefinitions integer, -- index into table CharacteristicDefinitionsType 
	_DefaultCharacteristicDefinitions integer, -- index into table CharacteristicDefinitionsType 
	_DefaultToleranceDefinitions integer, -- index into table ToleranceDefinitionsType 
	_CharacteristicNominals integer, -- index into table CharacteristicNominalsType 
	_CharacteristicItems integer, -- index into table CharacteristicItemsType 
	_CharacteristicGroups integer  -- index into table CharacteristicGroupsType 
) ;

DROP TABLE IF EXISTS CharacteristicCircularZoneLimit;
CREATE TABLE CharacteristicCircularZoneLimit (
	index  SERIAL PRIMARY KEY,
	_ActualPointType integer, -- index into table ActualPointType 
	_CenterPoint integer, -- index into table PointType 
	_Diameter integer, -- index into table LinearValueType 
	Normal text NOT NULL, 
	_ActualPointType integer, -- index into table ActualPointType 
	_CenterPoint integer, -- index into table PointType 
	_Diameter integer, -- index into table LinearValueType 
	Normal text NOT NULL  
) ;

DROP TABLE IF EXISTS CharacteristicDefinitions;
CREATE TABLE CharacteristicDefinitions (
	index  SERIAL PRIMARY KEY,
	__AngleBetweenCharacteristicDefinitionType integer[], -- index into table AngleBetweenCharacteristicDefinitionType 
	__AngleCharacteristicDefinitionType integer[], -- index into table AngleCharacteristicDefinitionType 
	__AngleFromCharacteristicDefinitionType integer[], -- index into table AngleFromCharacteristicDefinitionType 
	__AngularCoordinateCharacteristicDefinitionType integer[], -- index into table AngularCoordinateCharacteristicDefinitionType 
	__AngularityCharacteristicDefinitionType integer[], -- index into table AngularityCharacteristicDefinitionType 
	__ChordCharacteristicDefinitionType integer[], -- index into table ChordCharacteristicDefinitionType 
	__CircularRunoutCharacteristicDefinitionType integer[], -- index into table CircularRunoutCharacteristicDefinitionType 
	__CircularityCharacteristicDefinitionType integer[], -- index into table CircularityCharacteristicDefinitionType 
	__ConcentricityCharacteristicDefinitionType integer[], -- index into table ConcentricityCharacteristicDefinitionType 
	__CurveLengthCharacteristicDefinitionType integer[], -- index into table CurveLengthCharacteristicDefinitionType 
	__CylindricityCharacteristicDefinitionType integer[], -- index into table CylindricityCharacteristicDefinitionType 
	__DepthCharacteristicDefinitionType integer[], -- index into table DepthCharacteristicDefinitionType 
	__DiameterCharacteristicDefinitionType integer[], -- index into table DiameterCharacteristicDefinitionType 
	__DistanceBetweenCharacteristicDefinitionType integer[], -- index into table DistanceBetweenCharacteristicDefinitionType 
	__DistanceFromCharacteristicDefinitionType integer[], -- index into table DistanceFromCharacteristicDefinitionType 
	__FlatnessCharacteristicDefinitionType integer[], -- index into table FlatnessCharacteristicDefinitionType 
	__HeightCharacteristicDefinitionType integer[], -- index into table HeightCharacteristicDefinitionType 
	__LengthCharacteristicDefinitionType integer[], -- index into table LengthCharacteristicDefinitionType 
	__LineProfileCharacteristicDefinitionType integer[], -- index into table LineProfileCharacteristicDefinitionType 
	__LinearCoordinateCharacteristicDefinitionType integer[], -- index into table LinearCoordinateCharacteristicDefinitionType 
	__ParallelismCharacteristicDefinitionType integer[], -- index into table ParallelismCharacteristicDefinitionType 
	__PerpendicularityCharacteristicDefinitionType integer[], -- index into table PerpendicularityCharacteristicDefinitionType 
	__PointProfileCharacteristicDefinitionType integer[], -- index into table PointProfileCharacteristicDefinitionType 
	__PositionCharacteristicDefinitionType integer[], -- index into table PositionCharacteristicDefinitionType 
	__RadiusCharacteristicDefinitionType integer[], -- index into table RadiusCharacteristicDefinitionType 
	__SquareCharacteristicDefinitionType integer[], -- index into table SquareCharacteristicDefinitionType 
	__StraightnessCharacteristicDefinitionType integer[], -- index into table StraightnessCharacteristicDefinitionType 
	__SurfaceProfileCharacteristicDefinitionType integer[], -- index into table SurfaceProfileCharacteristicDefinitionType 
	__SurfaceProfileNonUniformCharacteristicDefinitionType integer[], -- index into table SurfaceProfileNonUniformCharacteristicDefinitionType 
	__SurfaceTextureCharacteristicDefinitionType integer[], -- index into table SurfaceTextureCharacteristicDefinitionType 
	__SymmetryCharacteristicDefinitionType integer[], -- index into table SymmetryCharacteristicDefinitionType 
	__ThicknessCharacteristicDefinitionType integer[], -- index into table ThicknessCharacteristicDefinitionType 
	__ThreadCharacteristicDefinitionType integer[], -- index into table ThreadCharacteristicDefinitionType 
	__TotalRunoutCharacteristicDefinitionType integer[], -- index into table TotalRunoutCharacteristicDefinitionType 
	__UserDefinedAngularCharacteristicDefinitionType integer[], -- index into table UserDefinedAngularCharacteristicDefinitionType 
	__UserDefinedAreaCharacteristicDefinitionType integer[], -- index into table UserDefinedAreaCharacteristicDefinitionType 
	__UserDefinedAttributeCharacteristicDefinitionType integer[], -- index into table UserDefinedAttributeCharacteristicDefinitionType 
	__UserDefinedForceCharacteristicDefinitionType integer[], -- index into table UserDefinedForceCharacteristicDefinitionType 
	__UserDefinedLinearCharacteristicDefinitionType integer[], -- index into table UserDefinedLinearCharacteristicDefinitionType 
	__UserDefinedMassCharacteristicDefinitionType integer[], -- index into table UserDefinedMassCharacteristicDefinitionType 
	__UserDefinedPressureCharacteristicDefinitionType integer[], -- index into table UserDefinedPressureCharacteristicDefinitionType 
	__UserDefinedSpeedCharacteristicDefinitionType integer[], -- index into table UserDefinedSpeedCharacteristicDefinitionType 
	__UserDefinedTemperatureCharacteristicDefinitionType integer[], -- index into table UserDefinedTemperatureCharacteristicDefinitionType 
	__UserDefinedTimeCharacteristicDefinitionType integer[], -- index into table UserDefinedTimeCharacteristicDefinitionType 
	__UserDefinedUnitCharacteristicDefinitionType integer[], -- index into table UserDefinedUnitCharacteristicDefinitionType 
	__WidthCharacteristicDefinitionType integer[]  -- index into table WidthCharacteristicDefinitionType 
) ;

DROP TABLE IF EXISTS CharacteristicDirectionalZoneLimit;
CREATE TABLE CharacteristicDirectionalZoneLimit (
	index  SERIAL PRIMARY KEY,
	_FromPoint integer, -- index into table PointWithNameType 
	_ToPoint integer, -- index into table PointWithNameType 
	StartDirection text, 
	PlaneNormal text  
) ;

DROP TABLE IF EXISTS CharacteristicGroupStatus;
CREATE TABLE CharacteristicGroupStatus (
	index  SERIAL PRIMARY KEY,
	_Status integer, -- index into table StatsEvalStatusType 
	_GroupId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS CharacteristicGroupStatuses;
CREATE TABLE CharacteristicGroupStatuses (
	index  SERIAL PRIMARY KEY,
	__CharacteristicGroupStatus integer[]  -- index into table CharacteristicGroupStatusType 
) ;

DROP TABLE IF EXISTS CharacteristicGroup;
CREATE TABLE CharacteristicGroup (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	Description text, 
	Name text, 
	TransformId text, 
	_Units integer, -- index into table OtherUnitsType 
	_Scale integer  -- index into table ScaleType 
) ;

DROP TABLE IF EXISTS CharacteristicGroups;
CREATE TABLE CharacteristicGroups (
	index  SERIAL PRIMARY KEY,
	__CharacteristicGroup integer[], -- index into table CharacteristicGroupType 
	__CharacteristicManufacturingProcessGroupType integer[], -- index into table CharacteristicManufacturingProcessGroupType 
	__CharacteristicSimultaneityGroupType integer[]  -- index into table CharacteristicSimultaneityGroupType 
) ;

DROP TABLE IF EXISTS CharacteristicIs;
CREATE TABLE CharacteristicIs (
	index  SERIAL PRIMARY KEY,
	val text -- attribute
) ;

DROP TABLE IF EXISTS CharacteristicItems;
CREATE TABLE CharacteristicItems (
	index  SERIAL PRIMARY KEY,
	__AngleBetweenCharacteristicItemType integer[], -- index into table AngleBetweenCharacteristicItemType 
	__AngleCharacteristicItemType integer[], -- index into table AngleCharacteristicItemType 
	__AngleFromCharacteristicItemType integer[], -- index into table AngleFromCharacteristicItemType 
	__AngularCoordinateCharacteristicItemType integer[], -- index into table AngularCoordinateCharacteristicItemType 
	__AngularityCharacteristicItemType integer[], -- index into table AngularityCharacteristicItemType 
	__ChordCharacteristicItemType integer[], -- index into table ChordCharacteristicItemType 
	__CircularRunoutCharacteristicItemType integer[], -- index into table CircularRunoutCharacteristicItemType 
	__CircularityCharacteristicItemType integer[], -- index into table CircularityCharacteristicItemType 
	__ConcentricityCharacteristicItemType integer[], -- index into table ConcentricityCharacteristicItemType 
	__CurveLengthCharacteristicItemType integer[], -- index into table CurveLengthCharacteristicItemType 
	__CylindricityCharacteristicItemType integer[], -- index into table CylindricityCharacteristicItemType 
	__DepthCharacteristicItemType integer[], -- index into table DepthCharacteristicItemType 
	__DiameterCharacteristicItemType integer[], -- index into table DiameterCharacteristicItemType 
	__DistanceBetweenCharacteristicItemType integer[], -- index into table DistanceBetweenCharacteristicItemType 
	__DistanceFromCharacteristicItemType integer[], -- index into table DistanceFromCharacteristicItemType 
	__FlatnessCharacteristicItemType integer[], -- index into table FlatnessCharacteristicItemType 
	__HeightCharacteristicItemType integer[], -- index into table HeightCharacteristicItemType 
	__LengthCharacteristicItemType integer[], -- index into table LengthCharacteristicItemType 
	__LineProfileCharacteristicItemType integer[], -- index into table LineProfileCharacteristicItemType 
	__LinearCoordinateCharacteristicItemType integer[], -- index into table LinearCoordinateCharacteristicItemType 
	__ParallelismCharacteristicItemType integer[], -- index into table ParallelismCharacteristicItemType 
	__PerpendicularityCharacteristicItemType integer[], -- index into table PerpendicularityCharacteristicItemType 
	__PointProfileCharacteristicItemType integer[], -- index into table PointProfileCharacteristicItemType 
	__PositionCharacteristicItemType integer[], -- index into table PositionCharacteristicItemType 
	__RadiusCharacteristicItemType integer[], -- index into table RadiusCharacteristicItemType 
	__SquareCharacteristicItemType integer[], -- index into table SquareCharacteristicItemType 
	__StraightnessCharacteristicItemType integer[], -- index into table StraightnessCharacteristicItemType 
	__SurfaceProfileCharacteristicItemType integer[], -- index into table SurfaceProfileCharacteristicItemType 
	__SurfaceProfileNonUniformCharacteristicItemType integer[], -- index into table SurfaceProfileNonUniformCharacteristicItemType 
	__SurfaceTextureCharacteristicItemType integer[], -- index into table SurfaceTextureCharacteristicItemType 
	__SymmetryCharacteristicItemType integer[], -- index into table SymmetryCharacteristicItemType 
	__ThicknessCharacteristicItemType integer[], -- index into table ThicknessCharacteristicItemType 
	__ThreadCharacteristicItemType integer[], -- index into table ThreadCharacteristicItemType 
	__TotalRunoutCharacteristicItemType integer[], -- index into table TotalRunoutCharacteristicItemType 
	__UserDefinedAngularCharacteristicItemType integer[], -- index into table UserDefinedAngularCharacteristicItemType 
	__UserDefinedAreaCharacteristicItemType integer[], -- index into table UserDefinedAreaCharacteristicItemType 
	__UserDefinedAttributeCharacteristicItemType integer[], -- index into table UserDefinedAttributeCharacteristicItemType 
	__UserDefinedForceCharacteristicItemType integer[], -- index into table UserDefinedForceCharacteristicItemType 
	__UserDefinedLinearCharacteristicItemType integer[], -- index into table UserDefinedLinearCharacteristicItemType 
	__UserDefinedMassCharacteristicItemType integer[], -- index into table UserDefinedMassCharacteristicItemType 
	__UserDefinedPressureCharacteristicItemType integer[], -- index into table UserDefinedPressureCharacteristicItemType 
	__UserDefinedSpeedCharacteristicItemType integer[], -- index into table UserDefinedSpeedCharacteristicItemType 
	__UserDefinedTemperatureCharacteristicItemType integer[], -- index into table UserDefinedTemperatureCharacteristicItemType 
	__UserDefinedTimeCharacteristicItemType integer[], -- index into table UserDefinedTimeCharacteristicItemType 
	__UserDefinedUnitCharacteristicItemType integer[], -- index into table UserDefinedUnitCharacteristicItemType 
	__WidthCharacteristicItemType integer[]  -- index into table WidthCharacteristicItemType 
) ;

DROP TABLE IF EXISTS CharacteristicManufacturingProcessGroup;
CREATE TABLE CharacteristicManufacturingProcessGroup (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	Description text, 
	Name text, 
	TransformId text, 
	_Units integer, -- index into table OtherUnitsType 
	_Scale integer, -- index into table ScaleType 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	Description text, 
	Name text, 
	TransformId text, 
	_Units integer, -- index into table OtherUnitsType 
	_Scale integer, -- index into table ScaleType 
	_ManufacturingProcessId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS CharacteristicNominals;
CREATE TABLE CharacteristicNominals (
	index  SERIAL PRIMARY KEY,
	__AngleBetweenCharacteristicNominalType integer[], -- index into table AngleBetweenCharacteristicNominalType 
	__AngleCharacteristicNominalType integer[], -- index into table AngleCharacteristicNominalType 
	__AngleFromCharacteristicNominalType integer[], -- index into table AngleFromCharacteristicNominalType 
	__AngularCoordinateCharacteristicNominalType integer[], -- index into table AngularCoordinateCharacteristicNominalType 
	__AngularityCharacteristicNominalType integer[], -- index into table AngularityCharacteristicNominalType 
	__ChordCharacteristicNominalType integer[], -- index into table ChordCharacteristicNominalType 
	__CircularRunoutCharacteristicNominalType integer[], -- index into table CircularRunoutCharacteristicNominalType 
	__CircularityCharacteristicNominalType integer[], -- index into table CircularityCharacteristicNominalType 
	__ConcentricityCharacteristicNominalType integer[], -- index into table ConcentricityCharacteristicNominalType 
	__CurveLengthCharacteristicNominalType integer[], -- index into table CurveLengthCharacteristicNominalType 
	__CylindricityCharacteristicNominalType integer[], -- index into table CylindricityCharacteristicNominalType 
	__DepthCharacteristicNominalType integer[], -- index into table DepthCharacteristicNominalType 
	__DiameterCharacteristicNominalType integer[], -- index into table DiameterCharacteristicNominalType 
	__DistanceBetweenCharacteristicNominalType integer[], -- index into table DistanceBetweenCharacteristicNominalType 
	__DistanceFromCharacteristicNominalType integer[], -- index into table DistanceFromCharacteristicNominalType 
	__FlatnessCharacteristicNominalType integer[], -- index into table FlatnessCharacteristicNominalType 
	__HeightCharacteristicNominalType integer[], -- index into table HeightCharacteristicNominalType 
	__LengthCharacteristicNominalType integer[], -- index into table LengthCharacteristicNominalType 
	__LineProfileCharacteristicNominalType integer[], -- index into table LineProfileCharacteristicNominalType 
	__LinearCoordinateCharacteristicNominalType integer[], -- index into table LinearCoordinateCharacteristicNominalType 
	__ParallelismCharacteristicNominalType integer[], -- index into table ParallelismCharacteristicNominalType 
	__PerpendicularityCharacteristicNominalType integer[], -- index into table PerpendicularityCharacteristicNominalType 
	__PointProfileCharacteristicNominalType integer[], -- index into table PointProfileCharacteristicNominalType 
	__PositionCharacteristicNominalType integer[], -- index into table PositionCharacteristicNominalType 
	__RadiusCharacteristicNominalType integer[], -- index into table RadiusCharacteristicNominalType 
	__SquareCharacteristicNominalType integer[], -- index into table SquareCharacteristicNominalType 
	__StraightnessCharacteristicNominalType integer[], -- index into table StraightnessCharacteristicNominalType 
	__SurfaceProfileCharacteristicNominalType integer[], -- index into table SurfaceProfileCharacteristicNominalType 
	__SurfaceProfileNonUniformCharacteristicNominalType integer[], -- index into table SurfaceProfileNonUniformCharacteristicNominalType 
	__SurfaceTextureCharacteristicNominalType integer[], -- index into table SurfaceTextureCharacteristicNominalType 
	__SymmetryCharacteristicNominalType integer[], -- index into table SymmetryCharacteristicNominalType 
	__ThicknessCharacteristicNominalType integer[], -- index into table ThicknessCharacteristicNominalType 
	__ThreadCharacteristicNominalType integer[], -- index into table ThreadCharacteristicNominalType 
	__TotalRunoutCharacteristicNominalType integer[], -- index into table TotalRunoutCharacteristicNominalType 
	__UserDefinedAngularCharacteristicNominalType integer[], -- index into table UserDefinedAngularCharacteristicNominalType 
	__UserDefinedAreaCharacteristicNominalType integer[], -- index into table UserDefinedAreaCharacteristicNominalType 
	__UserDefinedAttributeCharacteristicNominalType integer[], -- index into table UserDefinedAttributeCharacteristicNominalType 
	__UserDefinedForceCharacteristicNominalType integer[], -- index into table UserDefinedForceCharacteristicNominalType 
	__UserDefinedLinearCharacteristicNominalType integer[], -- index into table UserDefinedLinearCharacteristicNominalType 
	__UserDefinedMassCharacteristicNominalType integer[], -- index into table UserDefinedMassCharacteristicNominalType 
	__UserDefinedPressureCharacteristicNominalType integer[], -- index into table UserDefinedPressureCharacteristicNominalType 
	__UserDefinedSpeedCharacteristicNominalType integer[], -- index into table UserDefinedSpeedCharacteristicNominalType 
	__UserDefinedTemperatureCharacteristicNominalType integer[], -- index into table UserDefinedTemperatureCharacteristicNominalType 
	__UserDefinedTimeCharacteristicNominalType integer[], -- index into table UserDefinedTimeCharacteristicNominalType 
	__UserDefinedUnitCharacteristicNominalType integer[], -- index into table UserDefinedUnitCharacteristicNominalType 
	__WidthCharacteristicNominalType integer[]  -- index into table WidthCharacteristicNominalType 
) ;

DROP TABLE IF EXISTS CharacteristicRectangularZoneLimit;
CREATE TABLE CharacteristicRectangularZoneLimit (
	index  SERIAL PRIMARY KEY,
	_Length integer, -- index into table LinearValueType 
	_ActualPointType integer, -- index into table ActualPointType 
	_CornerPoint integer, -- index into table PointType 
	_Width integer, -- index into table LinearValueType 
	WidthDirection text NOT NULL, 
	LengthDirection text NOT NULL, 
	_Length integer, -- index into table LinearValueType 
	_ActualPointType integer, -- index into table ActualPointType 
	_CornerPoint integer, -- index into table PointType 
	_Width integer, -- index into table LinearValueType 
	WidthDirection text NOT NULL, 
	LengthDirection text NOT NULL  
) ;

DROP TABLE IF EXISTS CharacteristicSimultaneityGroup;
CREATE TABLE CharacteristicSimultaneityGroup (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	Description text, 
	Name text, 
	TransformId text, 
	_Units integer, -- index into table OtherUnitsType 
	_Scale integer, -- index into table ScaleType 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	Description text, 
	Name text, 
	TransformId text, 
	_Units integer, -- index into table OtherUnitsType 
	_Scale integer  -- index into table ScaleType 
) ;

DROP TABLE IF EXISTS CharacteristicStatus;
CREATE TABLE CharacteristicStatus (
	index  SERIAL PRIMARY KEY,
	CharacteristicStatusEnum CharacteristicStatusEnumType NOT NULL, 
	OtherCharacteristicStatus text NOT NULL  
) ;

DROP TABLE IF EXISTS CharacteristicsStats;
CREATE TABLE CharacteristicsStats (
	index  SERIAL PRIMARY KEY,
	__AngleBetweenCharacteristicStatsEvalType integer[], -- index into table AngleBetweenCharacteristicStatsEvalType 
	__AngleCharacteristicStatsEvalType integer[], -- index into table AngleCharacteristicStatsEvalType 
	__AngleFromCharacteristicStatsEvalType integer[], -- index into table AngleFromCharacteristicStatsEvalType 
	__AngularCharacteristicStatsEvalType integer[], -- index into table AngularCharacteristicStatsEvalType 
	__AngularCoordinateCharacteristicStatsEvalType integer[], -- index into table AngularCoordinateCharacteristicStatsEvalType 
	__AngularityCharacteristicStatsEvalType integer[], -- index into table AngularityCharacteristicStatsEvalType 
	__ChordCharacteristicStatsEvalType integer[], -- index into table ChordCharacteristicStatsEvalType 
	__CircularRunoutCharacteristicStatsEvalType integer[], -- index into table CircularRunoutCharacteristicStatsEvalType 
	__CircularityCharacteristicStatsEvalType integer[], -- index into table CircularityCharacteristicStatsEvalType 
	__ConcentricityCharacteristicStatsEvalType integer[], -- index into table ConcentricityCharacteristicStatsEvalType 
	__CurveLengthCharacteristicStatsEvalType integer[], -- index into table CurveLengthCharacteristicStatsEvalType 
	__CylindricityCharacteristicStatsEvalType integer[], -- index into table CylindricityCharacteristicStatsEvalType 
	__DepthCharacteristicStatsEvalType integer[], -- index into table DepthCharacteristicStatsEvalType 
	__DiameterCharacteristicStatsEvalType integer[], -- index into table DiameterCharacteristicStatsEvalType 
	__DistanceBetweenCharacteristicStatsEvalType integer[], -- index into table DistanceBetweenCharacteristicStatsEvalType 
	__DistanceFromCharacteristicStatsEvalType integer[], -- index into table DistanceFromCharacteristicStatsEvalType 
	__FlatnessCharacteristicStatsEvalType integer[], -- index into table FlatnessCharacteristicStatsEvalType 
	__GeometricCharacteristicStatsEvalType integer[], -- index into table GeometricCharacteristicStatsEvalType 
	__HeightCharacteristicStatsEvalType integer[], -- index into table HeightCharacteristicStatsEvalType 
	__LengthCharacteristicStatsEvalType integer[], -- index into table LengthCharacteristicStatsEvalType 
	__LineProfileCharacteristicStatsEvalType integer[], -- index into table LineProfileCharacteristicStatsEvalType 
	__LinearCharacteristicStatsEvalType integer[], -- index into table LinearCharacteristicStatsEvalType 
	__LinearCoordinateCharacteristicStatsEvalType integer[], -- index into table LinearCoordinateCharacteristicStatsEvalType 
	__LocationCharacteristicStatsEvalType integer[], -- index into table LocationCharacteristicStatsEvalType 
	__OrientationCharacteristicStatsEvalType integer[], -- index into table OrientationCharacteristicStatsEvalType 
	__ParallelismCharacteristicStatsEvalType integer[], -- index into table ParallelismCharacteristicStatsEvalType 
	__PerpendicularityCharacteristicStatsEvalType integer[], -- index into table PerpendicularityCharacteristicStatsEvalType 
	__PointProfileCharacteristicStatsEvalType integer[], -- index into table PointProfileCharacteristicStatsEvalType 
	__PositionCharacteristicStatsEvalType integer[], -- index into table PositionCharacteristicStatsEvalType 
	__RadiusCharacteristicStatsEvalType integer[], -- index into table RadiusCharacteristicStatsEvalType 
	__SquareCharacteristicStatsEvalType integer[], -- index into table SquareCharacteristicStatsEvalType 
	__StraightnessCharacteristicStatsEvalType integer[], -- index into table StraightnessCharacteristicStatsEvalType 
	__SurfaceProfileCharacteristicStatsEvalType integer[], -- index into table SurfaceProfileCharacteristicStatsEvalType 
	__SurfaceProfileNonUniformCharacteristicStatsEvalType integer[], -- index into table SurfaceProfileNonUniformCharacteristicStatsEvalType 
	__SurfaceTextureCharacteristicStatsEvalType integer[], -- index into table SurfaceTextureCharacteristicStatsEvalType 
	__SymmetryCharacteristicStatsEvalType integer[], -- index into table SymmetryCharacteristicStatsEvalType 
	__ThicknessCharacteristicStatsEvalType integer[], -- index into table ThicknessCharacteristicStatsEvalType 
	__ThreadCharacteristicStatsEvalType integer[], -- index into table ThreadCharacteristicStatsEvalType 
	__TotalRunoutCharacteristicStatsEvalType integer[], -- index into table TotalRunoutCharacteristicStatsEvalType 
	__UserDefinedAngularCharacteristicStatsEvalType integer[], -- index into table UserDefinedAngularCharacteristicStatsEvalType 
	__UserDefinedAreaCharacteristicStatsEvalType integer[], -- index into table UserDefinedAreaCharacteristicStatsEvalType 
	__UserDefinedAttributeCharacteristicStatsEvalType integer[], -- index into table UserDefinedAttributeCharacteristicStatsEvalType 
	__UserDefinedForceCharacteristicStatsEvalType integer[], -- index into table UserDefinedForceCharacteristicStatsEvalType 
	__UserDefinedLinearCharacteristicStatsEvalType integer[], -- index into table UserDefinedLinearCharacteristicStatsEvalType 
	__UserDefinedMassCharacteristicStatsEvalType integer[], -- index into table UserDefinedMassCharacteristicStatsEvalType 
	__UserDefinedPressureCharacteristicStatsEvalType integer[], -- index into table UserDefinedPressureCharacteristicStatsEvalType 
	__UserDefinedSpeedCharacteristicStatsEvalType integer[], -- index into table UserDefinedSpeedCharacteristicStatsEvalType 
	__UserDefinedTemperatureCharacteristicStatsEvalType integer[], -- index into table UserDefinedTemperatureCharacteristicStatsEvalType 
	__UserDefinedTimeCharacteristicStatsEvalType integer[], -- index into table UserDefinedTimeCharacteristicStatsEvalType 
	__UserDefinedUnitCharacteristicStatsEvalType integer[], -- index into table UserDefinedUnitCharacteristicStatsEvalType 
	__WidthCharacteristicStatsEvalType integer[]  -- index into table WidthCharacteristicStatsEvalType 
) ;

DROP TABLE IF EXISTS ChordCharacteristicActual;
CREATE TABLE ChordCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS ChordCharacteristicDefinition;
CREATE TABLE ChordCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS ChordCharacteristicItem;
CREATE TABLE ChordCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS ChordCharacteristicNominal;
CREATE TABLE ChordCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS ChordCharacteristicStatsEval;
CREATE TABLE ChordCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS CircleActualDetermination;
CREATE TABLE CircleActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS CircleBestFit;
CREATE TABLE CircleBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS CircleCast;
CREATE TABLE CircleCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS CircleCheckedFeature;
CREATE TABLE CircleCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS CircleChecked;
CREATE TABLE CircleChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS CircleConstructionMethod;
CREATE TABLE CircleConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Intersection integer, -- index into table PointFeatureIntersectionType 
	_Projection integer, -- index into table ArcProjectionType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_Tangent integer, -- index into table CircleTangentType 
	_TangentThrough integer, -- index into table PlaneTangentThroughType 
	_Transform integer, -- index into table ConicalSegmentTransformType 
	_FromCone integer, -- index into table PointFeatureFromConeType 
	_FromScan integer  -- index into table CylinderFromScanType 
) ;

DROP TABLE IF EXISTS CircleCopy;
CREATE TABLE CircleCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseCircle integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS CircleFeatureActual;
CREATE TABLE CircleFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Normal integer, -- index into table UnitVectorSimpleType 
	_Diameter integer, -- index into table LinearValueType 
	_DiameterMin integer, -- index into table ActualLinearValueType 
	_DiameterMax integer, -- index into table ActualLinearValueType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS CircleFeatureDefinition;
CREATE TABLE CircleFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	InternalExternal InternalExternalEnumType NOT NULL, 
	_Diameter integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS CircleFeatureItem;
CREATE TABLE CircleFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS CircleFeatureNominal;
CREATE TABLE CircleFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_ActualPointType integer, -- index into table ActualPointType 
	_Location integer, -- index into table LocationType 
	Normal text NOT NULL  
) ;

DROP TABLE IF EXISTS CircleFromCone;
CREATE TABLE CircleFromCone (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_Diameter integer, -- index into table LinearValueType 
	_Distance integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS CircleFromScan;
CREATE TABLE CircleFromScan (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_SurfaceFeature integer, -- index into table BaseFeatureType 
	_SearchRadius integer, -- index into table LinearValueType 
	_Depth integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS CircleIntersection;
CREATE TABLE CircleIntersection (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_IntersectionFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS CirclePointSamplingStrategy;
CREATE TABLE CirclePointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum ClosedCurvePointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS CircleProjection;
CREATE TABLE CircleProjection (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_ProjectionCircle integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_ProjectionPlane integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS CircleRecomp;
CREATE TABLE CircleRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS CircleTangentThrough;
CREATE TABLE CircleTangentThrough (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_TangentFeature integer, -- index into table BaseFeatureType 
	_PointFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS CircleTangent;
CREATE TABLE CircleTangent (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__TangentFeature integer[]  -- index into table BaseFeatureType 
) ;

DROP TABLE IF EXISTS CircleTransform;
CREATE TABLE CircleTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseCircle integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS Circle;
CREATE TABLE Circle (
	index  SERIAL PRIMARY KEY,
	_ActualPointType integer, -- index into table ActualPointType 
	_CenterPoint integer, -- index into table PointType 
	_Diameter integer, -- index into table LinearValueType 
	Normal text NOT NULL  
) ;

DROP TABLE IF EXISTS CircularRunoutCharacteristicActual;
CREATE TABLE CircularRunoutCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	DatumsOk BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	DatumsOk BOOLEAN  
) ;

DROP TABLE IF EXISTS CircularRunoutCharacteristicDefinition;
CREATE TABLE CircularRunoutCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_DatumReferenceFrameId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS CircularRunoutCharacteristicItem;
CREATE TABLE CircularRunoutCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS CircularRunoutCharacteristicNominal;
CREATE TABLE CircularRunoutCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_ZoneLimit integer, -- index into table CharacteristicDirectionalZoneLimitType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_ZoneLimit integer, -- index into table CharacteristicDirectionalZoneLimitType 
	ZoneDirection text  
) ;

DROP TABLE IF EXISTS CircularRunoutCharacteristicStatsEval;
CREATE TABLE CircularRunoutCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_DatumsOkStats integer  -- index into table StatsPassFailType 
) ;

DROP TABLE IF EXISTS CircularUnitArea;
CREATE TABLE CircularUnitArea (
	index  SERIAL PRIMARY KEY,
	_CircularUnitAreaDiameter integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS CircularityCharacteristicActual;
CREATE TABLE CircularityCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_MaxCircularity integer, -- index into table ActualLinearValueType 
	_ZoneRadii integer, -- index into table ActualZoneRadiiType 
	_ZonePlane integer  -- index into table ActualPlaneType 
) ;

DROP TABLE IF EXISTS CircularityCharacteristicDefinition;
CREATE TABLE CircularityCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_ToleranceZonePerUnitAngle integer, -- index into table ToleranceZonePerUnitAngleType 
	_ToleranceZonePerUnitArcLength integer, -- index into table ToleranceZonePerUnitLengthType 
	_ToleranceZonePerUnitAngle integer, -- index into table ToleranceZonePerUnitAngleType 
	_ToleranceZonePerUnitArcLength integer  -- index into table ToleranceZonePerUnitLengthType 
) ;

DROP TABLE IF EXISTS CircularityCharacteristicItem;
CREATE TABLE CircularityCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS CircularityCharacteristicNominal;
CREATE TABLE CircularityCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_ZoneLimit integer  -- index into table CharacteristicDirectionalZoneLimitType 
) ;

DROP TABLE IF EXISTS CircularityCharacteristicStatsEval;
CREATE TABLE CircularityCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_MaxCircularityStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS CoEdgeMesh;
CREATE TABLE CoEdgeMesh (
	index  SERIAL PRIMARY KEY,
	_EdgeOriented integer, -- index into table EdgeOrientedType 
	_CurveMesh integer, -- index into table ElementReferenceType 
	_EdgeOrientedType integer  -- index into table EdgeOrientedType 
) ;

DROP TABLE IF EXISTS CoEdge;
CREATE TABLE CoEdge (
	index  SERIAL PRIMARY KEY,
	_EdgeOriented integer, -- index into table EdgeOrientedType 
	_Curve12 integer, -- index into table Curve12BaseType 
	_EdgeOrientedType integer  -- index into table EdgeOrientedType 
) ;

DROP TABLE IF EXISTS CoEdgesMesh;
CREATE TABLE CoEdgesMesh (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__CoEdgeMesh integer[]  -- index into table CoEdgeMeshType 
) ;

DROP TABLE IF EXISTS CoEdges;
CREATE TABLE CoEdges (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__CoEdge integer[]  -- index into table CoEdgeType 
) ;

DROP TABLE IF EXISTS CollectionPlane;
CREATE TABLE CollectionPlane (
	index  SERIAL PRIMARY KEY,
	CollectionPlaneEnum ModifyingPlaneEnumType NOT NULL, 
	_DatumDefinitionId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS Comparator;
CREATE TABLE Comparator (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Calibrations integer, -- index into table CalibrationsType 
	_InspectionTemperatures integer, -- index into table TemperaturesType 
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Calibrations integer, -- index into table CalibrationsType 
	_InspectionTemperatures integer, -- index into table TemperaturesType 
	_WorkingVolume integer, -- index into table WorkingVolumeType 
	_EffectiveWorkingVolume integer, -- index into table EffectiveWorkingVolumeType 
	_Resolution integer, -- index into table LinearValueType 
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Calibrations integer, -- index into table CalibrationsType 
	_InspectionTemperatures integer, -- index into table TemperaturesType 
	_WorkingVolume integer, -- index into table WorkingVolumeType 
	_EffectiveWorkingVolume integer, -- index into table EffectiveWorkingVolumeType 
	_Resolution integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS ComponentSet;
CREATE TABLE ComponentSet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__Component integer[]  -- index into table ComponentType 
) ;

DROP TABLE IF EXISTS Component;
CREATE TABLE Component (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	QPId text, 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Transform integer, -- index into table ConicalSegmentTransformType 
	_Traceability integer, -- index into table ProductTraceabilityType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Part integer, -- index into table ElementReferenceType 
	_Assembly integer, -- index into table ElementReferenceType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_DefinitionInternal integer  -- index into table InternalPartAssemblyType 
) ;

DROP TABLE IF EXISTS CompositeSegmentPositionActual;
CREATE TABLE CompositeSegmentPositionActual (
	index  SERIAL PRIMARY KEY,
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Status integer, -- index into table StatsEvalStatusType 
	_DRFTransformActualId integer, -- index into table QIFReferenceFullType 
	__ZoneData integer[], -- index into table ZoneDataType 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Status integer, -- index into table StatsEvalStatusType 
	_DRFTransformActualId integer, -- index into table QIFReferenceFullType 
	__ZoneData integer[]  -- index into table ZoneDataType 
) ;

DROP TABLE IF EXISTS CompositeSegmentPositionDefinition;
CREATE TABLE CompositeSegmentPositionDefinition (
	index  SERIAL PRIMARY KEY,
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	_ToleranceValue integer, -- index into table LinearValueType 
	MaterialCondition MaterialModifierEnumType NOT NULL, 
	_ZoneShape integer, -- index into table PositionZoneShapeType 
	_ProjectedToleranceZone integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS CompositeSegmentPositionStatsEval;
CREATE TABLE CompositeSegmentPositionStatsEval (
	index  SERIAL PRIMARY KEY,
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS CompositeSegmentProfileActual;
CREATE TABLE CompositeSegmentProfileActual (
	index  SERIAL PRIMARY KEY,
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Status integer, -- index into table StatsEvalStatusType 
	_DRFTransformActualId integer, -- index into table QIFReferenceFullType 
	__ZoneData integer[], -- index into table ZoneDataType 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Status integer, -- index into table StatsEvalStatusType 
	_DRFTransformActualId integer, -- index into table QIFReferenceFullType 
	__ZoneData integer[]  -- index into table ZoneDataType 
) ;

DROP TABLE IF EXISTS CompositeSegmentProfileDefinition;
CREATE TABLE CompositeSegmentProfileDefinition (
	index  SERIAL PRIMARY KEY,
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_OuterDisposition integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS CompositeSegmentProfileStatsEval;
CREATE TABLE CompositeSegmentProfileStatsEval (
	index  SERIAL PRIMARY KEY,
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS CompositeSegmentSymmetryActual;
CREATE TABLE CompositeSegmentSymmetryActual (
	index  SERIAL PRIMARY KEY,
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Status integer, -- index into table StatsEvalStatusType 
	_DRFTransformActualId integer, -- index into table QIFReferenceFullType 
	__ZoneData integer[], -- index into table ZoneDataType 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Status integer, -- index into table StatsEvalStatusType 
	_DRFTransformActualId integer, -- index into table QIFReferenceFullType 
	__ZoneData integer[]  -- index into table ZoneDataType 
) ;

DROP TABLE IF EXISTS CompositeSegmentSymmetryDefinition;
CREATE TABLE CompositeSegmentSymmetryDefinition (
	index  SERIAL PRIMARY KEY,
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	_ToleranceValue integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS CompositeSegmentSymmetryStatsEval;
CREATE TABLE CompositeSegmentSymmetryStatsEval (
	index  SERIAL PRIMARY KEY,
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS CompositeSegmentsPositionStatsEval;
CREATE TABLE CompositeSegmentsPositionStatsEval (
	index  SERIAL PRIMARY KEY,
	_SecondCompositeSegmentPositionStats integer, -- index into table CompositeSegmentPositionStatsEvalType 
	_ThirdCompositeSegmentPositionStats integer, -- index into table CompositeSegmentPositionStatsEvalType 
	_FourthCompositeSegmentPositionStats integer  -- index into table CompositeSegmentPositionStatsEvalType 
) ;

DROP TABLE IF EXISTS CompositeSegmentsProfileStatsEval;
CREATE TABLE CompositeSegmentsProfileStatsEval (
	index  SERIAL PRIMARY KEY,
	_SecondCompositeSegmentProfileStats integer, -- index into table CompositeSegmentProfileStatsEvalType 
	_ThirdCompositeSegmentProfileStats integer, -- index into table CompositeSegmentProfileStatsEvalType 
	_FourthCompositeSegmentProfileStats integer  -- index into table CompositeSegmentProfileStatsEvalType 
) ;

DROP TABLE IF EXISTS CompositeSegmentsSymmetryStatsEval;
CREATE TABLE CompositeSegmentsSymmetryStatsEval (
	index  SERIAL PRIMARY KEY,
	_SecondCompositeSegmentSymmetryStats integer, -- index into table CompositeSegmentSymmetryStatsEvalType 
	_ThirdCompositeSegmentSymmetryStats integer  -- index into table CompositeSegmentSymmetryStatsEvalType 
) ;

DROP TABLE IF EXISTS CompoundDatum;
CREATE TABLE CompoundDatum (
	index  SERIAL PRIMARY KEY,
	__Datum integer[], -- index into table DatumWithPrecedenceType 
	ReducedDatum ReducedDatumEnumType  
) ;

DROP TABLE IF EXISTS CompoundFeatureActual;
CREATE TABLE CompoundFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Direction integer  -- index into table UnitVectorType 
) ;

DROP TABLE IF EXISTS CompoundFeatureDefinition;
CREATE TABLE CompoundFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer  -- index into table AttributesType 
) ;

DROP TABLE IF EXISTS CompoundFeatureItem;
CREATE TABLE CompoundFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS CompoundFeatureNominal;
CREATE TABLE CompoundFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_ActualPointType integer, -- index into table ActualPointType 
	_Location integer, -- index into table LocationType 
	Direction text NOT NULL, 
	CompoundFeatureForm CompoundFeatureGeometryEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS ConcentricityCharacteristicActual;
CREATE TABLE ConcentricityCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	__ZoneData integer[], -- index into table ZoneDataType 
	DatumsOk BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	__ZoneData integer[], -- index into table ZoneDataType 
	DatumsOk BOOLEAN  
) ;

DROP TABLE IF EXISTS ConcentricityCharacteristicDefinition;
CREATE TABLE ConcentricityCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	_ZoneShape integer  -- index into table PositionZoneShapeType 
) ;

DROP TABLE IF EXISTS ConcentricityCharacteristicItem;
CREATE TABLE ConcentricityCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS ConcentricityCharacteristicNominal;
CREATE TABLE ConcentricityCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_ZoneLimit integer  -- index into table CharacteristicDirectionalZoneLimitType 
) ;

DROP TABLE IF EXISTS ConcentricityCharacteristicStatsEval;
CREATE TABLE ConcentricityCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType  
) ;

DROP TABLE IF EXISTS ConcentricityDiametricalZone;
CREATE TABLE ConcentricityDiametricalZone (
	index  SERIAL PRIMARY KEY 
) ;

DROP TABLE IF EXISTS ConcentricityNonDiametricalZone;
CREATE TABLE ConcentricityNonDiametricalZone (
	index  SERIAL PRIMARY KEY 
) ;

DROP TABLE IF EXISTS ConcentricitySphericalZone;
CREATE TABLE ConcentricitySphericalZone (
	index  SERIAL PRIMARY KEY 
) ;

DROP TABLE IF EXISTS ConcentricityZoneShape;
CREATE TABLE ConcentricityZoneShape (
	index  SERIAL PRIMARY KEY,
	_SphericalZone integer, -- index into table ConcentricitySphericalZoneType 
	_DiametricalZone integer, -- index into table OrientationDiametricalZoneType 
	_NonDiametricalZone integer  -- index into table StraightnessNonDiametricalZoneType 
) ;

DROP TABLE IF EXISTS Cone23Core;
CREATE TABLE Cone23Core (
	index  SERIAL PRIMARY KEY,
	turnedV text NOT NULL,-- attribute
	scaleU text NOT NULL,-- attribute
	scaleV text NOT NULL,-- attribute
	form text NOT NULL,-- attribute
	form text NOT NULL,-- attribute
	DiameterBottom DOUBLE PRECISION NOT NULL, 
	DiameterTop DOUBLE PRECISION NOT NULL, 
	Length DOUBLE PRECISION NOT NULL, 
	_ActualZoneAxisType integer, -- index into table ActualZoneAxisType 
	_Axis integer, -- index into table AxisType 
	_Sweep integer  -- index into table SweepType 
) ;

DROP TABLE IF EXISTS Cone23;
CREATE TABLE Cone23 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Cone23Core integer, -- index into table Cone23CoreType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS ConeActualDetermination;
CREATE TABLE ConeActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS ConeBestFit;
CREATE TABLE ConeBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ConeCast;
CREATE TABLE ConeCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ConeCheckedFeature;
CREATE TABLE ConeCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS ConeChecked;
CREATE TABLE ConeChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS ConeConstructionMethod;
CREATE TABLE ConeConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_Transform integer, -- index into table ConicalSegmentTransformType 
	_FromScan integer  -- index into table CylinderFromScanType 
) ;

DROP TABLE IF EXISTS ConeCopy;
CREATE TABLE ConeCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseCone integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ConeFeatureActual;
CREATE TABLE ConeFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Axis integer, -- index into table AxisType 
	_Diameter integer, -- index into table LinearValueType 
	_DiameterMin integer, -- index into table ActualLinearValueType 
	_DiameterMax integer, -- index into table ActualLinearValueType 
	_HalfAngle integer, -- index into table AngularValueType 
	_FullAngle integer, -- index into table AngularValueType 
	_SmallEndDistance integer, -- index into table LinearValueType 
	_LargeEndDistance integer, -- index into table LinearValueType 
	_Sweep integer, -- index into table SweepType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS ConeFeatureDefinition;
CREATE TABLE ConeFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	InternalExternal InternalExternalEnumType NOT NULL, 
	_Diameter integer, -- index into table LinearValueType 
	_HalfAngle integer, -- index into table AngularValueType 
	_FullAngle integer, -- index into table AngularValueType 
	_LargeEndDistance integer, -- index into table LinearValueType 
	_SmallEndDistance integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS ConeFeatureItem;
CREATE TABLE ConeFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS ConeFeatureNominal;
CREATE TABLE ConeFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_ActualZoneAxisType integer, -- index into table ActualZoneAxisType 
	_Axis integer, -- index into table AxisType 
	_Sweep integer  -- index into table SweepType 
) ;

DROP TABLE IF EXISTS ConeFromScan;
CREATE TABLE ConeFromScan (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_SurfaceFeature integer, -- index into table BaseFeatureType 
	_SearchRadius integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS ConePointSamplingStrategy;
CREATE TABLE ConePointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum ConePointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS ConeRecomp;
CREATE TABLE ConeRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS ConeTransform;
CREATE TABLE ConeTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseCone integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS ConicalSegmentActualDetermination;
CREATE TABLE ConicalSegmentActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS ConicalSegmentBestFit;
CREATE TABLE ConicalSegmentBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ConicalSegmentCast;
CREATE TABLE ConicalSegmentCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ConicalSegmentCheckedFeature;
CREATE TABLE ConicalSegmentCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS ConicalSegmentChecked;
CREATE TABLE ConicalSegmentChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS ConicalSegmentConstructionMethod;
CREATE TABLE ConicalSegmentConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS ConicalSegmentCopy;
CREATE TABLE ConicalSegmentCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseConicalSegment integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ConicalSegmentFeatureActual;
CREATE TABLE ConicalSegmentFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Axis integer, -- index into table AxisType 
	_Diameter integer, -- index into table LinearValueType 
	_DiameterMin integer, -- index into table ActualLinearValueType 
	_DiameterMax integer, -- index into table ActualLinearValueType 
	_HalfAngle integer, -- index into table AngularValueType 
	_FullAngle integer, -- index into table AngularValueType 
	_SmallEndDistance integer, -- index into table LinearValueType 
	_LargeEndDistance integer, -- index into table LinearValueType 
	_Sweep integer, -- index into table SweepType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS ConicalSegmentFeatureDefinition;
CREATE TABLE ConicalSegmentFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	InternalExternal InternalExternalEnumType NOT NULL, 
	_Diameter integer, -- index into table LinearValueType 
	_HalfAngle integer, -- index into table AngularValueType 
	_FullAngle integer, -- index into table AngularValueType 
	_LargeEndDistance integer, -- index into table LinearValueType 
	_SmallEndDistance integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS ConicalSegmentFeatureItem;
CREATE TABLE ConicalSegmentFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS ConicalSegmentFeatureNominal;
CREATE TABLE ConicalSegmentFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_ActualZoneAxisType integer, -- index into table ActualZoneAxisType 
	_Axis integer, -- index into table AxisType 
	_Sweep integer  -- index into table SweepType 
) ;

DROP TABLE IF EXISTS ConicalSegmentPointSamplingStrategy;
CREATE TABLE ConicalSegmentPointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum ConePointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS ConicalSegmentRecomp;
CREATE TABLE ConicalSegmentRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS ConicalSegmentTransform;
CREATE TABLE ConicalSegmentTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseConicalSegment integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS ConstantIs;
CREATE TABLE ConstantIs (
	index  SERIAL PRIMARY KEY,
	val text -- attribute
) ;

DROP TABLE IF EXISTS ControlIssueDetails;
CREATE TABLE ControlIssueDetails (
	index  SERIAL PRIMARY KEY,
	_ControlIssue integer, -- index into table ControlIssueType 
	_ControlMethodId integer, -- index into table QIFReferenceFullType 
	_StudyIssueId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS ControlIssue;
CREATE TABLE ControlIssue (
	index  SERIAL PRIMARY KEY,
	ControlIssueEnum ControlIssueEnumType NOT NULL, 
	OtherControlIssue text NOT NULL  
) ;

DROP TABLE IF EXISTS ControlMethod;
CREATE TABLE ControlMethod (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	__AssignableCauseId integer[], -- index into table QIFReferenceFullType 
	_NumOutOfTolerance integer, -- index into table CriterionIntegerType 
	_CpThreshold integer, -- index into table CriterionDecimalType 
	_CriterionAngularType integer, -- index into table CriterionAngularType 
	_CriterionAreaType integer, -- index into table CriterionAreaType 
	_CriterionForceType integer, -- index into table CriterionForceType 
	_CriterionLinearType integer, -- index into table CriterionLinearType 
	_CriterionMassType integer, -- index into table CriterionMassType 
	_CriterionPressureType integer, -- index into table CriterionPressureType 
	_CriterionSpeedType integer, -- index into table CriterionSpeedType 
	_CriterionTemperatureType integer, -- index into table CriterionTemperatureType 
	_CriterionTimeType integer, -- index into table CriterionTimeType 
	_CriterionUserDefinedUnitType integer, -- index into table CriterionUserDefinedUnitType 
	_CpkThreshold integer, -- index into table CriterionDecimalType 
	_CriterionAngularType integer, -- index into table CriterionAngularType 
	_CriterionAreaType integer, -- index into table CriterionAreaType 
	_CriterionForceType integer, -- index into table CriterionForceType 
	_CriterionLinearType integer, -- index into table CriterionLinearType 
	_CriterionMassType integer, -- index into table CriterionMassType 
	_CriterionPressureType integer, -- index into table CriterionPressureType 
	_CriterionSpeedType integer, -- index into table CriterionSpeedType 
	_CriterionTemperatureType integer, -- index into table CriterionTemperatureType 
	_CriterionTimeType integer, -- index into table CriterionTimeType 
	_CriterionUserDefinedUnitType integer, -- index into table CriterionUserDefinedUnitType 
	_CriterionAngularType integer, -- index into table CriterionAngularType 
	_CriterionAreaType integer, -- index into table CriterionAreaType 
	_CriterionForceType integer, -- index into table CriterionForceType 
	_CriterionLinearType integer, -- index into table CriterionLinearType 
	_CriterionMassType integer, -- index into table CriterionMassType 
	_CriterionPressureType integer, -- index into table CriterionPressureType 
	_CriterionSpeedType integer, -- index into table CriterionSpeedType 
	_CriterionTemperatureType integer, -- index into table CriterionTemperatureType 
	_CriterionTimeType integer, -- index into table CriterionTimeType 
	_CriterionUserDefinedUnitType integer, -- index into table CriterionUserDefinedUnitType 
	_PpThreshold integer, -- index into table CriterionDecimalType 
	_CriterionAngularType integer, -- index into table CriterionAngularType 
	_CriterionAreaType integer, -- index into table CriterionAreaType 
	_CriterionForceType integer, -- index into table CriterionForceType 
	_CriterionLinearType integer, -- index into table CriterionLinearType 
	_CriterionMassType integer, -- index into table CriterionMassType 
	_CriterionPressureType integer, -- index into table CriterionPressureType 
	_CriterionSpeedType integer, -- index into table CriterionSpeedType 
	_CriterionTemperatureType integer, -- index into table CriterionTemperatureType 
	_CriterionTimeType integer, -- index into table CriterionTimeType 
	_CriterionUserDefinedUnitType integer, -- index into table CriterionUserDefinedUnitType 
	_PpkThreshold integer, -- index into table CriterionDecimalType 
	_NumOutOfControl integer, -- index into table CriterionIntegerType 
	_TrendGrouping integer, -- index into table CriterionIntegerType 
	_SkewGrouping integer, -- index into table CriterionIntegerType 
	_OneThirdGrouping integer, -- index into table CriterionOutOfType 
	_TwoThirdsGrouping integer, -- index into table CriterionOutOfType 
	_Oscillation integer, -- index into table CriterionOutOfType 
	_Stratification integer, -- index into table CriterionOutOfType 
	_NumOutOfControlRng integer  -- index into table CriterionIntegerType 
) ;

DROP TABLE IF EXISTS CoordinateMeasureFeatureMethod;
CREATE TABLE CoordinateMeasureFeatureMethod (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_ChosenResourceIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_ChosenResourceIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_ChosenResourceIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	NumberOfMeasurementPoints integer  
) ;

DROP TABLE IF EXISTS CoordinateSystemActualTransform;
CREATE TABLE CoordinateSystemActualTransform (
	index  SERIAL PRIMARY KEY,
	_ActualTransform integer, -- index into table TransformMatrixType 
	_TransformInstanceType integer, -- index into table TransformInstanceType 
	_CoordinateSystemId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS CoordinateSystemActualTransforms;
CREATE TABLE CoordinateSystemActualTransforms (
	index  SERIAL PRIMARY KEY,
	__Transform integer[]  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS CoordinateSystemCore;
CREATE TABLE CoordinateSystemCore (
	index  SERIAL PRIMARY KEY,
	_Rotation integer, -- index into table TransformRotationType 
	Origin FLOAT[3]  
) ;

DROP TABLE IF EXISTS CoordinateSystemList;
CREATE TABLE CoordinateSystemList (
	index  SERIAL PRIMARY KEY,
	__CoordinateSystem integer[], -- index into table CADCoordinateSystemType 
	_CommonCoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_MachineCoordinateSystemId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS CoordinateSystemSet;
CREATE TABLE CoordinateSystemSet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__CoordinateSystem integer[]  -- index into table CADCoordinateSystemType 
) ;

DROP TABLE IF EXISTS CoordinateSystem;
CREATE TABLE CoordinateSystem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_NominalTransform integer, -- index into table TransformMatrixType 
	_TransformInstanceType integer, -- index into table TransformInstanceType 
	_InternalCADCoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_ExternalCADCoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_AlignmentOperations integer, -- index into table AlignmentOperationsType 
	SequenceNumber integer  
) ;

DROP TABLE IF EXISTS CorrectiveActionPlan;
CREATE TABLE CorrectiveActionPlan (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	_AssignableCauses integer, -- index into table AssignableCausesType 
	_CorrectiveActions integer  -- index into table CorrectiveActionsType 
) ;

DROP TABLE IF EXISTS CorrectiveActionPlans;
CREATE TABLE CorrectiveActionPlans (
	index  SERIAL PRIMARY KEY,
	__CorrectiveActionPlan integer[]  -- index into table CorrectiveActionPlanType 
) ;

DROP TABLE IF EXISTS CorrectiveAction;
CREATE TABLE CorrectiveAction (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	ActionToTake text NOT NULL, 
	ActionToTakeEnum ActionToTakeEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS CorrectiveActions;
CREATE TABLE CorrectiveActions (
	index  SERIAL PRIMARY KEY,
	__CorrectiveAction integer[]  -- index into table CorrectiveActionType 
) ;

DROP TABLE IF EXISTS CriterionAngular;
CREATE TABLE CriterionAngular (
	index  SERIAL PRIMARY KEY,
	angularUnit text NOT NULL,-- attribute
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2), 
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2)  
) ;

DROP TABLE IF EXISTS CriterionArea;
CREATE TABLE CriterionArea (
	index  SERIAL PRIMARY KEY,
	areaUnit text NOT NULL,-- attribute
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2), 
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2)  
) ;

DROP TABLE IF EXISTS CriterionDecimal;
CREATE TABLE CriterionDecimal (
	index  SERIAL PRIMARY KEY,
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2)  
) ;

DROP TABLE IF EXISTS CriterionForce;
CREATE TABLE CriterionForce (
	index  SERIAL PRIMARY KEY,
	forceUnit text NOT NULL,-- attribute
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2), 
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2)  
) ;

DROP TABLE IF EXISTS CriterionInteger;
CREATE TABLE CriterionInteger (
	index  SERIAL PRIMARY KEY,
	Limit integer NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit integer  
) ;

DROP TABLE IF EXISTS CriterionLinear;
CREATE TABLE CriterionLinear (
	index  SERIAL PRIMARY KEY,
	linearUnit text NOT NULL,-- attribute
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2), 
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2)  
) ;

DROP TABLE IF EXISTS CriterionMass;
CREATE TABLE CriterionMass (
	index  SERIAL PRIMARY KEY,
	massUnit text NOT NULL,-- attribute
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2), 
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2)  
) ;

DROP TABLE IF EXISTS CriterionOutOf;
CREATE TABLE CriterionOutOf (
	index  SERIAL PRIMARY KEY,
	Numerator integer NOT NULL, 
	Denominator integer NOT NULL, 
	_NumberAllowedExceptions integer  -- index into table LimitingNumberType 
) ;

DROP TABLE IF EXISTS CriterionPressure;
CREATE TABLE CriterionPressure (
	index  SERIAL PRIMARY KEY,
	pressureUnit text NOT NULL,-- attribute
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2), 
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2)  
) ;

DROP TABLE IF EXISTS CriterionSpeed;
CREATE TABLE CriterionSpeed (
	index  SERIAL PRIMARY KEY,
	speedUnit text NOT NULL,-- attribute
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2), 
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2)  
) ;

DROP TABLE IF EXISTS CriterionTemperature;
CREATE TABLE CriterionTemperature (
	index  SERIAL PRIMARY KEY,
	temperatureUnit text NOT NULL,-- attribute
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2), 
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2)  
) ;

DROP TABLE IF EXISTS CriterionTime;
CREATE TABLE CriterionTime (
	index  SERIAL PRIMARY KEY,
	timeUnit text NOT NULL,-- attribute
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2), 
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2)  
) ;

DROP TABLE IF EXISTS CriterionUserDefinedUnit;
CREATE TABLE CriterionUserDefinedUnit (
	index  SERIAL PRIMARY KEY,
	unitName text,-- attribute
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2), 
	Limit DECIMAL(10,2) NOT NULL, 
	_NumberAllowedExceptions integer, -- index into table LimitingNumberType 
	ExtremeLimit DECIMAL(10,2)  
) ;

DROP TABLE IF EXISTS CuboidActualDetermination;
CREATE TABLE CuboidActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS CuboidBestFit;
CREATE TABLE CuboidBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS CuboidCast;
CREATE TABLE CuboidCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS CuboidCheckedFeature;
CREATE TABLE CuboidCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS CuboidChecked;
CREATE TABLE CuboidChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS CuboidConstructionMethod;
CREATE TABLE CuboidConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS CuboidCopy;
CREATE TABLE CuboidCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseCuboid integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS CuboidFeatureActual;
CREATE TABLE CuboidFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Length integer, -- index into table LinearValueType 
	_LengthMax integer, -- index into table ActualLinearValueType 
	_LengthMin integer, -- index into table ActualLinearValueType 
	_LengthVector integer, -- index into table UnitVectorType 
	_Width integer, -- index into table LinearValueType 
	_WidthMax integer, -- index into table ActualLinearValueType 
	_WidthMin integer, -- index into table ActualLinearValueType 
	_Height integer, -- index into table double 
	_HeightMax integer, -- index into table ActualLinearValueType 
	_HeightMin integer, -- index into table ActualLinearValueType 
	_HeightVector integer, -- index into table UnitVectorType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS CuboidFeatureDefinition;
CREATE TABLE CuboidFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	InternalExternal InternalExternalEnumType NOT NULL, 
	_Length integer, -- index into table LinearValueType 
	_Width integer, -- index into table LinearValueType 
	_Height integer  -- index into table double 
) ;

DROP TABLE IF EXISTS CuboidFeatureItem;
CREATE TABLE CuboidFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS CuboidFeatureNominal;
CREATE TABLE CuboidFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_ActualPointType integer, -- index into table ActualPointType 
	_Location integer, -- index into table LocationType 
	LengthVector text NOT NULL, 
	HeightVector text NOT NULL  
) ;

DROP TABLE IF EXISTS CuboidPointSamplingStrategy;
CREATE TABLE CuboidPointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum PrismPointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS CuboidRecomp;
CREATE TABLE CuboidRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS CuboidTransform;
CREATE TABLE CuboidTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseCuboid integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS Curve12Oriented;
CREATE TABLE Curve12Oriented (
	index  SERIAL PRIMARY KEY,
	turned text NOT NULL,-- attribute
	_Aggregate12CoreType integer, -- index into table Aggregate12CoreType 
	_Aggregate13CoreType integer, -- index into table Aggregate13CoreType 
	_ArcCircular12CoreType integer, -- index into table ArcCircular12CoreType 
	_ArcCircular13CoreType integer, -- index into table ArcCircular13CoreType 
	_ArcConic12CoreType integer, -- index into table ArcConic12CoreType 
	_ArcConic13CoreType integer, -- index into table ArcConic13CoreType 
	_Nurbs12CoreType integer, -- index into table Nurbs12CoreType 
	_Nurbs13CoreType integer, -- index into table Nurbs13CoreType 
	_Polyline12CoreType integer, -- index into table Polyline12CoreType 
	_Polyline13CoreType integer, -- index into table Polyline13CoreType 
	_Segment12CoreType integer, -- index into table Segment12CoreType 
	_Segment13CoreType integer, -- index into table Segment13CoreType 
	_Spline12CoreType integer, -- index into table Spline12CoreType 
	_Spline13CoreType integer  -- index into table Spline13CoreType 
) ;

DROP TABLE IF EXISTS Curve12Set;
CREATE TABLE Curve12Set (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__Aggregate12Type integer[], -- index into table Aggregate12Type 
	__ArcCircular12Type integer[], -- index into table ArcCircular12Type 
	__ArcConic12Type integer[], -- index into table ArcConic12Type 
	__Nurbs12Type integer[], -- index into table Nurbs12Type 
	__Polyline12Type integer[], -- index into table Polyline12Type 
	__Segment12Type integer[], -- index into table Segment12Type 
	__Spline12Type integer[]  -- index into table Spline12Type 
) ;

DROP TABLE IF EXISTS Curve13Core;
CREATE TABLE Curve13Core (
	index  SERIAL PRIMARY KEY,
	_Aggregate12CoreType integer, -- index into table Aggregate12CoreType 
	_Aggregate13CoreType integer, -- index into table Aggregate13CoreType 
	_ArcCircular12CoreType integer, -- index into table ArcCircular12CoreType 
	_ArcCircular13CoreType integer, -- index into table ArcCircular13CoreType 
	_ArcConic12CoreType integer, -- index into table ArcConic12CoreType 
	_ArcConic13CoreType integer, -- index into table ArcConic13CoreType 
	_Nurbs12CoreType integer, -- index into table Nurbs12CoreType 
	_Nurbs13CoreType integer, -- index into table Nurbs13CoreType 
	_Polyline12CoreType integer, -- index into table Polyline12CoreType 
	_Polyline13CoreType integer, -- index into table Polyline13CoreType 
	_Segment12CoreType integer, -- index into table Segment12CoreType 
	_Segment13CoreType integer, -- index into table Segment13CoreType 
	_Spline12CoreType integer, -- index into table Spline12CoreType 
	_Spline13CoreType integer  -- index into table Spline13CoreType 
) ;

DROP TABLE IF EXISTS Curve13Oriented;
CREATE TABLE Curve13Oriented (
	index  SERIAL PRIMARY KEY,
	turned text NOT NULL,-- attribute
	_Aggregate12CoreType integer, -- index into table Aggregate12CoreType 
	_Aggregate13CoreType integer, -- index into table Aggregate13CoreType 
	_ArcCircular12CoreType integer, -- index into table ArcCircular12CoreType 
	_ArcCircular13CoreType integer, -- index into table ArcCircular13CoreType 
	_ArcConic12CoreType integer, -- index into table ArcConic12CoreType 
	_ArcConic13CoreType integer, -- index into table ArcConic13CoreType 
	_Nurbs12CoreType integer, -- index into table Nurbs12CoreType 
	_Nurbs13CoreType integer, -- index into table Nurbs13CoreType 
	_Polyline12CoreType integer, -- index into table Polyline12CoreType 
	_Polyline13CoreType integer, -- index into table Polyline13CoreType 
	_Segment12CoreType integer, -- index into table Segment12CoreType 
	_Segment13CoreType integer, -- index into table Segment13CoreType 
	_Spline12CoreType integer, -- index into table Spline12CoreType 
	_Spline13CoreType integer  -- index into table Spline13CoreType 
) ;

DROP TABLE IF EXISTS Curve13Set;
CREATE TABLE Curve13Set (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__Aggregate13Type integer[], -- index into table Aggregate13Type 
	__ArcCircular13Type integer[], -- index into table ArcCircular13Type 
	__ArcConic13Type integer[], -- index into table ArcConic13Type 
	__Nurbs13Type integer[], -- index into table Nurbs13Type 
	__Polyline13Type integer[], -- index into table Polyline13Type 
	__Segment13Type integer[], -- index into table Segment13Type 
	__Spline13Type integer[]  -- index into table Spline13Type 
) ;

DROP TABLE IF EXISTS CurveLengthCharacteristicActual;
CREATE TABLE CurveLengthCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS CurveLengthCharacteristicDefinition;
CREATE TABLE CurveLengthCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS CurveLengthCharacteristicItem;
CREATE TABLE CurveLengthCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS CurveLengthCharacteristicNominal;
CREATE TABLE CurveLengthCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS CurveLengthCharacteristicStatsEval;
CREATE TABLE CurveLengthCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS CurveMeshSet;
CREATE TABLE CurveMeshSet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__PathTriangulation integer[]  -- index into table PathTriangulationType 
) ;

DROP TABLE IF EXISTS CurveSubstituteFeatureAlgorithm;
CREATE TABLE CurveSubstituteFeatureAlgorithm (
	index  SERIAL PRIMARY KEY,
	CurveSubstituteFeatureAlgorithmEnum CurveSubstituteFeatureAlgorithmEnumType NOT NULL, 
	OtherCurveSubstituteFeatureAlgorithm text NOT NULL  
) ;

DROP TABLE IF EXISTS CustomerOrganization;
CREATE TABLE CustomerOrganization (
	index  SERIAL PRIMARY KEY,
	Name text NOT NULL, 
	_Address integer, -- index into table PhysicalAddressType 
	Name text NOT NULL, 
	_Address integer, -- index into table PhysicalAddressType 
	CustomerNumber text NOT NULL  
) ;

DROP TABLE IF EXISTS Cylinder23Core;
CREATE TABLE Cylinder23Core (
	index  SERIAL PRIMARY KEY,
	turnedV text NOT NULL,-- attribute
	scaleU text NOT NULL,-- attribute
	scaleV text NOT NULL,-- attribute
	form text NOT NULL,-- attribute
	form text NOT NULL,-- attribute
	Diameter DOUBLE PRECISION NOT NULL, 
	Length DOUBLE PRECISION NOT NULL, 
	_ActualZoneAxisType integer, -- index into table ActualZoneAxisType 
	_Axis integer, -- index into table AxisType 
	_Sweep integer  -- index into table SweepType 
) ;

DROP TABLE IF EXISTS Cylinder23;
CREATE TABLE Cylinder23 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Cylinder23Core integer, -- index into table Cylinder23CoreType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS CylinderActualDetermination;
CREATE TABLE CylinderActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS CylinderBestFit;
CREATE TABLE CylinderBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS CylinderCast;
CREATE TABLE CylinderCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS CylinderCheckedFeature;
CREATE TABLE CylinderCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS CylinderChecked;
CREATE TABLE CylinderChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS CylinderConstructionMethod;
CREATE TABLE CylinderConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_Transform integer, -- index into table ConicalSegmentTransformType 
	_FromScan integer  -- index into table CylinderFromScanType 
) ;

DROP TABLE IF EXISTS CylinderCopy;
CREATE TABLE CylinderCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseCylinder integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS CylinderFeatureActual;
CREATE TABLE CylinderFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Axis integer, -- index into table AxisType 
	_Diameter integer, -- index into table LinearValueType 
	_Length integer, -- index into table LinearValueType 
	_DiameterMin integer, -- index into table ActualLinearValueType 
	_DiameterMax integer, -- index into table ActualLinearValueType 
	_Sweep integer, -- index into table SweepType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS CylinderFeatureDefinition;
CREATE TABLE CylinderFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	InternalExternal InternalExternalEnumType NOT NULL, 
	_Diameter integer, -- index into table LinearValueType 
	_Length integer, -- index into table LinearValueType 
	_Bottom integer  -- index into table BottomType 
) ;

DROP TABLE IF EXISTS CylinderFeatureItem;
CREATE TABLE CylinderFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS CylinderFeatureNominal;
CREATE TABLE CylinderFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_ActualZoneAxisType integer, -- index into table ActualZoneAxisType 
	_Axis integer, -- index into table AxisType 
	_Sweep integer  -- index into table SweepType 
) ;

DROP TABLE IF EXISTS CylinderFromScan;
CREATE TABLE CylinderFromScan (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_SurfaceFeature integer, -- index into table BaseFeatureType 
	_SearchRadius integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS CylinderPointSamplingStrategy;
CREATE TABLE CylinderPointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum SurfaceOfRevolutionPointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS CylinderRecomp;
CREATE TABLE CylinderRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS CylinderTransform;
CREATE TABLE CylinderTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseCylinder integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS Cylinder;
CREATE TABLE Cylinder (
	index  SERIAL PRIMARY KEY,
	_ActualPointType integer, -- index into table ActualPointType 
	_CenterPoint integer, -- index into table PointType 
	_Diameter integer, -- index into table LinearValueType 
	Axis text NOT NULL, 
	_Length integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS CylindricalSegmentActualDetermination;
CREATE TABLE CylindricalSegmentActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS CylindricalSegmentBestFit;
CREATE TABLE CylindricalSegmentBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS CylindricalSegmentCast;
CREATE TABLE CylindricalSegmentCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS CylindricalSegmentCheckedFeature;
CREATE TABLE CylindricalSegmentCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS CylindricalSegmentChecked;
CREATE TABLE CylindricalSegmentChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS CylindricalSegmentConstructionMethod;
CREATE TABLE CylindricalSegmentConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS CylindricalSegmentCopy;
CREATE TABLE CylindricalSegmentCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseCylindricalSegment integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS CylindricalSegmentFeatureActual;
CREATE TABLE CylindricalSegmentFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Axis integer, -- index into table AxisType 
	_Diameter integer, -- index into table LinearValueType 
	_Length integer, -- index into table LinearValueType 
	_DiameterMin integer, -- index into table ActualLinearValueType 
	_DiameterMax integer, -- index into table ActualLinearValueType 
	_Sweep integer, -- index into table SweepType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS CylindricalSegmentFeatureDefinition;
CREATE TABLE CylindricalSegmentFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	InternalExternal InternalExternalEnumType NOT NULL, 
	_Diameter integer, -- index into table LinearValueType 
	_Length integer, -- index into table LinearValueType 
	_Bottom integer  -- index into table BottomType 
) ;

DROP TABLE IF EXISTS CylindricalSegmentFeatureItem;
CREATE TABLE CylindricalSegmentFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS CylindricalSegmentFeatureNominal;
CREATE TABLE CylindricalSegmentFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_ActualZoneAxisType integer, -- index into table ActualZoneAxisType 
	_Axis integer, -- index into table AxisType 
	_Sweep integer  -- index into table SweepType 
) ;

DROP TABLE IF EXISTS CylindricalSegmentPointSamplingStrategy;
CREATE TABLE CylindricalSegmentPointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum SurfaceOfRevolutionPointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS CylindricalSegmentRecomp;
CREATE TABLE CylindricalSegmentRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS CylindricalSegmentTransform;
CREATE TABLE CylindricalSegmentTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseCylindricalSegment integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS CylindricityCharacteristicActual;
CREATE TABLE CylindricityCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_MaxCylindricity integer, -- index into table ActualLinearValueType 
	_ZoneRadii integer, -- index into table ActualZoneRadiiType 
	_ZoneAxis integer  -- index into table ActualZoneAxisType 
) ;

DROP TABLE IF EXISTS CylindricityCharacteristicDefinition;
CREATE TABLE CylindricityCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_ToleranceZonePerUnitAngle integer, -- index into table ToleranceZonePerUnitAngleType 
	_ToleranceZonePerUnitArcLength integer, -- index into table ToleranceZonePerUnitLengthType 
	_ToleranceZonePerUnitPolarArea integer, -- index into table ToleranceZonePerUnitPolarAreaType 
	_ToleranceZonePerUnitArea integer, -- index into table ToleranceZonePerUnitAreaType 
	_ToleranceZonePerUnitLength integer, -- index into table ToleranceZonePerUnitLengthType 
	_ToleranceZonePerUnitAngle integer, -- index into table ToleranceZonePerUnitAngleType 
	_ToleranceZonePerUnitArcLength integer, -- index into table ToleranceZonePerUnitLengthType 
	_ToleranceZonePerUnitPolarArea integer, -- index into table ToleranceZonePerUnitPolarAreaType 
	_ToleranceZonePerUnitArea integer, -- index into table ToleranceZonePerUnitAreaType 
	_ToleranceZonePerUnitLength integer  -- index into table ToleranceZonePerUnitLengthType 
) ;

DROP TABLE IF EXISTS CylindricityCharacteristicItem;
CREATE TABLE CylindricityCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS CylindricityCharacteristicNominal;
CREATE TABLE CylindricityCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_ZoneLimit integer  -- index into table CharacteristicDirectionalZoneLimitType 
) ;

DROP TABLE IF EXISTS CylindricityCharacteristicStatsEval;
CREATE TABLE CylindricityCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_MaxCylindricityStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS DMESelectionRule;
CREATE TABLE DMESelectionRule (
	index  SERIAL PRIMARY KEY 
) ;

DROP TABLE IF EXISTS DMESelectionRules;
CREATE TABLE DMESelectionRules (
	index  SERIAL PRIMARY KEY,
	__DMESelectionRule integer[]  -- index into table DMESelectionRuleType 
) ;

DROP TABLE IF EXISTS DatumDefinition;
CREATE TABLE DatumDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	DatumLabel text NOT NULL, 
	_DatumTargetIds integer, -- index into table ArrayReferenceFullType 
	_FeatureNominalIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS DatumDefinitions;
CREATE TABLE DatumDefinitions (
	index  SERIAL PRIMARY KEY,
	__DatumDefinition integer[]  -- index into table DatumDefinitionType 
) ;

DROP TABLE IF EXISTS DatumFeatureSimulatorModifier;
CREATE TABLE DatumFeatureSimulatorModifier (
	index  SERIAL PRIMARY KEY,
	_LinearSize integer, -- index into table LinearValueType 
	_DiametricalSize integer, -- index into table LinearValueType 
	BasicSize text NOT NULL  
) ;

DROP TABLE IF EXISTS DatumPrecedenceAlignmentOperation;
CREATE TABLE DatumPrecedenceAlignmentOperation (
	index  SERIAL PRIMARY KEY,
	SequenceNumber integer NOT NULL, 
	SequenceNumber integer NOT NULL, 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	PrimaryAxis text NOT NULL, 
	SecondaryAxis text  
) ;

DROP TABLE IF EXISTS DatumReferenceFrame;
CREATE TABLE DatumReferenceFrame (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	__Datum integer[], -- index into table DatumWithPrecedenceType 
	Name text, 
	Description text, 
	_CoordinateSystemId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS DatumReferenceFrames;
CREATE TABLE DatumReferenceFrames (
	index  SERIAL PRIMARY KEY,
	__DatumReferenceFrame integer[]  -- index into table DatumReferenceFrameType 
) ;

DROP TABLE IF EXISTS DatumTargetCircularAreaDefinition;
CREATE TABLE DatumTargetCircularAreaDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	DatumTargetLabel text NOT NULL, 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_MovableDatumTarget integer, -- index into table MovableDatumTargetDirectionType 
	_Attributes integer, -- index into table AttributesType 
	DatumTargetLabel text NOT NULL, 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_MovableDatumTarget integer, -- index into table MovableDatumTargetDirectionType 
	_CharacteristicCircularZoneLimitType integer, -- index into table CharacteristicCircularZoneLimitType 
	_Circle integer  -- index into table CircleType 
) ;

DROP TABLE IF EXISTS DatumTargetCircularLineDefinition;
CREATE TABLE DatumTargetCircularLineDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	DatumTargetLabel text NOT NULL, 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_MovableDatumTarget integer, -- index into table MovableDatumTargetDirectionType 
	_Attributes integer, -- index into table AttributesType 
	DatumTargetLabel text NOT NULL, 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_MovableDatumTarget integer, -- index into table MovableDatumTargetDirectionType 
	_CharacteristicCircularZoneLimitType integer, -- index into table CharacteristicCircularZoneLimitType 
	_Circle integer  -- index into table CircleType 
) ;

DROP TABLE IF EXISTS DatumTargetCylindricalAreaDefinition;
CREATE TABLE DatumTargetCylindricalAreaDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	DatumTargetLabel text NOT NULL, 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_MovableDatumTarget integer, -- index into table MovableDatumTargetDirectionType 
	_Attributes integer, -- index into table AttributesType 
	DatumTargetLabel text NOT NULL, 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_MovableDatumTarget integer, -- index into table MovableDatumTargetDirectionType 
	_Cylinder integer  -- index into table CylinderType 
) ;

DROP TABLE IF EXISTS DatumTargetDefinitions;
CREATE TABLE DatumTargetDefinitions (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__DatumTargetCircularAreaDefinitionType integer[], -- index into table DatumTargetCircularAreaDefinitionType 
	__DatumTargetCircularLineDefinitionType integer[], -- index into table DatumTargetCircularLineDefinitionType 
	__DatumTargetCylindricalAreaDefinitionType integer[], -- index into table DatumTargetCylindricalAreaDefinitionType 
	__DatumTargetIrregularAreaDefinitionType integer[], -- index into table DatumTargetIrregularAreaDefinitionType 
	__DatumTargetLineDefinitionType integer[], -- index into table DatumTargetLineDefinitionType 
	__DatumTargetPointDefinitionType integer[], -- index into table DatumTargetPointDefinitionType 
	__DatumTargetRectangularAreaDefinitionType integer[], -- index into table DatumTargetRectangularAreaDefinitionType 
	__DatumTargetSphereDefinitionType integer[]  -- index into table DatumTargetSphereDefinitionType 
) ;

DROP TABLE IF EXISTS DatumTargetIrregularAreaDefinition;
CREATE TABLE DatumTargetIrregularAreaDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	DatumTargetLabel text NOT NULL, 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_MovableDatumTarget integer, -- index into table MovableDatumTargetDirectionType 
	_Attributes integer, -- index into table AttributesType 
	DatumTargetLabel text NOT NULL, 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_MovableDatumTarget integer, -- index into table MovableDatumTargetDirectionType 
	_Boundary integer  -- index into table PolyLineType 
) ;

DROP TABLE IF EXISTS DatumTargetLineDefinition;
CREATE TABLE DatumTargetLineDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	DatumTargetLabel text NOT NULL, 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_MovableDatumTarget integer, -- index into table MovableDatumTargetDirectionType 
	_Attributes integer, -- index into table AttributesType 
	DatumTargetLabel text NOT NULL, 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_MovableDatumTarget integer, -- index into table MovableDatumTargetDirectionType 
	_Line integer  -- index into table LineSegmentType 
) ;

DROP TABLE IF EXISTS DatumTargetPointDefinition;
CREATE TABLE DatumTargetPointDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	DatumTargetLabel text NOT NULL, 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_MovableDatumTarget integer, -- index into table MovableDatumTargetDirectionType 
	_Attributes integer, -- index into table AttributesType 
	DatumTargetLabel text NOT NULL, 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_MovableDatumTarget integer, -- index into table MovableDatumTargetDirectionType 
	_ActualPointType integer, -- index into table ActualPointType 
	_Point integer  -- index into table ElementReferenceType 
) ;

DROP TABLE IF EXISTS DatumTargetRectangularAreaDefinition;
CREATE TABLE DatumTargetRectangularAreaDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	DatumTargetLabel text NOT NULL, 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_MovableDatumTarget integer, -- index into table MovableDatumTargetDirectionType 
	_Attributes integer, -- index into table AttributesType 
	DatumTargetLabel text NOT NULL, 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_MovableDatumTarget integer, -- index into table MovableDatumTargetDirectionType 
	_CharacteristicRectangularZoneLimitType integer, -- index into table CharacteristicRectangularZoneLimitType 
	_Rectangle integer  -- index into table RectangleType 
) ;

DROP TABLE IF EXISTS DatumTargetSphereDefinition;
CREATE TABLE DatumTargetSphereDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	DatumTargetLabel text NOT NULL, 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_MovableDatumTarget integer, -- index into table MovableDatumTargetDirectionType 
	_Attributes integer, -- index into table AttributesType 
	DatumTargetLabel text NOT NULL, 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_MovableDatumTarget integer, -- index into table MovableDatumTargetDirectionType 
	_Sphere integer  -- index into table SphereType 
) ;

DROP TABLE IF EXISTS DatumTranslation;
CREATE TABLE DatumTranslation (
	index  SERIAL PRIMARY KEY,
	DatumTranslationAllowed BOOLEAN NOT NULL  
) ;

DROP TABLE IF EXISTS Datum;
CREATE TABLE Datum (
	index  SERIAL PRIMARY KEY,
	_DatumDefinitionId integer, -- index into table QIFReferenceFullType 
	MaterialModifier MaterialModifierEnumType NOT NULL, 
	ReferencedComponent ReferencedComponentEnumType NOT NULL, 
	_DatumFeatureSimulatorModifier integer, -- index into table DatumFeatureSimulatorModifierType 
	_DatumTranslation integer, -- index into table DatumTranslationType 
	_DegreesOfFreedom integer, -- index into table DegreesOfFreedomType 
	_ProjectedDatum integer, -- index into table LinearValueType 
	DiameterModifier DiameterModifierEnumType, 
	SectionModifier SectionModifierEnumType, 
	ContactingFeature BOOLEAN, 
	DistanceVariable BOOLEAN, 
	DatumFixed BOOLEAN, 
	ReducedDatum ReducedDatumEnumType, 
	ConstrainOrientation BOOLEAN, 
	ConstrainSubsequent BOOLEAN  
) ;

DROP TABLE IF EXISTS DatumWithPrecedence;
CREATE TABLE DatumWithPrecedence (
	index  SERIAL PRIMARY KEY,
	_SimpleDatum integer, -- index into table DatumType 
	_NominalDatumFeature integer, -- index into table NominalDatumFeatureType 
	_ActualDatumFeature integer, -- index into table ActualDatumFeatureType 
	_CompoundDatum integer, -- index into table CompoundDatumType 
	_Precedence integer  -- index into table PrecedenceType 
) ;

DROP TABLE IF EXISTS DefinitionExternal;
CREATE TABLE DefinitionExternal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	_PrintedDrawing integer, -- index into table PrintedDrawingType 
	_DigitalDrawing integer, -- index into table DigitalDrawingType 
	_DigitalModel integer, -- index into table DigitalModelType 
	_PhysicalModel integer  -- index into table PhysicalModelType 
) ;

DROP TABLE IF EXISTS DegreesOfFreedom;
CREATE TABLE DegreesOfFreedom (
	index  SERIAL PRIMARY KEY,
	DegreeOfFreedom DegreeOfFreedomEnumType NOT NULL, 
	ISODegreeOfFreedom ISODegreeOfFreedomEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS DepthCharacteristicActual;
CREATE TABLE DepthCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS DepthCharacteristicDefinition;
CREATE TABLE DepthCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS DepthCharacteristicItem;
CREATE TABLE DepthCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS DepthCharacteristicNominal;
CREATE TABLE DepthCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS DepthCharacteristicStatsEval;
CREATE TABLE DepthCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS DiameterCharacteristicActual;
CREATE TABLE DiameterCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS DiameterCharacteristicDefinition;
CREATE TABLE DiameterCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS DiameterCharacteristicItem;
CREATE TABLE DiameterCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS DiameterCharacteristicNominal;
CREATE TABLE DiameterCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS DiameterCharacteristicStatsEval;
CREATE TABLE DiameterCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS DigitalDrawing;
CREATE TABLE DigitalDrawing (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	Name text NOT NULL, 
	_File integer, -- index into table FileInternalType 
	_Application integer, -- index into table ApplicationType 
	_Author integer, -- index into table AuthorType 
	_ApplicationSource integer, -- index into table ApplicationType 
	Description text, 
	_Entities integer  -- index into table EntitiesExternalType 
) ;

DROP TABLE IF EXISTS DigitalModelFormat;
CREATE TABLE DigitalModelFormat (
	index  SERIAL PRIMARY KEY,
	DigitalModelFormatEnum DigitalModelFormatEnumType NOT NULL, 
	OtherDigitalModelFormat text NOT NULL  
) ;

DROP TABLE IF EXISTS DigitalModel;
CREATE TABLE DigitalModel (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	Name text NOT NULL, 
	_File integer, -- index into table FileInternalType 
	_Application integer, -- index into table ApplicationType 
	_Author integer, -- index into table AuthorType 
	_ApplicationSource integer, -- index into table ApplicationType 
	Description text, 
	_Units integer, -- index into table OtherUnitsType 
	GDT GDTEnumType, 
	Topology TopologyEnumType, 
	_Entities integer  -- index into table EntitiesExternalType 
) ;

DROP TABLE IF EXISTS DirectionFeature;
CREATE TABLE DirectionFeature (
	index  SERIAL PRIMARY KEY,
	DirectionFeatureEnum ModifyingPlaneEnumType NOT NULL, 
	_DatumDefinitionId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS DirectionalOffset;
CREATE TABLE DirectionalOffset (
	index  SERIAL PRIMARY KEY,
	_Offset integer, -- index into table PlaneOffsetType 
	NominalDirection text NOT NULL, 
	_FeatureDirection integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS DistanceBetweenCharacteristicActual;
CREATE TABLE DistanceBetweenCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_AnalysisVector integer  -- index into table ActualUnitVectorType 
) ;

DROP TABLE IF EXISTS DistanceBetweenCharacteristicDefinition;
CREATE TABLE DistanceBetweenCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS DistanceBetweenCharacteristicItem;
CREATE TABLE DistanceBetweenCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS DistanceBetweenCharacteristicNominal;
CREATE TABLE DistanceBetweenCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	AnalysisVector text, 
	AnalysisMode DistanceBetweenAnalysisModeEnumType NOT NULL, 
	_MeasurementDirective integer, -- index into table MeasurementDirectiveType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_ZoneLimit integer  -- index into table CharacteristicDirectionalZoneLimitType 
) ;

DROP TABLE IF EXISTS DistanceBetweenCharacteristicStatsEval;
CREATE TABLE DistanceBetweenCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS DistanceFromCharacteristicActual;
CREATE TABLE DistanceFromCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_AnalysisVector integer  -- index into table ActualUnitVectorType 
) ;

DROP TABLE IF EXISTS DistanceFromCharacteristicDefinition;
CREATE TABLE DistanceFromCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS DistanceFromCharacteristicItem;
CREATE TABLE DistanceFromCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS DistanceFromCharacteristicNominal;
CREATE TABLE DistanceFromCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_OriginReference integer, -- index into table OriginReferenceType 
	AnalysisVector text, 
	AnalysisMode DistanceBetweenAnalysisModeEnumType NOT NULL, 
	_MeasurementDirective integer, -- index into table MeasurementDirectiveType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_ZoneLimit integer  -- index into table CharacteristicDirectionalZoneLimitType 
) ;

DROP TABLE IF EXISTS DistanceFromCharacteristicStatsEval;
CREATE TABLE DistanceFromCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS DistributionTransformation;
CREATE TABLE DistributionTransformation (
	index  SERIAL PRIMARY KEY,
	DistributionTransformationEnum DistributionTransformationEnumType NOT NULL, 
	BoxCoxTransformation DECIMAL(10,2) NOT NULL, 
	OtherDistributionTransformation text NOT NULL  
) ;

DROP TABLE IF EXISTS DividedBy;
CREATE TABLE DividedBy (
	index  SERIAL PRIMARY KEY,
	__ArithmeticCharacteristicParameterType integer[], -- index into table ArithmeticCharacteristicParameterType 
	__ArithmeticFeatureParameterType integer[], -- index into table ArithmeticFeatureParameterType 
	__DividedByType integer[], -- index into table DividedByType 
	__MinusType integer[], -- index into table MinusType 
	__NegateType integer[], -- index into table NegateType 
	__PlusType integer[], -- index into table PlusType 
	__TimesType integer[], -- index into table TimesType 
	__ArithmeticCharacteristicParameterType integer[], -- index into table ArithmeticCharacteristicParameterType 
	__ArithmeticFeatureParameterType integer[], -- index into table ArithmeticFeatureParameterType 
	__DividedByType integer[], -- index into table DividedByType 
	__MinusType integer[], -- index into table MinusType 
	__NegateType integer[], -- index into table NegateType 
	__PlusType integer[], -- index into table PlusType 
	__TimesType integer[]  -- index into table TimesType 
) ;

DROP TABLE IF EXISTS DocumentFileInstruction;
CREATE TABLE DocumentFileInstruction (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_ExternalFile integer  -- index into table ExternalFileReferenceType 
) ;

DROP TABLE IF EXISTS EdgeOriented;
CREATE TABLE EdgeOriented (
	index  SERIAL PRIMARY KEY,
	turned text NOT NULL,-- attribute
	Id text NOT NULL, 
	Id text NOT NULL  
) ;

DROP TABLE IF EXISTS EdgePointActualDetermination;
CREATE TABLE EdgePointActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS EdgePointCast;
CREATE TABLE EdgePointCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS EdgePointCheckedFeature;
CREATE TABLE EdgePointCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS EdgePointChecked;
CREATE TABLE EdgePointChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS EdgePointConstructionMethod;
CREATE TABLE EdgePointConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_Transform integer, -- index into table ConicalSegmentTransformType 
	_FromScan integer  -- index into table CylinderFromScanType 
) ;

DROP TABLE IF EXISTS EdgePointCopy;
CREATE TABLE EdgePointCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseEdgePoint integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS EdgePointFeatureActual;
CREATE TABLE EdgePointFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Normal integer, -- index into table UnitVectorSimpleType 
	_AdjacentNormal integer  -- index into table ActualUnitVectorType 
) ;

DROP TABLE IF EXISTS EdgePointFeatureDefinition;
CREATE TABLE EdgePointFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	InternalExternal InternalExternalEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS EdgePointFeatureItem;
CREATE TABLE EdgePointFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer  -- index into table ToroidalSegmentActualDeterminationType 
) ;

DROP TABLE IF EXISTS EdgePointFeatureNominal;
CREATE TABLE EdgePointFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_ActualPointType integer, -- index into table ActualPointType 
	_Location integer, -- index into table LocationType 
	Normal text NOT NULL, 
	AdjacentNormal text  
) ;

DROP TABLE IF EXISTS EdgePointFromScan;
CREATE TABLE EdgePointFromScan (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_SurfaceFeature integer, -- index into table BaseFeatureType 
	_SearchRadius integer, -- index into table LinearValueType 
	_PatchRadius integer, -- index into table LinearValueType 
	_Distance integer, -- index into table LinearValueType 
	_Depth integer, -- index into table LinearValueType 
	RetrievalMethod RetrievalMethodEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS EdgePointTransform;
CREATE TABLE EdgePointTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseEdgePoint integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS EdgeSet;
CREATE TABLE EdgeSet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__Edge integer[]  -- index into table EdgeType 
) ;

DROP TABLE IF EXISTS Edge;
CREATE TABLE Edge (
	index  SERIAL PRIMARY KEY,
	tolerance text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Curve integer, -- index into table Curve13CoreType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_VertexBeg integer, -- index into table ElementReferenceType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_VertexEnd integer  -- index into table ElementReferenceType 
) ;

DROP TABLE IF EXISTS EffectiveWorkingVolume;
CREATE TABLE EffectiveWorkingVolume (
	index  SERIAL PRIMARY KEY,
	_ActualPointType integer, -- index into table ActualPointType 
	_MinPoint integer, -- index into table PointType 
	_ActualPointType integer, -- index into table ActualPointType 
	_MaxPoint integer  -- index into table PointType 
) ;

DROP TABLE IF EXISTS ElementReferenceFull;
CREATE TABLE ElementReferenceFull (
	index  SERIAL PRIMARY KEY,
	_Id integer  -- index into table QIFReferenceType 
) ;

DROP TABLE IF EXISTS ElementReference;
CREATE TABLE ElementReference (
	index  SERIAL PRIMARY KEY,
	Id text NOT NULL  
) ;

DROP TABLE IF EXISTS EllipseActualDetermination;
CREATE TABLE EllipseActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS EllipseBestFit;
CREATE TABLE EllipseBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS EllipseCast;
CREATE TABLE EllipseCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS EllipseCheckedFeature;
CREATE TABLE EllipseCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS EllipseChecked;
CREATE TABLE EllipseChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS EllipseConstructionMethod;
CREATE TABLE EllipseConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Intersection integer, -- index into table PointFeatureIntersectionType 
	_Projection integer, -- index into table ArcProjectionType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_Transform integer, -- index into table ConicalSegmentTransformType 
	_FromScan integer  -- index into table CylinderFromScanType 
) ;

DROP TABLE IF EXISTS EllipseCopy;
CREATE TABLE EllipseCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseEllipse integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS EllipseFeatureActual;
CREATE TABLE EllipseFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Axis integer, -- index into table AxisType 
	_Normal integer, -- index into table UnitVectorSimpleType 
	_MajorDiameter integer, -- index into table ActualLinearValueType 
	_MinorDiameter integer, -- index into table ActualLinearValueType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS EllipseFeatureDefinition;
CREATE TABLE EllipseFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	InternalExternal InternalExternalEnumType NOT NULL, 
	_MajorDiameter integer, -- index into table ActualLinearValueType 
	_MinorDiameter integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS EllipseFeatureItem;
CREATE TABLE EllipseFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS EllipseFeatureNominal;
CREATE TABLE EllipseFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_ActualZoneAxisType integer, -- index into table ActualZoneAxisType 
	_Axis integer, -- index into table AxisType 
	Normal text NOT NULL  
) ;

DROP TABLE IF EXISTS EllipseFromScan;
CREATE TABLE EllipseFromScan (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_SurfaceFeature integer, -- index into table BaseFeatureType 
	_SearchRadius integer, -- index into table LinearValueType 
	_Depth integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS EllipseIntersection;
CREATE TABLE EllipseIntersection (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_IntersectionFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS EllipsePointSamplingStrategy;
CREATE TABLE EllipsePointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum ClosedCurvePointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS EllipseProjection;
CREATE TABLE EllipseProjection (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_ProjectionFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_ProjectionPlane integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS EllipseRecomp;
CREATE TABLE EllipseRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS EllipseTransform;
CREATE TABLE EllipseTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseEllipse integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS ElongatedCylinderActualDetermination;
CREATE TABLE ElongatedCylinderActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS ElongatedCylinderBestFit;
CREATE TABLE ElongatedCylinderBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ElongatedCylinderCast;
CREATE TABLE ElongatedCylinderCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ElongatedCylinderCheckedFeature;
CREATE TABLE ElongatedCylinderCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS ElongatedCylinderChecked;
CREATE TABLE ElongatedCylinderChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS ElongatedCylinderConstructionMethod;
CREATE TABLE ElongatedCylinderConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS ElongatedCylinderCopy;
CREATE TABLE ElongatedCylinderCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseElongatedCylinder integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ElongatedCylinderFeatureActual;
CREATE TABLE ElongatedCylinderFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Diameter integer, -- index into table LinearValueType 
	_DiameterMin integer, -- index into table ActualLinearValueType 
	_DiameterMax integer, -- index into table ActualLinearValueType 
	_CenterPlane integer, -- index into table ActualPlaneType 
	_Length integer, -- index into table LinearValueType 
	_LengthMax integer, -- index into table ActualLinearValueType 
	_LengthMin integer, -- index into table ActualLinearValueType 
	_Width integer, -- index into table LinearValueType 
	_WidthMax integer, -- index into table ActualLinearValueType 
	_WidthMin integer, -- index into table ActualLinearValueType 
	_Depth integer, -- index into table LinearValueType 
	_DepthMax integer, -- index into table ActualLinearValueType 
	_DepthMin integer, -- index into table ActualLinearValueType 
	_DepthVector integer, -- index into table ActualUnitVectorType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS ElongatedCylinderFeatureDefinition;
CREATE TABLE ElongatedCylinderFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	InternalExternal InternalExternalEnumType NOT NULL, 
	_Diameter integer, -- index into table LinearValueType 
	_Length integer, -- index into table LinearValueType 
	_Width integer, -- index into table LinearValueType 
	_Depth integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS ElongatedCylinderFeatureItem;
CREATE TABLE ElongatedCylinderFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS ElongatedCylinderFeatureNominal;
CREATE TABLE ElongatedCylinderFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_CenterPlane integer, -- index into table ActualPlaneType 
	_PlaneXType integer, -- index into table PlaneXType 
	DepthVector text NOT NULL  
) ;

DROP TABLE IF EXISTS ElongatedCylinderPointSamplingStrategy;
CREATE TABLE ElongatedCylinderPointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum ElongatedCylinderPointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS ElongatedCylinderRecomp;
CREATE TABLE ElongatedCylinderRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS ElongatedCylinderTransform;
CREATE TABLE ElongatedCylinderTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseElongatedCylinder integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS ElseRule;
CREATE TABLE ElseRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_ThenPoints integer  -- index into table ThenPointsType 
) ;

DROP TABLE IF EXISTS Employee;
CREATE TABLE Employee (
	index  SERIAL PRIMARY KEY,
	Name text NOT NULL, 
	EmployeeId text, 
	Shift text  
) ;

DROP TABLE IF EXISTS EndRadius;
CREATE TABLE EndRadius (
	index  SERIAL PRIMARY KEY,
	_EndRadius integer, -- index into table LinearValueType 
	Expanded BOOLEAN  
) ;

DROP TABLE IF EXISTS EntitiesExternal;
CREATE TABLE EntitiesExternal (
	index  SERIAL PRIMARY KEY,
	__Entity integer[]  -- index into table EntityExternalType 
) ;

DROP TABLE IF EXISTS EntityExternal;
CREATE TABLE EntityExternal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	EntityId text NOT NULL, 
	Name text, 
	Description text  
) ;

DROP TABLE IF EXISTS Environment;
CREATE TABLE Environment (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ObjectTemperature integer, -- index into table ActualTemperatureValueType 
	_AmbientTemperature integer, -- index into table ActualTemperatureValueType 
	RelativeHumidity text, 
	DateAndTime TIMESTAMP NOT NULL, 
	_TimeDescription integer  -- index into table TimeDescriptionType 
) ;

DROP TABLE IF EXISTS Environments;
CREATE TABLE Environments (
	index  SERIAL PRIMARY KEY,
	__Environment integer[]  -- index into table EnvironmentType 
) ;

DROP TABLE IF EXISTS Errors;
CREATE TABLE Errors (
	index  SERIAL PRIMARY KEY,
	Error text NOT NULL  
) ;

DROP TABLE IF EXISTS EstablishDatumMeasurand;
CREATE TABLE EstablishDatumMeasurand (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_DatumDefinitionId integer, -- index into table QIFReferenceFullType 
	_DatumReferenceFrameId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS EvaluateCharacteristicMeasurand;
CREATE TABLE EvaluateCharacteristicMeasurand (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_CharacteristicItemId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS EvaluateSpecifiedCharacteristicsAction;
CREATE TABLE EvaluateSpecifiedCharacteristicsAction (
	index  SERIAL PRIMARY KEY,
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_PreferredActionMethodId integer, -- index into table QIFReferenceFullType 
	_AlternativeActionMethodIds integer, -- index into table ArrayReferenceFullType 
	_PreferredResourceIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_PreferredActionMethodId integer, -- index into table QIFReferenceFullType 
	_AlternativeActionMethodIds integer, -- index into table ArrayReferenceFullType 
	_PreferredResourceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicItemIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS ExclusionReason;
CREATE TABLE ExclusionReason (
	index  SERIAL PRIMARY KEY,
	ExclusionReasonEnum ExclusionEnumType NOT NULL, 
	OtherExclusionReason text NOT NULL  
) ;

DROP TABLE IF EXISTS Exclusion;
CREATE TABLE Exclusion (
	index  SERIAL PRIMARY KEY,
	_Id integer, -- index into table QIFReferenceType 
	_Reason integer  -- index into table ExclusionReasonType 
) ;

DROP TABLE IF EXISTS Extent;
CREATE TABLE Extent (
	index  SERIAL PRIMARY KEY,
	ExtentEnum ExtentEnumType NOT NULL, 
	OtherExtent text NOT NULL  
) ;

DROP TABLE IF EXISTS ExternalFileReference;
CREATE TABLE ExternalFileReference (
	index  SERIAL PRIMARY KEY,
	URI text NOT NULL, 
	_FileSpec integer, -- index into table FileSpecType 
	Description text NOT NULL  
) ;

DROP TABLE IF EXISTS Extrude23Core;
CREATE TABLE Extrude23Core (
	index  SERIAL PRIMARY KEY,
	form text NOT NULL,-- attribute
	form text NOT NULL,-- attribute
	TerminationPoint FLOAT[3] NOT NULL, 
	_Curve integer  -- index into table Curve13CoreType 
) ;

DROP TABLE IF EXISTS Extrude23;
CREATE TABLE Extrude23 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Extrude23Core integer, -- index into table Extrude23CoreType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS ExtrudedCrossSectionActualDetermination;
CREATE TABLE ExtrudedCrossSectionActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS ExtrudedCrossSectionBestFit;
CREATE TABLE ExtrudedCrossSectionBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ExtrudedCrossSectionCast;
CREATE TABLE ExtrudedCrossSectionCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ExtrudedCrossSectionCheckedFeature;
CREATE TABLE ExtrudedCrossSectionCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS ExtrudedCrossSectionChecked;
CREATE TABLE ExtrudedCrossSectionChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS ExtrudedCrossSectionConstructionMethod;
CREATE TABLE ExtrudedCrossSectionConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS ExtrudedCrossSectionCopy;
CREATE TABLE ExtrudedCrossSectionCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseExtrudedCrossSection integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ExtrudedCrossSectionFeatureActual;
CREATE TABLE ExtrudedCrossSectionFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Direction integer, -- index into table UnitVectorType 
	_Length integer, -- index into table LinearValueType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS ExtrudedCrossSectionFeatureDefinition;
CREATE TABLE ExtrudedCrossSectionFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	InternalExternal InternalExternalEnumType NOT NULL, 
	_Length integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS ExtrudedCrossSectionFeatureItem;
CREATE TABLE ExtrudedCrossSectionFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS ExtrudedCrossSectionFeatureNominal;
CREATE TABLE ExtrudedCrossSectionFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Direction text NOT NULL, 
	_CrossSectionReferenceFeatureId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS ExtrudedCrossSectionPointSamplingStrategy;
CREATE TABLE ExtrudedCrossSectionPointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum ExtrudedCrossSectionPointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS ExtrudedCrossSectionRecomp;
CREATE TABLE ExtrudedCrossSectionRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS ExtrudedCrossSectionTransform;
CREATE TABLE ExtrudedCrossSectionTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseExtrudedCrossSection integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS FPSTest;
CREATE TABLE FPSTest (
	index  SERIAL PRIMARY KEY,
	_XLinearity integer, -- index into table LengthFunctionDiscreteType 
	_YLinearity integer, -- index into table LengthFunctionDiscreteType 
	_ZLinearity integer, -- index into table LengthFunctionDiscreteType 
	_XAxisRoll integer, -- index into table AngleFunctionDiscreteType 
	_XAxisPitch integer, -- index into table AngleFunctionDiscreteType 
	_XAxisYaw integer, -- index into table AngleFunctionDiscreteType 
	_YAxisRoll integer, -- index into table AngleFunctionDiscreteType 
	_YAxisPitch integer, -- index into table AngleFunctionDiscreteType 
	_YAxisYaw integer, -- index into table AngleFunctionDiscreteType 
	_ZAxisRoll integer, -- index into table AngleFunctionDiscreteType 
	_ZAxisPitch integer, -- index into table AngleFunctionDiscreteType 
	_ZAxisYaw integer, -- index into table AngleFunctionDiscreteType 
	_XAxisStraightnessY integer, -- index into table LengthFunctionDiscreteType 
	_XAxisStraightnessZ integer, -- index into table LengthFunctionDiscreteType 
	_YAxisStraightnessX integer, -- index into table LengthFunctionDiscreteType 
	_YAxisStraightnessZ integer, -- index into table LengthFunctionDiscreteType 
	_ZAxisStraightnessX integer, -- index into table LengthFunctionDiscreteType 
	_ZAxisStraightnessY integer, -- index into table LengthFunctionDiscreteType 
	XYSquareness DOUBLE PRECISION NOT NULL, 
	XZSquareness DOUBLE PRECISION NOT NULL, 
	YZSquareness DOUBLE PRECISION NOT NULL  
) ;

DROP TABLE IF EXISTS FaceMesh;
CREATE TABLE FaceMesh (
	index  SERIAL PRIMARY KEY,
	turned text NOT NULL,-- attribute
	area text NOT NULL,-- attribute
	volume text NOT NULL,-- attribute
	massCenter text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	turned text NOT NULL,-- attribute
	area text NOT NULL,-- attribute
	volume text NOT NULL,-- attribute
	massCenter text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_InertiaMatrix integer, -- index into table Matrix33Type 
	_Attributes integer, -- index into table AttributesType 
	_InertiaMatrix integer, -- index into table Matrix33Type 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Mesh integer, -- index into table ElementReferenceType 
	_LoopIds integer, -- index into table ArrayReferenceType 
	_Triangles integer, -- index into table ArrayI3Type 
	_TrianglesBinary integer, -- index into table ArrayBinaryType 
	_TrianglesVisible integer, -- index into table ArrayIntType 
	_TrianglesVisibleBinary integer, -- index into table ArrayBinaryType 
	_TrianglesHidden integer, -- index into table ArrayIntType 
	_TrianglesHiddenBinary integer, -- index into table ArrayBinaryType 
	_TrianglesColor integer, -- index into table ArrayUnsignedByteType 
	_TrianglesColorBinary integer  -- index into table ArrayBinaryType 
) ;

DROP TABLE IF EXISTS FaceSet;
CREATE TABLE FaceSet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__FaceMeshType integer[], -- index into table FaceMeshType 
	__FaceType integer[]  -- index into table FaceType 
) ;

DROP TABLE IF EXISTS Face;
CREATE TABLE Face (
	index  SERIAL PRIMARY KEY,
	hasOuter text NOT NULL,-- attribute
	turned text NOT NULL,-- attribute
	area text NOT NULL,-- attribute
	volume text NOT NULL,-- attribute
	massCenter text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	turned text NOT NULL,-- attribute
	area text NOT NULL,-- attribute
	volume text NOT NULL,-- attribute
	massCenter text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_InertiaMatrix integer, -- index into table Matrix33Type 
	_Attributes integer, -- index into table AttributesType 
	_InertiaMatrix integer, -- index into table Matrix33Type 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Surface integer, -- index into table SurfaceBaseType 
	_LoopIds integer  -- index into table ArrayReferenceType 
) ;

DROP TABLE IF EXISTS FeatureActuals;
CREATE TABLE FeatureActuals (
	index  SERIAL PRIMARY KEY,
	__ArcFeatureActualType integer[], -- index into table ArcFeatureActualType 
	__CircleFeatureActualType integer[], -- index into table CircleFeatureActualType 
	__CompoundFeatureActualType integer[], -- index into table CompoundFeatureActualType 
	__ConeFeatureActualType integer[], -- index into table ConeFeatureActualType 
	__ConicalSegmentFeatureActualType integer[], -- index into table ConicalSegmentFeatureActualType 
	__CuboidFeatureActualType integer[], -- index into table CuboidFeatureActualType 
	__CylinderFeatureActualType integer[], -- index into table CylinderFeatureActualType 
	__CylindricalSegmentFeatureActualType integer[], -- index into table CylindricalSegmentFeatureActualType 
	__EdgePointFeatureActualType integer[], -- index into table EdgePointFeatureActualType 
	__EllipseFeatureActualType integer[], -- index into table EllipseFeatureActualType 
	__ElongatedCylinderFeatureActualType integer[], -- index into table ElongatedCylinderFeatureActualType 
	__ExtrudedCrossSectionFeatureActualType integer[], -- index into table ExtrudedCrossSectionFeatureActualType 
	__GenericFeatureActualType integer[], -- index into table GenericFeatureActualType 
	__LineFeatureActualType integer[], -- index into table LineFeatureActualType 
	__OppositeLinesFeatureActualType integer[], -- index into table OppositeLinesFeatureActualType 
	__OppositePlanesFeatureActualType integer[], -- index into table OppositePlanesFeatureActualType 
	__PatternFeatureActualType integer[], -- index into table PatternFeatureActualType 
	__PlaneFeatureActualType integer[], -- index into table PlaneFeatureActualType 
	__PointDefinedCurveFeatureActualType integer[], -- index into table PointDefinedCurveFeatureActualType 
	__PointDefinedSurfaceFeatureActualType integer[], -- index into table PointDefinedSurfaceFeatureActualType 
	__PointFeatureActualType integer[], -- index into table PointFeatureActualType 
	__ProfileGroupFeatureActualType integer[], -- index into table ProfileGroupFeatureActualType 
	__RunoutGroupFeatureActualType integer[], -- index into table RunoutGroupFeatureActualType 
	__SphereFeatureActualType integer[], -- index into table SphereFeatureActualType 
	__SphericalSegmentFeatureActualType integer[], -- index into table SphericalSegmentFeatureActualType 
	__SurfaceOfRevolutionFeatureActualType integer[], -- index into table SurfaceOfRevolutionFeatureActualType 
	__ThreadedFeatureActualType integer[], -- index into table ThreadedFeatureActualType 
	__ToroidalSegmentFeatureActualType integer[], -- index into table ToroidalSegmentFeatureActualType 
	__TorusFeatureActualType integer[]  -- index into table TorusFeatureActualType 
) ;

DROP TABLE IF EXISTS FeatureArea;
CREATE TABLE FeatureArea (
	index  SERIAL PRIMARY KEY 
) ;

DROP TABLE IF EXISTS FeatureAspectsLists;
CREATE TABLE FeatureAspectsLists (
	index  SERIAL PRIMARY KEY,
	_FeatureDefinitions integer, -- index into table FeatureDefinitionsType 
	_FeatureNominals integer, -- index into table FeatureNominalsType 
	_FeatureItems integer  -- index into table FeatureItemsType 
) ;

DROP TABLE IF EXISTS FeatureDefinitions;
CREATE TABLE FeatureDefinitions (
	index  SERIAL PRIMARY KEY,
	__ArcFeatureDefinitionType integer[], -- index into table ArcFeatureDefinitionType 
	__CircleFeatureDefinitionType integer[], -- index into table CircleFeatureDefinitionType 
	__CompoundFeatureDefinitionType integer[], -- index into table CompoundFeatureDefinitionType 
	__ConeFeatureDefinitionType integer[], -- index into table ConeFeatureDefinitionType 
	__ConicalSegmentFeatureDefinitionType integer[], -- index into table ConicalSegmentFeatureDefinitionType 
	__CuboidFeatureDefinitionType integer[], -- index into table CuboidFeatureDefinitionType 
	__CylinderFeatureDefinitionType integer[], -- index into table CylinderFeatureDefinitionType 
	__CylindricalSegmentFeatureDefinitionType integer[], -- index into table CylindricalSegmentFeatureDefinitionType 
	__EdgePointFeatureDefinitionType integer[], -- index into table EdgePointFeatureDefinitionType 
	__EllipseFeatureDefinitionType integer[], -- index into table EllipseFeatureDefinitionType 
	__ElongatedCylinderFeatureDefinitionType integer[], -- index into table ElongatedCylinderFeatureDefinitionType 
	__ExtrudedCrossSectionFeatureDefinitionType integer[], -- index into table ExtrudedCrossSectionFeatureDefinitionType 
	__GenericFeatureDefinitionType integer[], -- index into table GenericFeatureDefinitionType 
	__LineFeatureDefinitionType integer[], -- index into table LineFeatureDefinitionType 
	__OppositeLinesFeatureDefinitionType integer[], -- index into table OppositeLinesFeatureDefinitionType 
	__OppositePlanesFeatureDefinitionType integer[], -- index into table OppositePlanesFeatureDefinitionType 
	__PatternFeatureDefinitionType integer[], -- index into table PatternFeatureDefinitionType 
	__PlaneFeatureDefinitionType integer[], -- index into table PlaneFeatureDefinitionType 
	__PointDefinedCurveFeatureDefinitionType integer[], -- index into table PointDefinedCurveFeatureDefinitionType 
	__PointDefinedSurfaceFeatureDefinitionType integer[], -- index into table PointDefinedSurfaceFeatureDefinitionType 
	__PointFeatureDefinitionType integer[], -- index into table PointFeatureDefinitionType 
	__ProfileGroupFeatureDefinitionType integer[], -- index into table ProfileGroupFeatureDefinitionType 
	__RunoutGroupFeatureDefinitionType integer[], -- index into table RunoutGroupFeatureDefinitionType 
	__SphereFeatureDefinitionType integer[], -- index into table SphereFeatureDefinitionType 
	__SphericalSegmentFeatureDefinitionType integer[], -- index into table SphericalSegmentFeatureDefinitionType 
	__SurfaceOfRevolutionFeatureDefinitionType integer[], -- index into table SurfaceOfRevolutionFeatureDefinitionType 
	__ThreadedFeatureDefinitionType integer[], -- index into table ThreadedFeatureDefinitionType 
	__ToroidalSegmentFeatureDefinitionType integer[], -- index into table ToroidalSegmentFeatureDefinitionType 
	__TorusFeatureDefinitionType integer[]  -- index into table TorusFeatureDefinitionType 
) ;

DROP TABLE IF EXISTS FeatureIsDatum;
CREATE TABLE FeatureIsDatum (
	index  SERIAL PRIMARY KEY 
) ;

DROP TABLE IF EXISTS FeatureIsInternal;
CREATE TABLE FeatureIsInternal (
	index  SERIAL PRIMARY KEY 
) ;

DROP TABLE IF EXISTS FeatureItems;
CREATE TABLE FeatureItems (
	index  SERIAL PRIMARY KEY,
	__ArcFeatureItemType integer[], -- index into table ArcFeatureItemType 
	__CircleFeatureItemType integer[], -- index into table CircleFeatureItemType 
	__CompoundFeatureItemType integer[], -- index into table CompoundFeatureItemType 
	__ConeFeatureItemType integer[], -- index into table ConeFeatureItemType 
	__ConicalSegmentFeatureItemType integer[], -- index into table ConicalSegmentFeatureItemType 
	__CuboidFeatureItemType integer[], -- index into table CuboidFeatureItemType 
	__CylinderFeatureItemType integer[], -- index into table CylinderFeatureItemType 
	__CylindricalSegmentFeatureItemType integer[], -- index into table CylindricalSegmentFeatureItemType 
	__EdgePointFeatureItemType integer[], -- index into table EdgePointFeatureItemType 
	__EllipseFeatureItemType integer[], -- index into table EllipseFeatureItemType 
	__ElongatedCylinderFeatureItemType integer[], -- index into table ElongatedCylinderFeatureItemType 
	__ExtrudedCrossSectionFeatureItemType integer[], -- index into table ExtrudedCrossSectionFeatureItemType 
	__GenericFeatureItemType integer[], -- index into table GenericFeatureItemType 
	__LineFeatureItemType integer[], -- index into table LineFeatureItemType 
	__OppositeLinesFeatureItemType integer[], -- index into table OppositeLinesFeatureItemType 
	__OppositePlanesFeatureItemType integer[], -- index into table OppositePlanesFeatureItemType 
	__PatternFeatureItemType integer[], -- index into table PatternFeatureItemType 
	__PlaneFeatureItemType integer[], -- index into table PlaneFeatureItemType 
	__PointDefinedCurveFeatureItemType integer[], -- index into table PointDefinedCurveFeatureItemType 
	__PointDefinedSurfaceFeatureItemType integer[], -- index into table PointDefinedSurfaceFeatureItemType 
	__PointFeatureItemType integer[], -- index into table PointFeatureItemType 
	__ProfileGroupFeatureItemType integer[], -- index into table ProfileGroupFeatureItemType 
	__RunoutGroupFeatureItemType integer[], -- index into table RunoutGroupFeatureItemType 
	__SphereFeatureItemType integer[], -- index into table SphereFeatureItemType 
	__SphericalSegmentFeatureItemType integer[], -- index into table SphericalSegmentFeatureItemType 
	__SurfaceOfRevolutionFeatureItemType integer[], -- index into table SurfaceOfRevolutionFeatureItemType 
	__ThreadedFeatureItemType integer[], -- index into table ThreadedFeatureItemType 
	__ToroidalSegmentFeatureItemType integer[], -- index into table ToroidalSegmentFeatureItemType 
	__TorusFeatureItemType integer[]  -- index into table TorusFeatureItemType 
) ;

DROP TABLE IF EXISTS FeatureLength;
CREATE TABLE FeatureLength (
	index  SERIAL PRIMARY KEY 
) ;

DROP TABLE IF EXISTS FeatureNominals;
CREATE TABLE FeatureNominals (
	index  SERIAL PRIMARY KEY,
	__ArcFeatureNominalType integer[], -- index into table ArcFeatureNominalType 
	__CircleFeatureNominalType integer[], -- index into table CircleFeatureNominalType 
	__CompoundFeatureNominalType integer[], -- index into table CompoundFeatureNominalType 
	__ConeFeatureNominalType integer[], -- index into table ConeFeatureNominalType 
	__ConicalSegmentFeatureNominalType integer[], -- index into table ConicalSegmentFeatureNominalType 
	__CuboidFeatureNominalType integer[], -- index into table CuboidFeatureNominalType 
	__CylinderFeatureNominalType integer[], -- index into table CylinderFeatureNominalType 
	__CylindricalSegmentFeatureNominalType integer[], -- index into table CylindricalSegmentFeatureNominalType 
	__EdgePointFeatureNominalType integer[], -- index into table EdgePointFeatureNominalType 
	__EllipseFeatureNominalType integer[], -- index into table EllipseFeatureNominalType 
	__ElongatedCylinderFeatureNominalType integer[], -- index into table ElongatedCylinderFeatureNominalType 
	__ExtrudedCrossSectionFeatureNominalType integer[], -- index into table ExtrudedCrossSectionFeatureNominalType 
	__GenericFeatureNominalType integer[], -- index into table GenericFeatureNominalType 
	__LineFeatureNominalType integer[], -- index into table LineFeatureNominalType 
	__OppositeLinesFeatureNominalType integer[], -- index into table OppositeLinesFeatureNominalType 
	__OppositePlanesFeatureNominalType integer[], -- index into table OppositePlanesFeatureNominalType 
	__PatternFeatureNominalType integer[], -- index into table PatternFeatureNominalType 
	__PlaneFeatureNominalType integer[], -- index into table PlaneFeatureNominalType 
	__PointDefinedCurveFeatureNominalType integer[], -- index into table PointDefinedCurveFeatureNominalType 
	__PointDefinedSurfaceFeatureNominalType integer[], -- index into table PointDefinedSurfaceFeatureNominalType 
	__PointFeatureNominalType integer[], -- index into table PointFeatureNominalType 
	__ProfileGroupFeatureNominalType integer[], -- index into table ProfileGroupFeatureNominalType 
	__RunoutGroupFeatureNominalType integer[], -- index into table RunoutGroupFeatureNominalType 
	__SphereFeatureNominalType integer[], -- index into table SphereFeatureNominalType 
	__SphericalSegmentFeatureNominalType integer[], -- index into table SphericalSegmentFeatureNominalType 
	__SurfaceOfRevolutionFeatureNominalType integer[], -- index into table SurfaceOfRevolutionFeatureNominalType 
	__ThreadedFeatureNominalType integer[], -- index into table ThreadedFeatureNominalType 
	__ToroidalSegmentFeatureNominalType integer[], -- index into table ToroidalSegmentFeatureNominalType 
	__TorusFeatureNominalType integer[]  -- index into table TorusFeatureNominalType 
) ;

DROP TABLE IF EXISTS FeatureOfSizeSubstituteFeatureAlgorithm;
CREATE TABLE FeatureOfSizeSubstituteFeatureAlgorithm (
	index  SERIAL PRIMARY KEY,
	FeatureOfSizeSubstituteFeatureAlgorithmEnum FeatureOfSizeSubstituteFeatureAlgorithmEnumType NOT NULL, 
	OtherFeatureOfSizeSubstituteFeatureAlgorithm text NOT NULL  
) ;

DROP TABLE IF EXISTS FeatureRules;
CREATE TABLE FeatureRules (
	index  SERIAL PRIMARY KEY,
	SamplingRigorMax integer NOT NULL, 
	_IfThenElseFeatureRules integer, -- index into table IfThenElseFeatureRulesType 
	_MaxFeatureRules integer  -- index into table MaxFeatureRulesType 
) ;

DROP TABLE IF EXISTS FileInternal;
CREATE TABLE FileInternal (
	index  SERIAL PRIMARY KEY,
	Name text NOT NULL, 
	_Version integer  -- index into table string 
) ;

DROP TABLE IF EXISTS FileSpec;
CREATE TABLE FileSpec (
	index  SERIAL PRIMARY KEY,
	CommonFileSpecEnum CommonFileSpecEnumType NOT NULL, 
	OtherFileSpec text NOT NULL  
) ;

DROP TABLE IF EXISTS File;
CREATE TABLE File (
	index  SERIAL PRIMARY KEY,
	Name text NOT NULL, 
	Version text, 
	_Format integer  -- index into table DigitalModelFormatType 
) ;

DROP TABLE IF EXISTS FileUnits;
CREATE TABLE FileUnits (
	index  SERIAL PRIMARY KEY,
	_PrimaryUnits integer, -- index into table PrimaryUnitsType 
	_OtherUnits integer, -- index into table OtherUnitsType 
	_UserDefinedUnits integer  -- index into table UserDefinedUnitsType 
) ;

DROP TABLE IF EXISTS FirstArticleStudyPlan;
CREATE TABLE FirstArticleStudyPlan (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	InSpecRatio DECIMAL(10,2) NOT NULL, 
	_LinearAbsoluteMaximum integer, -- index into table LinearValueType 
	_AngularAbsoluteMaximum integer, -- index into table AngularValueType 
	_AreaAbsoluteMaximum integer, -- index into table AreaValueType 
	_ForceAbsoluteMaximum integer, -- index into table ForceValueType 
	_MassAbsoluteMaximum integer, -- index into table MassValueType 
	_PressureAbsoluteMaximum integer, -- index into table PressureValueType 
	_SpeedAbsoluteMaximum integer, -- index into table SpeedValueType 
	_TemperatureAbsoluteMaximum integer, -- index into table TemperatureValueType 
	_TimeAbsoluteMaximum integer, -- index into table TimeValueType 
	__UserDefinedUnitAbsoluteMaximum integer[], -- index into table UserDefinedUnitValueType 
	RelativeMaximum DECIMAL(10,2) NOT NULL  
) ;

DROP TABLE IF EXISTS FirstArticleStudyResults;
CREATE TABLE FirstArticleStudyResults (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	InSpecRatio DECIMAL(10,2), 
	_LinearAbsoluteMaximum integer, -- index into table LinearValueType 
	_AngularAbsoluteMaximum integer, -- index into table AngularValueType 
	_AreaAbsoluteMaximum integer, -- index into table AreaValueType 
	_ForceAbsoluteMaximum integer, -- index into table ForceValueType 
	_MassAbsoluteMaximum integer, -- index into table MassValueType 
	_PressureAbsoluteMaximum integer, -- index into table PressureValueType 
	_SpeedAbsoluteMaximum integer, -- index into table SpeedValueType 
	_TemperatureAbsoluteMaximum integer, -- index into table TemperatureValueType 
	_TimeAbsoluteMaximum integer, -- index into table TimeValueType 
	__UserDefinedUnitAbsoluteMaximum integer[], -- index into table UserDefinedUnitValueType 
	RelativeMaximum text  
) ;

DROP TABLE IF EXISTS Fixture;
CREATE TABLE Fixture (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer  -- index into table LocationType 
) ;

DROP TABLE IF EXISTS Fixtures;
CREATE TABLE Fixtures (
	index  SERIAL PRIMARY KEY,
	__Fixture integer[]  -- index into table FixtureType 
) ;

DROP TABLE IF EXISTS FlatnessCharacteristicActual;
CREATE TABLE FlatnessCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_MaxFlatness integer, -- index into table ActualLinearValueType 
	_ZonePlane integer  -- index into table ActualPlaneType 
) ;

DROP TABLE IF EXISTS FlatnessCharacteristicDefinition;
CREATE TABLE FlatnessCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_ToleranceZonePerUnitArea integer, -- index into table ToleranceZonePerUnitAreaType 
	_ToleranceZonePerUnitArea integer, -- index into table ToleranceZonePerUnitAreaType 
	NotConvex BOOLEAN  
) ;

DROP TABLE IF EXISTS FlatnessCharacteristicItem;
CREATE TABLE FlatnessCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS FlatnessCharacteristicNominal;
CREATE TABLE FlatnessCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_CircularZoneLimit integer, -- index into table CharacteristicCircularZoneLimitType 
	_DirectionalZoneLimit integer, -- index into table CharacteristicDirectionalZoneLimitType 
	_RectangularZoneLimit integer  -- index into table CharacteristicRectangularZoneLimitType 
) ;

DROP TABLE IF EXISTS FlatnessCharacteristicStatsEval;
CREATE TABLE FlatnessCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_MaxFlatnessStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS Font;
CREATE TABLE Font (
	index  SERIAL PRIMARY KEY,
	index text,-- attribute
	bold text NOT NULL,-- attribute
	italic text NOT NULL,-- attribute
	underline text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Name text NOT NULL, 
	Size integer NOT NULL  
) ;

DROP TABLE IF EXISTS Fonts;
CREATE TABLE Fonts (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__Font integer[]  -- index into table FontType 
) ;

DROP TABLE IF EXISTS ForceTolerance;
CREATE TABLE ForceTolerance (
	index  SERIAL PRIMARY KEY,
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	DefinedAsLimit BOOLEAN NOT NULL  
) ;

DROP TABLE IF EXISTS ForceUnit;
CREATE TABLE ForceUnit (
	index  SERIAL PRIMARY KEY,
	SIUnitName text, 
	UnitName text NOT NULL, 
	_UnitConversion integer  -- index into table UnitConversionType 
) ;

DROP TABLE IF EXISTS ForceValue;
CREATE TABLE ForceValue (
	index  SERIAL PRIMARY KEY,
	forceUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS FormalStandard;
CREATE TABLE FormalStandard (
	index  SERIAL PRIMARY KEY,
	FormalStandardEnum FormalStandardEnumType NOT NULL, 
	OtherFormalStandard text NOT NULL  
) ;

DROP TABLE IF EXISTS FrameCircular;
CREATE TABLE FrameCircular (
	index  SERIAL PRIMARY KEY,
	crossed text NOT NULL,-- attribute
	XY FLOAT[2] NOT NULL, 
	XY FLOAT[2] NOT NULL, 
	Radius DOUBLE PRECISION NOT NULL  
) ;

DROP TABLE IF EXISTS FrameFlag;
CREATE TABLE FrameFlag (
	index  SERIAL PRIMARY KEY,
	right text NOT NULL,-- attribute
	XY FLOAT[2] NOT NULL, 
	XY FLOAT[2] NOT NULL, 
	Width DOUBLE PRECISION NOT NULL, 
	Height DOUBLE PRECISION NOT NULL, 
	XY FLOAT[2] NOT NULL, 
	Width DOUBLE PRECISION NOT NULL, 
	Height DOUBLE PRECISION NOT NULL  
) ;

DROP TABLE IF EXISTS FrameIrregularForm;
CREATE TABLE FrameIrregularForm (
	index  SERIAL PRIMARY KEY,
	XY FLOAT[2] NOT NULL, 
	XY FLOAT[2] NOT NULL, 
	_Points integer  -- index into table ArrayPoint2dType 
) ;

DROP TABLE IF EXISTS FrameRectangular;
CREATE TABLE FrameRectangular (
	index  SERIAL PRIMARY KEY,
	XY FLOAT[2] NOT NULL, 
	XY FLOAT[2] NOT NULL, 
	Width DOUBLE PRECISION NOT NULL, 
	Height DOUBLE PRECISION NOT NULL  
) ;

DROP TABLE IF EXISTS Frames;
CREATE TABLE Frames (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__FrameCircularType integer[], -- index into table FrameCircularType 
	__FrameFlagType integer[], -- index into table FrameFlagType 
	__FrameIrregularFormType integer[], -- index into table FrameIrregularFormType 
	__FrameRectangularType integer[]  -- index into table FrameRectangularType 
) ;

DROP TABLE IF EXISTS FunctionDiscrete;
CREATE TABLE FunctionDiscrete (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	DomainValues FLOAT[] NOT NULL, 
	RangeValues FLOAT[] NOT NULL  
) ;

DROP TABLE IF EXISTS GageDevice;
CREATE TABLE GageDevice (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Calibrations integer, -- index into table CalibrationsType 
	_InspectionTemperatures integer, -- index into table TemperaturesType 
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Calibrations integer, -- index into table CalibrationsType 
	_InspectionTemperatures integer  -- index into table TemperaturesType 
) ;

DROP TABLE IF EXISTS GageMeasureFeatureMethod;
CREATE TABLE GageMeasureFeatureMethod (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_ChosenResourceIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_ChosenResourceIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_ChosenResourceIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS GageRandRStudyPlan;
CREATE TABLE GageRandRStudyPlan (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	RandRStudyType GageRandRStudyEnumType NOT NULL, 
	NumberOfAppraisers integer NOT NULL, 
	NumberOfParts integer NOT NULL, 
	NumberOfTrials integer NOT NULL, 
	_CriterionAngularType integer, -- index into table CriterionAngularType 
	_CriterionAreaType integer, -- index into table CriterionAreaType 
	_CriterionForceType integer, -- index into table CriterionForceType 
	_CriterionLinearType integer, -- index into table CriterionLinearType 
	_CriterionMassType integer, -- index into table CriterionMassType 
	_CriterionPressureType integer, -- index into table CriterionPressureType 
	_CriterionSpeedType integer, -- index into table CriterionSpeedType 
	_CriterionTemperatureType integer, -- index into table CriterionTemperatureType 
	_CriterionTimeType integer, -- index into table CriterionTimeType 
	_CriterionUserDefinedUnitType integer, -- index into table CriterionUserDefinedUnitType 
	_MaximumRelativeAppraiserVariation integer, -- index into table CriterionDecimalType 
	_MaximumAbsoluteLinearAppraiserVariation integer, -- index into table CriterionLinearType 
	_MaximumAbsoluteAngularAppraiserVariation integer, -- index into table CriterionAngularType 
	_MaximumAbsoluteAreaAppraiserVariation integer, -- index into table CriterionAreaType 
	_MaximumAbsoluteForceAppraiserVariation integer, -- index into table CriterionForceType 
	_MaximumAbsoluteMassAppraiserVariation integer, -- index into table CriterionMassType 
	_MaximumAbsolutePressureAppraiserVariation integer, -- index into table CriterionPressureType 
	_MaximumAbsoluteSpeedAppraiserVariation integer, -- index into table CriterionSpeedType 
	_MaximumAbsoluteTemperatureAppraiserVariation integer, -- index into table CriterionTemperatureType 
	_MaximumAbsoluteTimeAppraiserVariation integer, -- index into table CriterionTimeType 
	__MaximumAbsoluteUserDefinedUnitAppraiserVariation integer[], -- index into table CriterionUserDefinedUnitType 
	_CriterionAngularType integer, -- index into table CriterionAngularType 
	_CriterionAreaType integer, -- index into table CriterionAreaType 
	_CriterionForceType integer, -- index into table CriterionForceType 
	_CriterionLinearType integer, -- index into table CriterionLinearType 
	_CriterionMassType integer, -- index into table CriterionMassType 
	_CriterionPressureType integer, -- index into table CriterionPressureType 
	_CriterionSpeedType integer, -- index into table CriterionSpeedType 
	_CriterionTemperatureType integer, -- index into table CriterionTemperatureType 
	_CriterionTimeType integer, -- index into table CriterionTimeType 
	_CriterionUserDefinedUnitType integer, -- index into table CriterionUserDefinedUnitType 
	_MaximumRelativeEquipmentVariation integer, -- index into table CriterionDecimalType 
	_MaximumAbsoluteLinearEquipmentVariation integer, -- index into table CriterionLinearType 
	_MaximumAbsoluteAngularEquipmentVariation integer, -- index into table CriterionAngularType 
	_MaximumAbsoluteAreaEquipmentVariation integer, -- index into table CriterionAreaType 
	_MaximumAbsoluteForceEquipmentVariation integer, -- index into table CriterionForceType 
	_MaximumAbsoluteMassEquipmentVariation integer, -- index into table CriterionMassType 
	_MaximumAbsolutePressureEquipmentVariation integer, -- index into table CriterionPressureType 
	_MaximumAbsoluteSpeedEquipmentVariation integer, -- index into table CriterionSpeedType 
	_MaximumAbsoluteTemperatureEquipmentVariation integer, -- index into table CriterionTemperatureType 
	_MaximumAbsoluteTimeEquipmentVariation integer, -- index into table CriterionTimeType 
	__MaximumAbsoluteUserDefinedUnitEquipmentVariation integer[], -- index into table CriterionUserDefinedUnitType 
	_CriterionAngularType integer, -- index into table CriterionAngularType 
	_CriterionAreaType integer, -- index into table CriterionAreaType 
	_CriterionForceType integer, -- index into table CriterionForceType 
	_CriterionLinearType integer, -- index into table CriterionLinearType 
	_CriterionMassType integer, -- index into table CriterionMassType 
	_CriterionPressureType integer, -- index into table CriterionPressureType 
	_CriterionSpeedType integer, -- index into table CriterionSpeedType 
	_CriterionTemperatureType integer, -- index into table CriterionTemperatureType 
	_CriterionTimeType integer, -- index into table CriterionTimeType 
	_CriterionUserDefinedUnitType integer, -- index into table CriterionUserDefinedUnitType 
	_MaximumRelativeTotalRandR integer, -- index into table CriterionDecimalType 
	_MaximumAbsoluteLinearTotalRandR integer, -- index into table CriterionLinearType 
	_MaximumAbsoluteAngularTotalRandR integer, -- index into table CriterionAngularType 
	_MaximumAbsoluteAreaTotalRandR integer, -- index into table CriterionAreaType 
	_MaximumAbsoluteForceTotalRandR integer, -- index into table CriterionForceType 
	_MaximumAbsoluteMassTotalRandR integer, -- index into table CriterionMassType 
	_MaximumAbsolutePressureTotalRandR integer, -- index into table CriterionPressureType 
	_MaximumAbsoluteSpeedTotalRandR integer, -- index into table CriterionSpeedType 
	_MaximumAbsoluteTemperatureTotalRandR integer, -- index into table CriterionTemperatureType 
	_MaximumAbsoluteTimeTotalRandR integer, -- index into table CriterionTimeType 
	__MaximumAbsoluteUserDefinedUnitTotalRandR integer[]  -- index into table CriterionUserDefinedUnitType 
) ;

DROP TABLE IF EXISTS GageRandRStudyResults;
CREATE TABLE GageRandRStudyResults (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	NumberOfAppraisers integer NOT NULL, 
	NumberOfParts integer NOT NULL, 
	NumberOfTrials integer NOT NULL  
) ;

DROP TABLE IF EXISTS GenericFeatureActual;
CREATE TABLE GenericFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS GenericFeatureDefinition;
CREATE TABLE GenericFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer  -- index into table AttributesType 
) ;

DROP TABLE IF EXISTS GenericFeatureItem;
CREATE TABLE GenericFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS GenericFeatureNominal;
CREATE TABLE GenericFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_ActualPointType integer, -- index into table ActualPointType 
	_Location integer, -- index into table LocationType 
	__ReferenceFeatureNominalId integer[]  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS GeometricCharacteristicStatsEval;
CREATE TABLE GeometricCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS GeometrySet;
CREATE TABLE GeometrySet (
	index  SERIAL PRIMARY KEY,
	_PointSet integer, -- index into table PointSetType 
	_Curve12Set integer, -- index into table Curve12SetType 
	_Curve13Set integer, -- index into table Curve13SetType 
	_SurfaceSet integer, -- index into table SurfaceSetType 
	_CurveMeshSet integer, -- index into table CurveMeshSetType 
	_SurfaceMeshSet integer  -- index into table SurfaceMeshSetType 
) ;

DROP TABLE IF EXISTS GreaterOrEqual;
CREATE TABLE GreaterOrEqual (
	index  SERIAL PRIMARY KEY,
	__ArithmeticCharacteristicParameterType integer[], -- index into table ArithmeticCharacteristicParameterType 
	__ArithmeticFeatureParameterType integer[], -- index into table ArithmeticFeatureParameterType 
	__DividedByType integer[], -- index into table DividedByType 
	__MinusType integer[], -- index into table MinusType 
	__NegateType integer[], -- index into table NegateType 
	__PlusType integer[], -- index into table PlusType 
	__TimesType integer[], -- index into table TimesType 
	__ArithmeticCharacteristicParameterType integer[], -- index into table ArithmeticCharacteristicParameterType 
	__ArithmeticFeatureParameterType integer[], -- index into table ArithmeticFeatureParameterType 
	__DividedByType integer[], -- index into table DividedByType 
	__MinusType integer[], -- index into table MinusType 
	__NegateType integer[], -- index into table NegateType 
	__PlusType integer[], -- index into table PlusType 
	__TimesType integer[]  -- index into table TimesType 
) ;

DROP TABLE IF EXISTS GreaterThan;
CREATE TABLE GreaterThan (
	index  SERIAL PRIMARY KEY,
	__ArithmeticCharacteristicParameterType integer[], -- index into table ArithmeticCharacteristicParameterType 
	__ArithmeticFeatureParameterType integer[], -- index into table ArithmeticFeatureParameterType 
	__DividedByType integer[], -- index into table DividedByType 
	__MinusType integer[], -- index into table MinusType 
	__NegateType integer[], -- index into table NegateType 
	__PlusType integer[], -- index into table PlusType 
	__TimesType integer[], -- index into table TimesType 
	__ArithmeticCharacteristicParameterType integer[], -- index into table ArithmeticCharacteristicParameterType 
	__ArithmeticFeatureParameterType integer[], -- index into table ArithmeticFeatureParameterType 
	__DividedByType integer[], -- index into table DividedByType 
	__MinusType integer[], -- index into table MinusType 
	__NegateType integer[], -- index into table NegateType 
	__PlusType integer[], -- index into table PlusType 
	__TimesType integer[]  -- index into table TimesType 
) ;

DROP TABLE IF EXISTS HeightCharacteristicActual;
CREATE TABLE HeightCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS HeightCharacteristicDefinition;
CREATE TABLE HeightCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS HeightCharacteristicItem;
CREATE TABLE HeightCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS HeightCharacteristicNominal;
CREATE TABLE HeightCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS HeightCharacteristicStatsEval;
CREATE TABLE HeightCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS ISO10360Test;
CREATE TABLE ISO10360Test (
	index  SERIAL PRIMARY KEY,
	_MaxErrorConstant integer, -- index into table LinearValueType 
	_LinearError integer, -- index into table LinearErrorType 
	_LesserError integer  -- index into table LesserErrorType 
) ;

DROP TABLE IF EXISTS IfThenArcRule;
CREATE TABLE IfThenArcRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS IfThenCircleRule;
CREATE TABLE IfThenCircleRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS IfThenConeRule;
CREATE TABLE IfThenConeRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS IfThenConicalSegmentRule;
CREATE TABLE IfThenConicalSegmentRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS IfThenCuboidRule;
CREATE TABLE IfThenCuboidRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS IfThenCurveRule;
CREATE TABLE IfThenCurveRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer  -- index into table ThenPointsType 
) ;

DROP TABLE IF EXISTS IfThenCylinderRule;
CREATE TABLE IfThenCylinderRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS IfThenCylindricalSegmentRule;
CREATE TABLE IfThenCylindricalSegmentRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS IfThenEllipseRule;
CREATE TABLE IfThenEllipseRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS IfThenElongatedCylinderRule;
CREATE TABLE IfThenElongatedCylinderRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS IfThenElseFeatureRules;
CREATE TABLE IfThenElseFeatureRules (
	index  SERIAL PRIMARY KEY,
	__IfThenArcRuleType integer[], -- index into table IfThenArcRuleType 
	__IfThenCircleRuleType integer[], -- index into table IfThenCircleRuleType 
	__IfThenConeRuleType integer[], -- index into table IfThenConeRuleType 
	__IfThenConicalSegmentRuleType integer[], -- index into table IfThenConicalSegmentRuleType 
	__IfThenCuboidRuleType integer[], -- index into table IfThenCuboidRuleType 
	__IfThenCurveRuleType integer[], -- index into table IfThenCurveRuleType 
	__IfThenCylinderRuleType integer[], -- index into table IfThenCylinderRuleType 
	__IfThenCylindricalSegmentRuleType integer[], -- index into table IfThenCylindricalSegmentRuleType 
	__IfThenEllipseRuleType integer[], -- index into table IfThenEllipseRuleType 
	__IfThenElongatedCylinderRuleType integer[], -- index into table IfThenElongatedCylinderRuleType 
	__IfThenExtrudedCrossSectionRuleType integer[], -- index into table IfThenExtrudedCrossSectionRuleType 
	__IfThenFeatureRule integer[], -- index into table IfThenFeatureRuleType 
	__IfThenLineRuleType integer[], -- index into table IfThenLineRuleType 
	__IfThenOppositeLinesRuleType integer[], -- index into table IfThenOppositeLinesRuleType 
	__IfThenOppositePlanesRuleType integer[], -- index into table IfThenOppositePlanesRuleType 
	__IfThenPlaneRuleType integer[], -- index into table IfThenPlaneRuleType 
	__IfThenPointDefinedCurveRuleType integer[], -- index into table IfThenPointDefinedCurveRuleType 
	__IfThenPointDefinedSurfaceRuleType integer[], -- index into table IfThenPointDefinedSurfaceRuleType 
	__IfThenPointRuleType integer[], -- index into table IfThenPointRuleType 
	__IfThenSphereRuleType integer[], -- index into table IfThenSphereRuleType 
	__IfThenSphericalSegmentRuleType integer[], -- index into table IfThenSphericalSegmentRuleType 
	__IfThenSurfaceOfRevolutionRuleType integer[], -- index into table IfThenSurfaceOfRevolutionRuleType 
	__IfThenSurfaceRuleType integer[], -- index into table IfThenSurfaceRuleType 
	__IfThenToroidalSegmentRuleType integer[], -- index into table IfThenToroidalSegmentRuleType 
	__IfThenTorusRuleType integer[], -- index into table IfThenTorusRuleType 
	_Else integer  -- index into table ElseRuleType 
) ;

DROP TABLE IF EXISTS IfThenExtrudedCrossSectionRule;
CREATE TABLE IfThenExtrudedCrossSectionRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS IfThenFeatureRule;
CREATE TABLE IfThenFeatureRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer  -- index into table ThenPointsType 
) ;

DROP TABLE IF EXISTS IfThenLineRule;
CREATE TABLE IfThenLineRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS IfThenOppositeLinesRule;
CREATE TABLE IfThenOppositeLinesRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS IfThenOppositePlanesRule;
CREATE TABLE IfThenOppositePlanesRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS IfThenPlaneRule;
CREATE TABLE IfThenPlaneRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS IfThenPointDefinedCurveRule;
CREATE TABLE IfThenPointDefinedCurveRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS IfThenPointDefinedSurfaceRule;
CREATE TABLE IfThenPointDefinedSurfaceRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS IfThenPointRule;
CREATE TABLE IfThenPointRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer  -- index into table SphericalSegmentPointSamplingStrategyType 
) ;

DROP TABLE IF EXISTS IfThenSphereRule;
CREATE TABLE IfThenSphereRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS IfThenSphericalSegmentRule;
CREATE TABLE IfThenSphericalSegmentRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS IfThenSurfaceOfRevolutionRule;
CREATE TABLE IfThenSurfaceOfRevolutionRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS IfThenSurfaceRule;
CREATE TABLE IfThenSurfaceRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer  -- index into table ThenPointsType 
) ;

DROP TABLE IF EXISTS IfThenToroidalSegmentRule;
CREATE TABLE IfThenToroidalSegmentRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS IfThenTorusRule;
CREATE TABLE IfThenTorusRule (
	index  SERIAL PRIMARY KEY,
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	name text NOT NULL,-- attribute
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer, -- index into table OrType 
	_ThenPoints integer, -- index into table ThenPointsType 
	_ThenPointStrategy integer, -- index into table SphericalSegmentPointSamplingStrategyType 
	_ThenFittingAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS ImageInstruction;
CREATE TABLE ImageInstruction (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_ExternalFile integer  -- index into table ExternalFileReferenceType 
) ;

DROP TABLE IF EXISTS InspectionProgram;
CREATE TABLE InspectionProgram (
	index  SERIAL PRIMARY KEY,
	_File integer, -- index into table FileInternalType 
	Description text, 
	_FormalStandard integer, -- index into table FormalStandardType 
	_Author integer  -- index into table AuthorType 
) ;

DROP TABLE IF EXISTS InspectionSoftwareItems;
CREATE TABLE InspectionSoftwareItems (
	index  SERIAL PRIMARY KEY,
	__InspectionProgramGenerationSoftware integer[], -- index into table SoftwareType 
	__InspectionProgramExecutionSoftware integer[], -- index into table SoftwareType 
	__AnalysisSoftware integer[], -- index into table SoftwareType 
	__CADSoftware integer[], -- index into table SoftwareType 
	__DMESoftware integer[]  -- index into table SoftwareType 
) ;

DROP TABLE IF EXISTS InspectionStatus;
CREATE TABLE InspectionStatus (
	index  SERIAL PRIMARY KEY,
	InspectionStatusEnum InspectionStatusEnumType NOT NULL, 
	OtherInspectionStatus text NOT NULL  
) ;

DROP TABLE IF EXISTS InspectionTraceability;
CREATE TABLE InspectionTraceability (
	index  SERIAL PRIMARY KEY,
	_CustomerOrganizationType integer, -- index into table CustomerOrganizationType 
	_InspectingOrganization integer, -- index into table OrganizationType 
	_CustomerOrganization integer, -- index into table CustomerOrganizationType 
	SupplierCode text, 
	PurchaseOrderNumber text, 
	OrderNumber text, 
	ReportNumber text, 
	InspectionScope InspectionScopeEnumType, 
	InspectionMode InspectionModeEnumType, 
	_PartialInspection integer, -- index into table PartialInspectionType 
	_NotableEvents integer, -- index into table NotableEventsType 
	_NotedEvents integer, -- index into table NotedEventsType 
	InspectionStart TIMESTAMP, 
	InspectionEnd TIMESTAMP, 
	_InspectionSoftwareItems integer, -- index into table InspectionSoftwareItemsType 
	_InspectionProgram integer, -- index into table InspectionProgramType 
	_InspectionOperator integer, -- index into table EmployeeType 
	_ReportPreparer integer, -- index into table EmployeeType 
	ReportPreparationDate TIMESTAMP, 
	ReportType text, 
	_SecurityClassification integer, -- index into table SecurityClassificationType 
	_PlantLocation integer, -- index into table LocationType 
	_ReferencedQIFPlanInstance integer, -- index into table QPIdFullReferenceType 
	ReferencedQIFPlan text NOT NULL, 
	_Errors integer  -- index into table ErrorsType 
) ;

DROP TABLE IF EXISTS InternalComponent;
CREATE TABLE InternalComponent (
	index  SERIAL PRIMARY KEY,
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	label text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS InternalHeader;
CREATE TABLE InternalHeader (
	index  SERIAL PRIMARY KEY,
	Name text, 
	_File integer, -- index into table FileInternalType 
	_Application integer, -- index into table ApplicationType 
	_Author integer, -- index into table AuthorType 
	_ApplicationSource integer, -- index into table ApplicationType 
	Description text, 
	_Units integer, -- index into table OtherUnitsType 
	ScaleCoefficient DOUBLE PRECISION, 
	ModelTolerance DOUBLE PRECISION, 
	MassPropertyTolerance DOUBLE PRECISION  
) ;

DROP TABLE IF EXISTS InternalPartAssembly;
CREATE TABLE InternalPartAssembly (
	index  SERIAL PRIMARY KEY,
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	originMassProperty text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Header integer, -- index into table QIFDocumentHeaderType 
	_BodyIds integer, -- index into table ArrayReferenceType 
	_CoordinateSystemIds integer, -- index into table ArrayReferenceType 
	_AuxiliaryIds integer, -- index into table ArrayReferenceType 
	_ViewIds integer, -- index into table ArrayReferenceType 
	_PointCloudIds integer  -- index into table ArrayReferenceType 
) ;

DROP TABLE IF EXISTS IntersectionPlane;
CREATE TABLE IntersectionPlane (
	index  SERIAL PRIMARY KEY,
	IntersectionPlaneEnum IntersectionPlaneEnumType NOT NULL, 
	_DatumDefinitionId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS KeyCharacteristic;
CREATE TABLE KeyCharacteristic (
	index  SERIAL PRIMARY KEY,
	Designator text NOT NULL, 
	Criticality text  
) ;

DROP TABLE IF EXISTS LatitudeLongitudeSweep;
CREATE TABLE LatitudeLongitudeSweep (
	index  SERIAL PRIMARY KEY,
	DirMeridianPrime text NOT NULL, 
	_DomainLatitude integer, -- index into table AngleRangeType 
	_DomainLongitude integer  -- index into table AngleRangeType 
) ;

DROP TABLE IF EXISTS LayerSet;
CREATE TABLE LayerSet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__Layer integer[]  -- index into table LayerType 
) ;

DROP TABLE IF EXISTS Layer;
CREATE TABLE Layer (
	index  SERIAL PRIMARY KEY,
	applyColor text NOT NULL,-- attribute
	index text,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_ElementIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS LeaderCircular;
CREATE TABLE LeaderCircular (
	index  SERIAL PRIMARY KEY,
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL, 
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL, 
	HeadForm LeaderHeadFormEnumType NOT NULL, 
	HeadHeight DOUBLE PRECISION NOT NULL, 
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL, 
	HeadForm LeaderHeadFormEnumType NOT NULL, 
	HeadHeight DOUBLE PRECISION NOT NULL, 
	Center FLOAT[2] NOT NULL  
) ;

DROP TABLE IF EXISTS LeaderDoubleHeadCircular;
CREATE TABLE LeaderDoubleHeadCircular (
	index  SERIAL PRIMARY KEY,
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL, 
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL, 
	HeadForm LeaderHeadFormEnumType NOT NULL, 
	HeadHeight DOUBLE PRECISION NOT NULL, 
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL, 
	HeadForm LeaderHeadFormEnumType NOT NULL, 
	HeadHeight DOUBLE PRECISION NOT NULL, 
	HeadForm2 LeaderHeadFormEnumType NOT NULL, 
	PointConnection FLOAT[2] NOT NULL, 
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL, 
	HeadForm LeaderHeadFormEnumType NOT NULL, 
	HeadHeight DOUBLE PRECISION NOT NULL, 
	HeadForm2 LeaderHeadFormEnumType NOT NULL, 
	PointConnection FLOAT[2] NOT NULL, 
	Center FLOAT[2] NOT NULL  
) ;

DROP TABLE IF EXISTS LeaderDoubleHeadExtend;
CREATE TABLE LeaderDoubleHeadExtend (
	index  SERIAL PRIMARY KEY,
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL, 
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL, 
	HeadForm LeaderHeadFormEnumType NOT NULL, 
	HeadHeight DOUBLE PRECISION NOT NULL, 
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL, 
	HeadForm LeaderHeadFormEnumType NOT NULL, 
	HeadHeight DOUBLE PRECISION NOT NULL, 
	HeadForm2 LeaderHeadFormEnumType NOT NULL, 
	PointConnection FLOAT[2] NOT NULL, 
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL, 
	HeadForm LeaderHeadFormEnumType NOT NULL, 
	HeadHeight DOUBLE PRECISION NOT NULL, 
	HeadForm2 LeaderHeadFormEnumType NOT NULL, 
	PointConnection FLOAT[2] NOT NULL, 
	PointExtension FLOAT[2] NOT NULL  
) ;

DROP TABLE IF EXISTS LeaderDoubleHead;
CREATE TABLE LeaderDoubleHead (
	index  SERIAL PRIMARY KEY,
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL, 
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL, 
	HeadForm LeaderHeadFormEnumType NOT NULL, 
	HeadHeight DOUBLE PRECISION NOT NULL, 
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL, 
	HeadForm LeaderHeadFormEnumType NOT NULL, 
	HeadHeight DOUBLE PRECISION NOT NULL, 
	HeadForm2 LeaderHeadFormEnumType NOT NULL, 
	PointConnection FLOAT[2] NOT NULL  
) ;

DROP TABLE IF EXISTS LeaderExtend;
CREATE TABLE LeaderExtend (
	index  SERIAL PRIMARY KEY,
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL, 
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL, 
	HeadForm LeaderHeadFormEnumType NOT NULL, 
	HeadHeight DOUBLE PRECISION NOT NULL, 
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL, 
	HeadForm LeaderHeadFormEnumType NOT NULL, 
	HeadHeight DOUBLE PRECISION NOT NULL, 
	PointExtension FLOAT[2] NOT NULL  
) ;

DROP TABLE IF EXISTS Leader;
CREATE TABLE Leader (
	index  SERIAL PRIMARY KEY,
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL, 
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL, 
	HeadForm LeaderHeadFormEnumType NOT NULL, 
	HeadHeight DOUBLE PRECISION NOT NULL  
) ;

DROP TABLE IF EXISTS LengthCharacteristicActual;
CREATE TABLE LengthCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS LengthCharacteristicDefinition;
CREATE TABLE LengthCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS LengthCharacteristicItem;
CREATE TABLE LengthCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS LengthCharacteristicNominal;
CREATE TABLE LengthCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS LengthCharacteristicStatsEval;
CREATE TABLE LengthCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS LengthFunctionDiscrete;
CREATE TABLE LengthFunctionDiscrete (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	N text,-- attribute
	DomainValues FLOAT[] NOT NULL, 
	RangeValues FLOAT[] NOT NULL, 
	DomainValues FLOAT[] NOT NULL, 
	RangeValues FLOAT[] NOT NULL, 
	DomainLinearUnit text NOT NULL, 
	RangeLinearUnit text NOT NULL  
) ;

DROP TABLE IF EXISTS LessOrEqual;
CREATE TABLE LessOrEqual (
	index  SERIAL PRIMARY KEY,
	__ArithmeticCharacteristicParameterType integer[], -- index into table ArithmeticCharacteristicParameterType 
	__ArithmeticFeatureParameterType integer[], -- index into table ArithmeticFeatureParameterType 
	__DividedByType integer[], -- index into table DividedByType 
	__MinusType integer[], -- index into table MinusType 
	__NegateType integer[], -- index into table NegateType 
	__PlusType integer[], -- index into table PlusType 
	__TimesType integer[], -- index into table TimesType 
	__ArithmeticCharacteristicParameterType integer[], -- index into table ArithmeticCharacteristicParameterType 
	__ArithmeticFeatureParameterType integer[], -- index into table ArithmeticFeatureParameterType 
	__DividedByType integer[], -- index into table DividedByType 
	__MinusType integer[], -- index into table MinusType 
	__NegateType integer[], -- index into table NegateType 
	__PlusType integer[], -- index into table PlusType 
	__TimesType integer[]  -- index into table TimesType 
) ;

DROP TABLE IF EXISTS LessThan;
CREATE TABLE LessThan (
	index  SERIAL PRIMARY KEY,
	__ArithmeticCharacteristicParameterType integer[], -- index into table ArithmeticCharacteristicParameterType 
	__ArithmeticFeatureParameterType integer[], -- index into table ArithmeticFeatureParameterType 
	__DividedByType integer[], -- index into table DividedByType 
	__MinusType integer[], -- index into table MinusType 
	__NegateType integer[], -- index into table NegateType 
	__PlusType integer[], -- index into table PlusType 
	__TimesType integer[], -- index into table TimesType 
	__ArithmeticCharacteristicParameterType integer[], -- index into table ArithmeticCharacteristicParameterType 
	__ArithmeticFeatureParameterType integer[], -- index into table ArithmeticFeatureParameterType 
	__DividedByType integer[], -- index into table DividedByType 
	__MinusType integer[], -- index into table MinusType 
	__NegateType integer[], -- index into table NegateType 
	__PlusType integer[], -- index into table PlusType 
	__TimesType integer[]  -- index into table TimesType 
) ;

DROP TABLE IF EXISTS LesserError;
CREATE TABLE LesserError (
	index  SERIAL PRIMARY KEY,
	_MaxErrorConstant integer, -- index into table LinearValueType 
	_LinearError integer  -- index into table LinearErrorType 
) ;

DROP TABLE IF EXISTS LimitingNumber;
CREATE TABLE LimitingNumber (
	index  SERIAL PRIMARY KEY,
	Count integer NOT NULL, 
	Fraction DECIMAL(10,2) NOT NULL  
) ;

DROP TABLE IF EXISTS LineActualDetermination;
CREATE TABLE LineActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS LineBestFit;
CREATE TABLE LineBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS LineCast;
CREATE TABLE LineCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS LineCheckedFeature;
CREATE TABLE LineCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS LineChecked;
CREATE TABLE LineChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS LineConstructionMethod;
CREATE TABLE LineConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Midline integer, -- index into table LineMidlineType 
	_Intersection integer, -- index into table PointFeatureIntersectionType 
	_Projection integer, -- index into table ArcProjectionType 
	_Perpendicular integer, -- index into table PlanePerpendicularType 
	_Parallel integer, -- index into table PlaneParallelType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_TangentThrough integer, -- index into table PlaneTangentThroughType 
	_Transform integer, -- index into table ConicalSegmentTransformType 
	_Extract integer, -- index into table PlaneExtractType 
	_FromScan integer  -- index into table CylinderFromScanType 
) ;

DROP TABLE IF EXISTS LineCopy;
CREATE TABLE LineCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseLine integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS LineExtract;
CREATE TABLE LineExtract (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_CurveFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS LineFeatureActual;
CREATE TABLE LineFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Direction integer, -- index into table UnitVectorType 
	_Length integer, -- index into table LinearValueType 
	_Normal integer, -- index into table UnitVectorSimpleType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS LineFeatureDefinition;
CREATE TABLE LineFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer  -- index into table AttributesType 
) ;

DROP TABLE IF EXISTS LineFeatureItem;
CREATE TABLE LineFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS LineFeatureNominal;
CREATE TABLE LineFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_ActualPointType integer, -- index into table ActualPointType 
	_Location integer, -- index into table LocationType 
	Direction text NOT NULL, 
	_Length integer, -- index into table LinearValueType 
	Normal text  
) ;

DROP TABLE IF EXISTS LineFromScan;
CREATE TABLE LineFromScan (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_SurfaceFeature integer, -- index into table BaseFeatureType 
	_SearchRadius integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS LineIntersection;
CREATE TABLE LineIntersection (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BasePlane integer[]  -- index into table BaseFeatureType 
) ;

DROP TABLE IF EXISTS LineMidline;
CREATE TABLE LineMidline (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseLine integer[]  -- index into table BaseFeatureType 
) ;

DROP TABLE IF EXISTS LineParallel;
CREATE TABLE LineParallel (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_ParallelFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_PointFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS LinePerpendicular;
CREATE TABLE LinePerpendicular (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_PerpendicularFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_PointFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS LinePointSamplingStrategy;
CREATE TABLE LinePointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum OpenCurvePointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS LineProfileCharacteristicActual;
CREATE TABLE LineProfileCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_WorstPositiveDeviation integer, -- index into table LinearValueType 
	_WorstNegativeDeviation integer, -- index into table LinearValueType 
	_PointDeviations integer, -- index into table PointDeviationsType 
	DatumsOk BOOLEAN, 
	_DRFTransformActualId integer, -- index into table QIFReferenceFullType 
	_SecondCompositeSegmentProfileActual integer, -- index into table CompositeSegmentProfileActualType 
	_ThirdCompositeSegmentProfileActual integer, -- index into table CompositeSegmentProfileActualType 
	_FourthCompositeSegmentProfileActual integer, -- index into table CompositeSegmentProfileActualType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_WorstPositiveDeviation integer, -- index into table LinearValueType 
	_WorstNegativeDeviation integer, -- index into table LinearValueType 
	_PointDeviations integer, -- index into table PointDeviationsType 
	DatumsOk BOOLEAN, 
	_DRFTransformActualId integer, -- index into table QIFReferenceFullType 
	_SecondCompositeSegmentProfileActual integer, -- index into table CompositeSegmentProfileActualType 
	_ThirdCompositeSegmentProfileActual integer, -- index into table CompositeSegmentProfileActualType 
	_FourthCompositeSegmentProfileActual integer  -- index into table CompositeSegmentProfileActualType 
) ;

DROP TABLE IF EXISTS LineProfileCharacteristicDefinition;
CREATE TABLE LineProfileCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_OuterDisposition integer, -- index into table LinearValueType 
	_UnequallyDisposedZone integer, -- index into table LinearValueType 
	OffsetZone BOOLEAN, 
	_SecondCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_ThirdCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_FourthCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	OrientationOnly BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_OuterDisposition integer, -- index into table LinearValueType 
	_UnequallyDisposedZone integer, -- index into table LinearValueType 
	OffsetZone BOOLEAN, 
	_SecondCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_ThirdCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_FourthCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	OrientationOnly BOOLEAN, 
	_Extent integer  -- index into table ExtentType 
) ;

DROP TABLE IF EXISTS LineProfileCharacteristicItem;
CREATE TABLE LineProfileCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS LineProfileCharacteristicNominal;
CREATE TABLE LineProfileCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	Vector text NOT NULL, 
	_ZoneLimit integer  -- index into table CharacteristicDirectionalZoneLimitType 
) ;

DROP TABLE IF EXISTS LineProfileCharacteristicStatsEval;
CREATE TABLE LineProfileCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_WorstPositiveDeviationStats integer, -- index into table StatsLinearType 
	_WorstNegativeDeviationStats integer, -- index into table StatsLinearType 
	_PointDeviationsStats integer, -- index into table PointDeviationsStatsEvalType 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	_CompositeSegmentsStats integer, -- index into table CompositeSegmentsProfileStatsEvalType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_WorstPositiveDeviationStats integer, -- index into table StatsLinearType 
	_WorstNegativeDeviationStats integer, -- index into table StatsLinearType 
	_PointDeviationsStats integer, -- index into table PointDeviationsStatsEvalType 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	_CompositeSegmentsStats integer  -- index into table CompositeSegmentsProfileStatsEvalType 
) ;

DROP TABLE IF EXISTS LineProjection;
CREATE TABLE LineProjection (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_ProjectionPlane integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_ProjectionLine integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS LineRecomp;
CREATE TABLE LineRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS LineSegment2d;
CREATE TABLE LineSegment2d (
	index  SERIAL PRIMARY KEY,
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL  
) ;

DROP TABLE IF EXISTS LineSegment;
CREATE TABLE LineSegment (
	index  SERIAL PRIMARY KEY,
	linearUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	validity text NOT NULL,-- attribute
	xDecimalPlaces text NOT NULL,-- attribute
	xSignificantFigures text NOT NULL,-- attribute
	xValidity text NOT NULL,-- attribute
	yDecimalPlaces text NOT NULL,-- attribute
	ySignificantFigures text NOT NULL,-- attribute
	yValidity text NOT NULL,-- attribute
	zDecimalPlaces text NOT NULL,-- attribute
	zSignificantFigures text NOT NULL,-- attribute
	zValidity text NOT NULL,-- attribute
	StartPoint FLOAT[3] NOT NULL, 
	EndPoint FLOAT[3] NOT NULL  
) ;

DROP TABLE IF EXISTS LineTangentThrough;
CREATE TABLE LineTangentThrough (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_TangentFeature integer, -- index into table BaseFeatureType 
	_PointFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS LineTransform;
CREATE TABLE LineTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseLine integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS LinearCharacteristicStatsEval;
CREATE TABLE LinearCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS LinearCoordinateCharacteristicActual;
CREATE TABLE LinearCoordinateCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_TypeOfCoordinates integer, -- index into table TypeOfCoordinatesType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_TypeOfCoordinates integer, -- index into table TypeOfCoordinatesType 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS LinearCoordinateCharacteristicDefinition;
CREATE TABLE LinearCoordinateCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS LinearCoordinateCharacteristicItem;
CREATE TABLE LinearCoordinateCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS LinearCoordinateCharacteristicNominal;
CREATE TABLE LinearCoordinateCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	Direction LinearCoordinateDirectionEnumType NOT NULL, 
	_CoordinateSystemId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS LinearCoordinateCharacteristicStatsEval;
CREATE TABLE LinearCoordinateCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS LinearError;
CREATE TABLE LinearError (
	index  SERIAL PRIMARY KEY,
	_BaseError integer, -- index into table LinearValueType 
	ErrorRate DECIMAL(10,2) NOT NULL  
) ;

DROP TABLE IF EXISTS LinearToleranceDefinition;
CREATE TABLE LinearToleranceDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS LinearTolerance;
CREATE TABLE LinearTolerance (
	index  SERIAL PRIMARY KEY,
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_DefinitionId integer, -- index into table QIFReferenceFullType 
	DefinedAsLimit BOOLEAN NOT NULL  
) ;

DROP TABLE IF EXISTS LinearUnit;
CREATE TABLE LinearUnit (
	index  SERIAL PRIMARY KEY,
	SIUnitName text, 
	UnitName text NOT NULL, 
	_UnitConversion integer  -- index into table UnitConversionType 
) ;

DROP TABLE IF EXISTS LinearValue;
CREATE TABLE LinearValue (
	index  SERIAL PRIMARY KEY,
	linearUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS LinearityStudyPlan;
CREATE TABLE LinearityStudyPlan (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	GoodnessOfFitThreshold DECIMAL(10,2), 
	_LinearAbsoluteLinearityMinimum integer, -- index into table LinearValueType 
	_AngularAbsoluteLinearityMinimum integer, -- index into table AngularValueType 
	_AreaAbsoluteLinearityMinimum integer, -- index into table AreaValueType 
	_ForceAbsoluteLinearityMinimum integer, -- index into table ForceValueType 
	_MassAbsoluteLinearityMinimum integer, -- index into table MassValueType 
	_PressureAbsoluteLinearityMinimum integer, -- index into table PressureValueType 
	_SpeedAbsoluteLinearityMinimum integer, -- index into table SpeedValueType 
	_TemperatureAbsoluteLinearityMinimum integer, -- index into table TemperatureValueType 
	_TimeAbsoluteLinearityMinimum integer, -- index into table TimeValueType 
	__UserDefinedUnitAbsoluteLinearityMinimum integer[], -- index into table UserDefinedUnitValueType 
	RelativeLinearityMinimum DECIMAL(10,2) NOT NULL  
) ;

DROP TABLE IF EXISTS LinearityStudyResults;
CREATE TABLE LinearityStudyResults (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	SampleSize integer NOT NULL, 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	GoodnessOfFit text, 
	_LinearAbsoluteLinearity integer, -- index into table ActualLinearValueType 
	_AngularAbsoluteLinearity integer, -- index into table ActualAngularValueType 
	_AreaAbsoluteLinearity integer, -- index into table ActualAreaValueType 
	_ForceAbsoluteLinearity integer, -- index into table ActualForceValueType 
	_MassAbsoluteLinearity integer, -- index into table ActualMassValueType 
	_PressureAbsoluteLinearity integer, -- index into table ActualPressureValueType 
	_SpeedAbsoluteLinearity integer, -- index into table ActualSpeedValueType 
	_TemperatureAbsoluteLinearity integer, -- index into table ActualTemperatureValueType 
	_TimeAbsoluteLinearity integer, -- index into table ActualTimeValueType 
	_UserDefinedUnitAbsoluteLinearity integer, -- index into table ActualUserDefinedUnitValueType 
	RelativeLinearity text  
) ;

DROP TABLE IF EXISTS LocationCharacteristicStatsEval;
CREATE TABLE LocationCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DatumsOkStats integer  -- index into table StatsPassFailType 
) ;

DROP TABLE IF EXISTS LocationOnDrawing;
CREATE TABLE LocationOnDrawing (
	index  SERIAL PRIMARY KEY,
	_DrawingId integer, -- index into table QIFReferenceFullType 
	SheetNumber text, 
	DrawingZone text, 
	_ModelId integer, -- index into table QIFReferenceFullType 
	View text NOT NULL, 
	_ViewId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS Location;
CREATE TABLE Location (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	LocationDescription text NOT NULL, 
	_Address integer  -- index into table PhysicalAddressType 
) ;

DROP TABLE IF EXISTS LoopMesh;
CREATE TABLE LoopMesh (
	index  SERIAL PRIMARY KEY,
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_CoEdgesMesh integer  -- index into table CoEdgesMeshType 
) ;

DROP TABLE IF EXISTS LoopSet;
CREATE TABLE LoopSet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__LoopMeshType integer[], -- index into table LoopMeshType 
	__LoopType integer[]  -- index into table LoopType 
) ;

DROP TABLE IF EXISTS Loop;
CREATE TABLE Loop (
	index  SERIAL PRIMARY KEY,
	form text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_CoEdges integer  -- index into table CoEdgesType 
) ;

DROP TABLE IF EXISTS MachineCoordinateSystemOperation;
CREATE TABLE MachineCoordinateSystemOperation (
	index  SERIAL PRIMARY KEY,
	SequenceNumber integer NOT NULL, 
	SequenceNumber integer NOT NULL  
) ;

DROP TABLE IF EXISTS ManualDevice;
CREATE TABLE ManualDevice (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Calibrations integer, -- index into table CalibrationsType 
	_InspectionTemperatures integer, -- index into table TemperaturesType 
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Calibrations integer, -- index into table CalibrationsType 
	_InspectionTemperatures integer  -- index into table TemperaturesType 
) ;

DROP TABLE IF EXISTS ManualMeasureFeatureMethod;
CREATE TABLE ManualMeasureFeatureMethod (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_ChosenResourceIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_ChosenResourceIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_ChosenResourceIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS ManufacturingMethod;
CREATE TABLE ManufacturingMethod (
	index  SERIAL PRIMARY KEY,
	ManufacturingMethodEnum ManufacturingMethodEnumType NOT NULL, 
	OtherManufacturingMethod text NOT NULL  
) ;

DROP TABLE IF EXISTS ManufacturingProcessTraceabilities;
CREATE TABLE ManufacturingProcessTraceabilities (
	index  SERIAL PRIMARY KEY,
	__ManufacturingProcessTraceability integer[]  -- index into table ManufacturingProcessTraceabilityType 
) ;

DROP TABLE IF EXISTS ManufacturingProcessTraceability;
CREATE TABLE ManufacturingProcessTraceability (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Job text, 
	Revision text, 
	_PreviousOperationId integer, -- index into table QIFReferenceFullType 
	Path text, 
	MachineManufacturerName text, 
	MachineIdentifier text, 
	OperatorIdentifier text, 
	Shift text, 
	Department text, 
	ResponsibilityIdentifier text, 
	PlantSector text, 
	__ProcessParameter integer[], -- index into table ProcessParameterType 
	_AssociatedTraceabilityId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS MassTolerance;
CREATE TABLE MassTolerance (
	index  SERIAL PRIMARY KEY,
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	DefinedAsLimit BOOLEAN NOT NULL  
) ;

DROP TABLE IF EXISTS MassUnit;
CREATE TABLE MassUnit (
	index  SERIAL PRIMARY KEY,
	SIUnitName text, 
	UnitName text NOT NULL, 
	_UnitConversion integer  -- index into table UnitConversionType 
) ;

DROP TABLE IF EXISTS MassValue;
CREATE TABLE MassValue (
	index  SERIAL PRIMARY KEY,
	massUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS Matrix33;
CREATE TABLE Matrix33 (
	index  SERIAL PRIMARY KEY 
) ;

DROP TABLE IF EXISTS MaxFeatureRules;
CREATE TABLE MaxFeatureRules (
	index  SERIAL PRIMARY KEY,
	__IfThenArcRuleType integer[], -- index into table IfThenArcRuleType 
	__IfThenCircleRuleType integer[], -- index into table IfThenCircleRuleType 
	__IfThenConeRuleType integer[], -- index into table IfThenConeRuleType 
	__IfThenConicalSegmentRuleType integer[], -- index into table IfThenConicalSegmentRuleType 
	__IfThenCuboidRuleType integer[], -- index into table IfThenCuboidRuleType 
	__IfThenCurveRuleType integer[], -- index into table IfThenCurveRuleType 
	__IfThenCylinderRuleType integer[], -- index into table IfThenCylinderRuleType 
	__IfThenCylindricalSegmentRuleType integer[], -- index into table IfThenCylindricalSegmentRuleType 
	__IfThenEllipseRuleType integer[], -- index into table IfThenEllipseRuleType 
	__IfThenElongatedCylinderRuleType integer[], -- index into table IfThenElongatedCylinderRuleType 
	__IfThenExtrudedCrossSectionRuleType integer[], -- index into table IfThenExtrudedCrossSectionRuleType 
	__IfThenFeatureRule integer[], -- index into table IfThenFeatureRuleType 
	__IfThenLineRuleType integer[], -- index into table IfThenLineRuleType 
	__IfThenOppositeLinesRuleType integer[], -- index into table IfThenOppositeLinesRuleType 
	__IfThenOppositePlanesRuleType integer[], -- index into table IfThenOppositePlanesRuleType 
	__IfThenPlaneRuleType integer[], -- index into table IfThenPlaneRuleType 
	__IfThenPointDefinedCurveRuleType integer[], -- index into table IfThenPointDefinedCurveRuleType 
	__IfThenPointDefinedSurfaceRuleType integer[], -- index into table IfThenPointDefinedSurfaceRuleType 
	__IfThenPointRuleType integer[], -- index into table IfThenPointRuleType 
	__IfThenSphereRuleType integer[], -- index into table IfThenSphereRuleType 
	__IfThenSphericalSegmentRuleType integer[], -- index into table IfThenSphericalSegmentRuleType 
	__IfThenSurfaceOfRevolutionRuleType integer[], -- index into table IfThenSurfaceOfRevolutionRuleType 
	__IfThenSurfaceRuleType integer[], -- index into table IfThenSurfaceRuleType 
	__IfThenToroidalSegmentRuleType integer[], -- index into table IfThenToroidalSegmentRuleType 
	__IfThenTorusRuleType integer[], -- index into table IfThenTorusRuleType 
	_Else integer  -- index into table ElseRuleType 
) ;

DROP TABLE IF EXISTS Measurands;
CREATE TABLE Measurands (
	index  SERIAL PRIMARY KEY,
	__EstablishDatumMeasurandType integer[], -- index into table EstablishDatumMeasurandType 
	__EvaluateCharacteristicMeasurandType integer[]  -- index into table EvaluateCharacteristicMeasurandType 
) ;

DROP TABLE IF EXISTS MeasureActionGroupFunction;
CREATE TABLE MeasureActionGroupFunction (
	index  SERIAL PRIMARY KEY,
	MeasureActionGroupFunctionEnum MeasureActionGroupFunctionEnumType NOT NULL, 
	OtherMeasureActionGroupFunction text NOT NULL  
) ;

DROP TABLE IF EXISTS MeasureEvaluateAllAction;
CREATE TABLE MeasureEvaluateAllAction (
	index  SERIAL PRIMARY KEY,
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_PreferredActionMethodId integer, -- index into table QIFReferenceFullType 
	_AlternativeActionMethodIds integer, -- index into table ArrayReferenceFullType 
	_PreferredResourceIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_PreferredActionMethodId integer, -- index into table QIFReferenceFullType 
	_AlternativeActionMethodIds integer, -- index into table ArrayReferenceFullType 
	_PreferredResourceIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS MeasureEvaluateSpecifiedAction;
CREATE TABLE MeasureEvaluateSpecifiedAction (
	index  SERIAL PRIMARY KEY,
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_PreferredActionMethodId integer, -- index into table QIFReferenceFullType 
	_AlternativeActionMethodIds integer, -- index into table ArrayReferenceFullType 
	_PreferredResourceIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_PreferredActionMethodId integer, -- index into table QIFReferenceFullType 
	_AlternativeActionMethodIds integer, -- index into table ArrayReferenceFullType 
	_PreferredResourceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicItemIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS MeasurePointActual;
CREATE TABLE MeasurePointActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Point integer, -- index into table ElementReferenceType 
	_Normal integer, -- index into table UnitVectorSimpleType 
	_Point integer, -- index into table ElementReferenceType 
	_Normal integer, -- index into table UnitVectorSimpleType 
	Compensated BOOLEAN NOT NULL, 
	_ProbeRadius integer, -- index into table ActualLinearValueType 
	_MeasurementDeviceId integer, -- index into table QIFReferenceFullType 
	_SensorId integer, -- index into table QIFReferenceFullType 
	_MeasurePointNominalId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS MeasurePointNominal;
CREATE TABLE MeasurePointNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_ActualPointType integer, -- index into table ActualPointType 
	_Point integer, -- index into table ElementReferenceType 
	Normal text, 
	_ActualPointType integer, -- index into table ActualPointType 
	_Point integer, -- index into table ElementReferenceType 
	Normal text, 
	_MeasurementDeviceId integer, -- index into table QIFReferenceFullType 
	_SensorId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS MeasureSpecifiedFeaturesAction;
CREATE TABLE MeasureSpecifiedFeaturesAction (
	index  SERIAL PRIMARY KEY,
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_PreferredActionMethodId integer, -- index into table QIFReferenceFullType 
	_AlternativeActionMethodIds integer, -- index into table ArrayReferenceFullType 
	_PreferredResourceIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_PreferredActionMethodId integer, -- index into table QIFReferenceFullType 
	_AlternativeActionMethodIds integer, -- index into table ArrayReferenceFullType 
	_PreferredResourceIds integer, -- index into table ArrayReferenceFullType 
	_FeatureItemIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS MeasureSpecifiedMeasurandsAction;
CREATE TABLE MeasureSpecifiedMeasurandsAction (
	index  SERIAL PRIMARY KEY,
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_PreferredActionMethodId integer, -- index into table QIFReferenceFullType 
	_AlternativeActionMethodIds integer, -- index into table ArrayReferenceFullType 
	_PreferredResourceIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_PreferredActionMethodId integer, -- index into table QIFReferenceFullType 
	_AlternativeActionMethodIds integer, -- index into table ArrayReferenceFullType 
	_PreferredResourceIds integer, -- index into table ArrayReferenceFullType 
	_MeasurandIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS MeasuredCharacteristics;
CREATE TABLE MeasuredCharacteristics (
	index  SERIAL PRIMARY KEY,
	_CharacteristicActuals integer, -- index into table CharacteristicActualsType 
	_CharacteristicGroupStatuses integer  -- index into table CharacteristicGroupStatusesType 
) ;

DROP TABLE IF EXISTS MeasuredFeature;
CREATE TABLE MeasuredFeature (
	index  SERIAL PRIMARY KEY,
	_PointList integer  -- index into table PointListNominalType 
) ;

DROP TABLE IF EXISTS MeasuredFeatures;
CREATE TABLE MeasuredFeatures (
	index  SERIAL PRIMARY KEY,
	_FeatureActuals integer  -- index into table FeatureActualsType 
) ;

DROP TABLE IF EXISTS MeasurementDevice;
CREATE TABLE MeasurementDevice (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Calibrations integer, -- index into table CalibrationsType 
	_InspectionTemperatures integer  -- index into table TemperaturesType 
) ;

DROP TABLE IF EXISTS MeasurementDevices;
CREATE TABLE MeasurementDevices (
	index  SERIAL PRIMARY KEY,
	__CMMType integer[], -- index into table CMMType 
	__CaliperType integer[], -- index into table CaliperType 
	__ComparatorType integer[], -- index into table ComparatorType 
	__GageDeviceType integer[], -- index into table GageDeviceType 
	__ManualDeviceType integer[], -- index into table ManualDeviceType 
	__MeasurementDevice integer[]  -- index into table MeasurementDeviceType 
) ;

DROP TABLE IF EXISTS MeasurementDirective;
CREATE TABLE MeasurementDirective (
	index  SERIAL PRIMARY KEY,
	MeasurementDirectiveEnum MeasurementDirectiveEnumType NOT NULL, 
	OtherMeasurementDirective text NOT NULL  
) ;

DROP TABLE IF EXISTS MeasurementPlan;
CREATE TABLE MeasurementPlan (
	index  SERIAL PRIMARY KEY,
	_Version integer, -- index into table string 
	_RulesUsedQPId integer, -- index into table QPIdFullReferenceType 
	_RulesToUseQPId integer, -- index into table QPIdFullReferenceType 
	_WorkInstructions integer, -- index into table WorkInstructionsType 
	_ActionMethods integer, -- index into table ActionMethodsType 
	_Measurands integer, -- index into table MeasurandsType 
	_OneOfActionGroupType integer, -- index into table OneOfActionGroupType 
	_OrderedActionGroupType integer, -- index into table OrderedActionGroupType 
	_PartiallyOrderedActionGroupType integer, -- index into table PartiallyOrderedActionGroupType 
	_PickSomeActionGroupType integer, -- index into table PickSomeActionGroupType 
	_UnorderedActionGroupType integer  -- index into table UnorderedActionGroupType 
) ;

DROP TABLE IF EXISTS MeasurementResources;
CREATE TABLE MeasurementResources (
	index  SERIAL PRIMARY KEY,
	_Version integer, -- index into table string 
	_Carriages integer, -- index into table CarriagesType 
	_Fixtures integer, -- index into table FixturesType 
	_MeasurementDevices integer, -- index into table MeasurementDevicesType 
	_Sensors integer, -- index into table SensorsType 
	_Tools integer  -- index into table ToolsType 
) ;

DROP TABLE IF EXISTS MeasurementResults;
CREATE TABLE MeasurementResults (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	ThisResultsInstanceQPId text, 
	__ExternalFileReference integer[], -- index into table ExternalFileReferenceType 
	_MeasuredFeatures integer, -- index into table MeasuredFeaturesType 
	_MeasuredCharacteristics integer, -- index into table MeasuredCharacteristicsType 
	_CoordinateSystemActualTransforms integer, -- index into table CoordinateSystemActualTransformsType 
	_InspectionStatus integer, -- index into table InspectionStatusType 
	_ActualComponentIds integer  -- index into table ArrayReferenceType 
) ;

DROP TABLE IF EXISTS MeasurementsResults;
CREATE TABLE MeasurementsResults (
	index  SERIAL PRIMARY KEY,
	_Version integer, -- index into table string 
	__MeasurementResults integer[], -- index into table MeasurementResultsType 
	__ActualComponentSet integer[], -- index into table ActualComponentSetType 
	_InspectionTraceability integer  -- index into table InspectionTraceabilityType 
) ;

DROP TABLE IF EXISTS MeshTriangleCore;
CREATE TABLE MeshTriangleCore (
	index  SERIAL PRIMARY KEY,
	_Triangles integer, -- index into table ArrayI3Type 
	_TrianglesBinary integer, -- index into table ArrayBinaryType 
	_Neighbours integer, -- index into table ArrayI3Type 
	_NeighboursBinary integer, -- index into table ArrayBinaryType 
	Vertices text NOT NULL, 
	_VerticesBinary integer, -- index into table ArrayBinaryType 
	_Normals integer, -- index into table ArrayUnitVectorType 
	_NormalsBinary integer  -- index into table ArrayBinaryType 
) ;

DROP TABLE IF EXISTS MeshTriangle;
CREATE TABLE MeshTriangle (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_MeshTriangleCore integer  -- index into table MeshTriangleCoreType 
) ;

DROP TABLE IF EXISTS Minus;
CREATE TABLE Minus (
	index  SERIAL PRIMARY KEY,
	__ArithmeticCharacteristicParameterType integer[], -- index into table ArithmeticCharacteristicParameterType 
	__ArithmeticFeatureParameterType integer[], -- index into table ArithmeticFeatureParameterType 
	__DividedByType integer[], -- index into table DividedByType 
	__MinusType integer[], -- index into table MinusType 
	__NegateType integer[], -- index into table NegateType 
	__PlusType integer[], -- index into table PlusType 
	__TimesType integer[], -- index into table TimesType 
	__ArithmeticCharacteristicParameterType integer[], -- index into table ArithmeticCharacteristicParameterType 
	__ArithmeticFeatureParameterType integer[], -- index into table ArithmeticFeatureParameterType 
	__DividedByType integer[], -- index into table DividedByType 
	__MinusType integer[], -- index into table MinusType 
	__NegateType integer[], -- index into table NegateType 
	__PlusType integer[], -- index into table PlusType 
	__TimesType integer[]  -- index into table TimesType 
) ;

DROP TABLE IF EXISTS MovableDatumTargetDirection;
CREATE TABLE MovableDatumTargetDirection (
	index  SERIAL PRIMARY KEY,
	DatumTargetTranslationDirection text NOT NULL  
) ;

DROP TABLE IF EXISTS MultiLeadThreadSpecification;
CREATE TABLE MultiLeadThreadSpecification (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Diameter integer, -- index into table LinearValueType 
	_ThreadSeries integer, -- index into table ThreadSeriesType 
	_ThreadToleranceClass integer, -- index into table ThreadClassType 
	_CrestDiameterToleranceClass integer, -- index into table ThreadClassType 
	LeftHanded BOOLEAN, 
	ModifiedThread BOOLEAN, 
	_ThreadLengthEngagement integer, -- index into table LinearValueType 
	_Diameter integer, -- index into table LinearValueType 
	_ThreadSeries integer, -- index into table ThreadSeriesType 
	_ThreadToleranceClass integer, -- index into table ThreadClassType 
	_CrestDiameterToleranceClass integer, -- index into table ThreadClassType 
	LeftHanded BOOLEAN, 
	ModifiedThread BOOLEAN, 
	_ThreadLengthEngagement integer, -- index into table LinearValueType 
	_ThreadPitch integer, -- index into table LinearValueType 
	_ThreadLeadDistance integer, -- index into table LinearValueType 
	ThreadLeadStarts integer NOT NULL  
) ;

DROP TABLE IF EXISTS Negate;
CREATE TABLE Negate (
	index  SERIAL PRIMARY KEY,
	_ArithmeticCharacteristicParameterType integer, -- index into table ArithmeticCharacteristicParameterType 
	_ArithmeticFeatureParameterType integer, -- index into table ArithmeticFeatureParameterType 
	_DividedByType integer, -- index into table DividedByType 
	_MinusType integer, -- index into table MinusType 
	_NegateType integer, -- index into table NegateType 
	_PlusType integer, -- index into table PlusType 
	_TimesType integer  -- index into table TimesType 
) ;

DROP TABLE IF EXISTS NominalDatumFeature;
CREATE TABLE NominalDatumFeature (
	index  SERIAL PRIMARY KEY,
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_FeatureItemId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS NominalOffsetAlignmentOperation;
CREATE TABLE NominalOffsetAlignmentOperation (
	index  SERIAL PRIMARY KEY,
	SequenceNumber integer NOT NULL, 
	SequenceNumber integer NOT NULL, 
	_Offset integer  -- index into table PlaneOffsetType 
) ;

DROP TABLE IF EXISTS NominalRotationAlignmentOperation;
CREATE TABLE NominalRotationAlignmentOperation (
	index  SERIAL PRIMARY KEY,
	SequenceNumber integer NOT NULL, 
	SequenceNumber integer NOT NULL, 
	RotationAxis text NOT NULL, 
	_Angle integer  -- index into table AngularValueType 
) ;

DROP TABLE IF EXISTS NonFeatureOfSizeSubstituteFeatureAlgorithm;
CREATE TABLE NonFeatureOfSizeSubstituteFeatureAlgorithm (
	index  SERIAL PRIMARY KEY,
	NonFeatureOfSizeSubstituteFeatureAlgorithmEnum NonFeatureOfSizeSubstituteFeatureAlgorithmEnumType NOT NULL, 
	OtherNonFeatureOfSizeSubstituteFeatureAlgorithm text NOT NULL  
) ;

DROP TABLE IF EXISTS Not;
CREATE TABLE Not (
	index  SERIAL PRIMARY KEY,
	_AndType integer, -- index into table AndType 
	_BooleanEqualType integer, -- index into table BooleanEqualType 
	_GreaterOrEqualType integer, -- index into table GreaterOrEqualType 
	_GreaterThanType integer, -- index into table GreaterThanType 
	_LessOrEqualType integer, -- index into table LessOrEqualType 
	_LessThanType integer, -- index into table LessThanType 
	_NotType integer, -- index into table NotType 
	_OrType integer  -- index into table OrType 
) ;

DROP TABLE IF EXISTS NotableEvent;
CREATE TABLE NotableEvent (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	Description text NOT NULL, 
	Description text NOT NULL, 
	Active BOOLEAN NOT NULL  
) ;

DROP TABLE IF EXISTS NotableEvents;
CREATE TABLE NotableEvents (
	index  SERIAL PRIMARY KEY,
	__NotableEvent integer[]  -- index into table NotableEventType 
) ;

DROP TABLE IF EXISTS NoteFlagSet;
CREATE TABLE NoteFlagSet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__NoteFlag integer[]  -- index into table NoteFlagType 
) ;

DROP TABLE IF EXISTS NoteFlag;
CREATE TABLE NoteFlag (
	index  SERIAL PRIMARY KEY,
	form text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	form text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Text text NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Text text NOT NULL, 
	TextHidden text, 
	URI text  
) ;

DROP TABLE IF EXISTS NoteSet;
CREATE TABLE NoteSet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__Note integer[], -- index into table NoteType 
	__NoteFlagType integer[]  -- index into table NoteFlagType 
) ;

DROP TABLE IF EXISTS Note;
CREATE TABLE Note (
	index  SERIAL PRIMARY KEY,
	form text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Text text NOT NULL  
) ;

DROP TABLE IF EXISTS NotedEvent;
CREATE TABLE NotedEvent (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	Description text NOT NULL, 
	Description text NOT NULL, 
	SequenceNumber integer NOT NULL, 
	TimeOccurred TIMESTAMP, 
	_NotableEventId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS NotedEvents;
CREATE TABLE NotedEvents (
	index  SERIAL PRIMARY KEY,
	__NotedEvent integer[]  -- index into table NotedEventType 
) ;

DROP TABLE IF EXISTS NumberedPlanElement;
CREATE TABLE NumberedPlanElement (
	index  SERIAL PRIMARY KEY,
	SequenceNumber integer NOT NULL, 
	_EvaluateSpecifiedCharacteristicsActionType integer, -- index into table EvaluateSpecifiedCharacteristicsActionType 
	_MeasureEvaluateAllActionType integer, -- index into table MeasureEvaluateAllActionType 
	_MeasureEvaluateSpecifiedActionType integer, -- index into table MeasureEvaluateSpecifiedActionType 
	_MeasureSpecifiedFeaturesActionType integer, -- index into table MeasureSpecifiedFeaturesActionType 
	_MeasureSpecifiedMeasurandsActionType integer, -- index into table MeasureSpecifiedMeasurandsActionType 
	_OneOfActionGroupType integer, -- index into table OneOfActionGroupType 
	_OrderedActionGroupType integer, -- index into table OrderedActionGroupType 
	_PartiallyOrderedActionGroupType integer, -- index into table PartiallyOrderedActionGroupType 
	_PickSomeActionGroupType integer, -- index into table PickSomeActionGroupType 
	_UnorderedActionGroupType integer  -- index into table UnorderedActionGroupType 
) ;

DROP TABLE IF EXISTS NumberedPlanElements;
CREATE TABLE NumberedPlanElements (
	index  SERIAL PRIMARY KEY,
	__NumberedPlanElement integer[]  -- index into table NumberedPlanElementType 
) ;

DROP TABLE IF EXISTS NumericalLengthAccuracy;
CREATE TABLE NumericalLengthAccuracy (
	index  SERIAL PRIMARY KEY,
	_AccuracyValue integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS Nurbs12Core;
CREATE TABLE Nurbs12Core (
	index  SERIAL PRIMARY KEY,
	domain text,-- attribute
	domain text,-- attribute
	Order integer NOT NULL, 
	_Knots integer, -- index into table ArrayDoubleType 
	_CPs integer, -- index into table ArrayPoint2dType 
	_CPsBinary integer, -- index into table ArrayBinaryType 
	_Weights integer  -- index into table ArrayDoubleType 
) ;

DROP TABLE IF EXISTS Nurbs12;
CREATE TABLE Nurbs12 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Nurbs12Core integer  -- index into table Nurbs12CoreType 
) ;

DROP TABLE IF EXISTS Nurbs13Core;
CREATE TABLE Nurbs13Core (
	index  SERIAL PRIMARY KEY,
	domain text,-- attribute
	domain text,-- attribute
	Order integer NOT NULL, 
	_Knots integer, -- index into table ArrayDoubleType 
	CPs text NOT NULL, 
	_CPsBinary integer, -- index into table ArrayBinaryType 
	_Weights integer  -- index into table ArrayDoubleType 
) ;

DROP TABLE IF EXISTS Nurbs13;
CREATE TABLE Nurbs13 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Nurbs13Core integer, -- index into table Nurbs13CoreType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS Nurbs23Core;
CREATE TABLE Nurbs23Core (
	index  SERIAL PRIMARY KEY,
	form text NOT NULL,-- attribute
	form text NOT NULL,-- attribute
	OrderU integer NOT NULL, 
	OrderV integer NOT NULL, 
	_KnotsU integer, -- index into table ArrayDoubleType 
	_KnotsV integer, -- index into table ArrayDoubleType 
	CPs text NOT NULL, 
	_CPsBinary integer, -- index into table ArrayBinaryType 
	_Weights integer  -- index into table ArrayDoubleType 
) ;

DROP TABLE IF EXISTS Nurbs23;
CREATE TABLE Nurbs23 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Nurbs23Core integer, -- index into table Nurbs23CoreType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS Offset23Core;
CREATE TABLE Offset23Core (
	index  SERIAL PRIMARY KEY,
	form text NOT NULL,-- attribute
	form text NOT NULL,-- attribute
	Distance DOUBLE PRECISION NOT NULL, 
	_Surface integer  -- index into table SurfaceBaseType 
) ;

DROP TABLE IF EXISTS Offset23;
CREATE TABLE Offset23 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Offset23Core integer, -- index into table Offset23CoreType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS OneOfActionGroup;
CREATE TABLE OneOfActionGroup (
	index  SERIAL PRIMARY KEY,
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_MeasureActionGroupFunction integer, -- index into table MeasureActionGroupFunctionType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_MeasureActionGroupFunction integer, -- index into table MeasureActionGroupFunctionType 
	_Steps integer  -- index into table NumberedPlanElementsType 
) ;

DROP TABLE IF EXISTS OppositeLinesActualDetermination;
CREATE TABLE OppositeLinesActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS OppositeLinesBestFit;
CREATE TABLE OppositeLinesBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS OppositeLinesCast;
CREATE TABLE OppositeLinesCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS OppositeLinesCheckedFeature;
CREATE TABLE OppositeLinesCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS OppositeLinesChecked;
CREATE TABLE OppositeLinesChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS OppositeLinesConstructionMethod;
CREATE TABLE OppositeLinesConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Projection integer, -- index into table ArcProjectionType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_Transform integer, -- index into table ConicalSegmentTransformType 
	_FromScan integer  -- index into table CylinderFromScanType 
) ;

DROP TABLE IF EXISTS OppositeLinesCopy;
CREATE TABLE OppositeLinesCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseOppositeLines integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS OppositeLinesFeatureActual;
CREATE TABLE OppositeLinesFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_CenterLine integer, -- index into table PointAndVectorType 
	_Normal integer, -- index into table UnitVectorSimpleType 
	_Width integer, -- index into table LinearValueType 
	_WidthMin integer, -- index into table ActualLinearValueType 
	_WidthMax integer, -- index into table ActualLinearValueType 
	_Length integer, -- index into table LinearValueType 
	_LengthMin integer, -- index into table ActualLinearValueType 
	_LengthMax integer, -- index into table ActualLinearValueType 
	_TaperAngle integer, -- index into table AngularValueType 
	_EndRadius1 integer, -- index into table EndRadiusType 
	_EndRadius2 integer, -- index into table EndRadiusType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS OppositeLinesFeatureDefinition;
CREATE TABLE OppositeLinesFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	InternalExternal InternalExternalEnumType NOT NULL, 
	_Width integer, -- index into table LinearValueType 
	_Length integer, -- index into table LinearValueType 
	_EndType integer, -- index into table SlotEndType 
	_TaperAngle integer, -- index into table AngularValueType 
	SingleOpenEnd BOOLEAN, 
	_EndRadius1 integer, -- index into table EndRadiusType 
	_EndRadius2 integer  -- index into table EndRadiusType 
) ;

DROP TABLE IF EXISTS OppositeLinesFeatureItem;
CREATE TABLE OppositeLinesFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS OppositeLinesFeatureNominal;
CREATE TABLE OppositeLinesFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_CenterLine integer, -- index into table PointAndVectorType 
	Normal text NOT NULL  
) ;

DROP TABLE IF EXISTS OppositeLinesFromScan;
CREATE TABLE OppositeLinesFromScan (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_SurfaceFeature integer, -- index into table BaseFeatureType 
	_SearchRadius integer, -- index into table LinearValueType 
	_Depth integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS OppositeLinesPointSamplingStrategy;
CREATE TABLE OppositeLinesPointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum OpenCurvePointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS OppositeLinesProjection;
CREATE TABLE OppositeLinesProjection (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_ProjectionPlane integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_ProjectionOppositeLines integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS OppositeLinesRecomp;
CREATE TABLE OppositeLinesRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS OppositeLinesTransform;
CREATE TABLE OppositeLinesTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseOppositeLines integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS OppositePlanesActualDetermination;
CREATE TABLE OppositePlanesActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS OppositePlanesBestFit;
CREATE TABLE OppositePlanesBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS OppositePlanesCast;
CREATE TABLE OppositePlanesCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS OppositePlanesCheckedFeature;
CREATE TABLE OppositePlanesCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS OppositePlanesChecked;
CREATE TABLE OppositePlanesChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS OppositePlanesConstructionMethod;
CREATE TABLE OppositePlanesConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_Transform integer, -- index into table ConicalSegmentTransformType 
	_FromScan integer  -- index into table CylinderFromScanType 
) ;

DROP TABLE IF EXISTS OppositePlanesCopy;
CREATE TABLE OppositePlanesCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseOppositePlanes integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS OppositePlanesFeatureActual;
CREATE TABLE OppositePlanesFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_CenterPlane integer, -- index into table ActualPlaneType 
	_LengthVector integer, -- index into table UnitVectorType 
	_DepthVector integer, -- index into table ActualUnitVectorType 
	_Width integer, -- index into table LinearValueType 
	_WidthMin integer, -- index into table ActualLinearValueType 
	_WidthMax integer, -- index into table ActualLinearValueType 
	_Length integer, -- index into table LinearValueType 
	_LengthMin integer, -- index into table ActualLinearValueType 
	_LengthMax integer, -- index into table ActualLinearValueType 
	_Depth integer, -- index into table LinearValueType 
	_TaperAngle integer, -- index into table AngularValueType 
	_DraftAngle integer, -- index into table AngularValueType 
	_EndRadius1 integer, -- index into table EndRadiusType 
	_EndRadius2 integer, -- index into table EndRadiusType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS OppositePlanesFeatureDefinition;
CREATE TABLE OppositePlanesFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	InternalExternal InternalExternalEnumType NOT NULL, 
	_Width integer, -- index into table LinearValueType 
	_Length integer, -- index into table LinearValueType 
	_EndType integer, -- index into table SlotEndType 
	_Depth integer, -- index into table LinearValueType 
	_Bottom integer, -- index into table BottomType 
	SingleOpenEnd BOOLEAN, 
	_EndRadius1 integer, -- index into table EndRadiusType 
	_EndRadius2 integer, -- index into table EndRadiusType 
	_TaperAngle integer, -- index into table AngularValueType 
	_DraftAngle integer  -- index into table AngularValueType 
) ;

DROP TABLE IF EXISTS OppositePlanesFeatureItem;
CREATE TABLE OppositePlanesFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS OppositePlanesFeatureNominal;
CREATE TABLE OppositePlanesFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_CenterPlane integer, -- index into table ActualPlaneType 
	_PlaneXType integer, -- index into table PlaneXType 
	LengthVector text, 
	DepthVector text, 
	DraftVector text  
) ;

DROP TABLE IF EXISTS OppositePlanesFromScan;
CREATE TABLE OppositePlanesFromScan (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_SurfaceFeature integer, -- index into table BaseFeatureType 
	_SearchRadius integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS OppositePlanesPointSamplingStrategy;
CREATE TABLE OppositePlanesPointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum PlanePointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS OppositePlanesRecomp;
CREATE TABLE OppositePlanesRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS OppositePlanesTransform;
CREATE TABLE OppositePlanesTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseOppositePlanes integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS Or;
CREATE TABLE Or (
	index  SERIAL PRIMARY KEY,
	__AndType integer[], -- index into table AndType 
	__BooleanEqualType integer[], -- index into table BooleanEqualType 
	__GreaterOrEqualType integer[], -- index into table GreaterOrEqualType 
	__GreaterThanType integer[], -- index into table GreaterThanType 
	__LessOrEqualType integer[], -- index into table LessOrEqualType 
	__LessThanType integer[], -- index into table LessThanType 
	__NotType integer[], -- index into table NotType 
	__OrType integer[]  -- index into table OrType 
) ;

DROP TABLE IF EXISTS OrderedActionGroup;
CREATE TABLE OrderedActionGroup (
	index  SERIAL PRIMARY KEY,
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_MeasureActionGroupFunction integer, -- index into table MeasureActionGroupFunctionType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_MeasureActionGroupFunction integer, -- index into table MeasureActionGroupFunctionType 
	_Steps integer  -- index into table NumberedPlanElementsType 
) ;

DROP TABLE IF EXISTS Organization;
CREATE TABLE Organization (
	index  SERIAL PRIMARY KEY,
	Name text NOT NULL, 
	_Address integer  -- index into table PhysicalAddressType 
) ;

DROP TABLE IF EXISTS OrientationCharacteristicStatsEval;
CREATE TABLE OrientationCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	_BonusStats integer, -- index into table StatsLinearType 
	_ReferenceLengthStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS OrientationDiametricalZone;
CREATE TABLE OrientationDiametricalZone (
	index  SERIAL PRIMARY KEY,
	ZoneOrientationVector text  
) ;

DROP TABLE IF EXISTS OrientationPlanarZone;
CREATE TABLE OrientationPlanarZone (
	index  SERIAL PRIMARY KEY,
	ZoneOrientationVector text  
) ;

DROP TABLE IF EXISTS OrientationPlane;
CREATE TABLE OrientationPlane (
	index  SERIAL PRIMARY KEY,
	OrientationPlaneEnum ModifyingPlaneEnumType NOT NULL, 
	_DatumDefinitionId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS OrientationZoneShape;
CREATE TABLE OrientationZoneShape (
	index  SERIAL PRIMARY KEY,
	_DiametricalZone integer, -- index into table OrientationDiametricalZoneType 
	_PlanarZone integer  -- index into table OrientationPlanarZoneType 
) ;

DROP TABLE IF EXISTS OrientedLatitudeLongitudeSweep;
CREATE TABLE OrientedLatitudeLongitudeSweep (
	index  SERIAL PRIMARY KEY,
	DirMeridianPrime text NOT NULL, 
	_DomainLatitude integer, -- index into table AngleRangeType 
	_DomainLongitude integer, -- index into table AngleRangeType 
	DirMeridianPrime text NOT NULL, 
	_DomainLatitude integer, -- index into table AngleRangeType 
	_DomainLongitude integer, -- index into table AngleRangeType 
	DirNorthPole text NOT NULL  
) ;

DROP TABLE IF EXISTS OriginReference;
CREATE TABLE OriginReference (
	index  SERIAL PRIMARY KEY,
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	ReferencedComponent ReferencedComponentEnumType NOT NULL, 
	_DatumDefinitionId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS OtherMeasureFeatureMethod;
CREATE TABLE OtherMeasureFeatureMethod (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_ChosenResourceIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_ChosenResourceIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_ChosenResourceIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS OtherUnits;
CREATE TABLE OtherUnits (
	index  SERIAL PRIMARY KEY,
	__AreaUnit integer[], -- index into table AreaUnitType 
	__AngularUnit integer[], -- index into table AngularUnitType 
	__ForceUnit integer[], -- index into table ForceUnitType 
	__LinearUnit integer[], -- index into table LinearUnitType 
	__MassUnit integer[], -- index into table MassUnitType 
	__PressureUnit integer[], -- index into table PressureUnitType 
	__SpeedUnit integer[], -- index into table SpeedUnitType 
	__TemperatureUnit integer[], -- index into table TemperatureUnitType 
	__TimeUnit integer[]  -- index into table TimeUnitType 
) ;

DROP TABLE IF EXISTS PMIDisplaySet;
CREATE TABLE PMIDisplaySet (
	index  SERIAL PRIMARY KEY,
	__PMIDisplay integer[]  -- index into table PMIDisplayType 
) ;

DROP TABLE IF EXISTS PMIDisplay;
CREATE TABLE PMIDisplay (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	Color integer[], 
	_Plane integer, -- index into table PlaneType 
	_Texts integer, -- index into table TextsType 
	__Leader integer[], -- index into table LeaderType 
	__LeaderCircularType integer[], -- index into table LeaderCircularType 
	__LeaderDoubleHeadCircularType integer[], -- index into table LeaderDoubleHeadCircularType 
	__LeaderDoubleHeadExtendType integer[], -- index into table LeaderDoubleHeadExtendType 
	__LeaderDoubleHeadType integer[], -- index into table LeaderDoubleHeadType 
	__LeaderExtendType integer[], -- index into table LeaderExtendType 
	_WitnessLines integer, -- index into table WitnessLinesType 
	_Frames integer, -- index into table FramesType 
	_Balloon integer, -- index into table BalloonType 
	_Reference integer  -- index into table ElementReferenceFullType 
) ;

DROP TABLE IF EXISTS ParallelismCharacteristicActual;
CREATE TABLE ParallelismCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	DatumsOk BOOLEAN, 
	_Bonus integer, -- index into table ActualLinearValueType 
	_ReferenceLength integer, -- index into table LinearValueType 
	_DRFTransformActualId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	DatumsOk BOOLEAN, 
	_Bonus integer, -- index into table ActualLinearValueType 
	_ReferenceLength integer, -- index into table LinearValueType 
	_DRFTransformActualId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS ParallelismCharacteristicDefinition;
CREATE TABLE ParallelismCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	MaterialCondition MaterialModifierEnumType NOT NULL, 
	_ZoneShape integer, -- index into table PositionZoneShapeType 
	TangentPlane BOOLEAN, 
	_MaximumToleranceValue integer, -- index into table LinearValueType 
	_ProjectedToleranceZoneValue integer, -- index into table LinearValueType 
	EachRadialElement BOOLEAN, 
	EachElement BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	MaterialCondition MaterialModifierEnumType NOT NULL, 
	_ZoneShape integer, -- index into table PositionZoneShapeType 
	TangentPlane BOOLEAN, 
	_MaximumToleranceValue integer, -- index into table LinearValueType 
	_ProjectedToleranceZoneValue integer, -- index into table LinearValueType 
	EachRadialElement BOOLEAN, 
	EachElement BOOLEAN  
) ;

DROP TABLE IF EXISTS ParallelismCharacteristicItem;
CREATE TABLE ParallelismCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS ParallelismCharacteristicNominal;
CREATE TABLE ParallelismCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_CircularZoneLimit integer, -- index into table CharacteristicCircularZoneLimitType 
	_DirectionalZoneLimit integer, -- index into table CharacteristicDirectionalZoneLimitType 
	_RectangularZoneLimit integer, -- index into table CharacteristicRectangularZoneLimitType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_CircularZoneLimit integer, -- index into table CharacteristicCircularZoneLimitType 
	_DirectionalZoneLimit integer, -- index into table CharacteristicDirectionalZoneLimitType 
	_RectangularZoneLimit integer  -- index into table CharacteristicRectangularZoneLimitType 
) ;

DROP TABLE IF EXISTS ParallelismCharacteristicStatsEval;
CREATE TABLE ParallelismCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	_BonusStats integer, -- index into table StatsLinearType 
	_ReferenceLengthStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	_BonusStats integer, -- index into table StatsLinearType 
	_ReferenceLengthStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS PartFamily;
CREATE TABLE PartFamily (
	index  SERIAL PRIMARY KEY,
	_PrimaryShapeClass integer, -- index into table ShapeClassType 
	_MinimumTolerance integer, -- index into table LinearValueType 
	_MinimumBoundingBox integer, -- index into table BoundingBoxType 
	_PrimaryManufacturingMethod integer  -- index into table ManufacturingMethodType 
) ;

DROP TABLE IF EXISTS PartNoteSet;
CREATE TABLE PartNoteSet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__PartNote integer[]  -- index into table PartNoteType 
) ;

DROP TABLE IF EXISTS PartNote;
CREATE TABLE PartNote (
	index  SERIAL PRIMARY KEY,
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Text text, 
	_PartNoteIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS PartSet;
CREATE TABLE PartSet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__Part integer[]  -- index into table ElementReferenceType 
) ;

DROP TABLE IF EXISTS Part;
CREATE TABLE Part (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	QPId text, 
	ModelNumber text, 
	Description text, 
	Version text, 
	Material text, 
	_SecurityClassification integer, -- index into table SecurityClassificationType 
	ExportControlClassification text, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalIds integer, -- index into table ArrayReferenceFullType 
	_NoteIds integer, -- index into table ArrayReferenceFullType 
	_PartNoteIds integer, -- index into table ArrayReferenceFullType 
	_DatumDefinitionIds integer, -- index into table ArrayReferenceFullType 
	_DatumTargetDefinitionIds integer, -- index into table ArrayReferenceFullType 
	_DatumReferenceFrameIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	QPId text, 
	ModelNumber text, 
	Description text, 
	Version text, 
	Material text, 
	_SecurityClassification integer, -- index into table SecurityClassificationType 
	ExportControlClassification text, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalIds integer, -- index into table ArrayReferenceFullType 
	_NoteIds integer, -- index into table ArrayReferenceFullType 
	_PartNoteIds integer, -- index into table ArrayReferenceFullType 
	_DatumDefinitionIds integer, -- index into table ArrayReferenceFullType 
	_DatumTargetDefinitionIds integer, -- index into table ArrayReferenceFullType 
	_DatumReferenceFrameIds integer, -- index into table ArrayReferenceFullType 
	_DefinitionInternal integer, -- index into table InternalPartAssemblyType 
	_DefinitionExternal integer, -- index into table DefinitionExternalType 
	_PartFamily integer  -- index into table PartFamilyType 
) ;

DROP TABLE IF EXISTS PartialInspection;
CREATE TABLE PartialInspection (
	index  SERIAL PRIMARY KEY,
	BaselineProductNumber text NOT NULL, 
	BaselineProductVersion text, 
	ReasonForPartialInspection text NOT NULL  
) ;

DROP TABLE IF EXISTS PartiallyOrderedActionGroup;
CREATE TABLE PartiallyOrderedActionGroup (
	index  SERIAL PRIMARY KEY,
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_MeasureActionGroupFunction integer, -- index into table MeasureActionGroupFunctionType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_MeasureActionGroupFunction integer, -- index into table MeasureActionGroupFunctionType 
	_StepsWithPredecessors integer  -- index into table StepsWithPredecessorsType 
) ;

DROP TABLE IF EXISTS PathTriangulationCore;
CREATE TABLE PathTriangulationCore (
	index  SERIAL PRIMARY KEY,
	_Edges integer, -- index into table ArrayI2Type 
	_EdgesBinary integer  -- index into table ArrayBinaryType 
) ;

DROP TABLE IF EXISTS PathTriangulation;
CREATE TABLE PathTriangulation (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PathTriangulationCore integer, -- index into table PathTriangulationCoreType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_MeshTriangle integer  -- index into table ElementReferenceType 
) ;

DROP TABLE IF EXISTS PatternFeatureActual;
CREATE TABLE PatternFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS PatternFeatureDefinition;
CREATE TABLE PatternFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer  -- index into table AttributesType 
) ;

DROP TABLE IF EXISTS PatternFeatureItem;
CREATE TABLE PatternFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS PatternFeatureNominal;
CREATE TABLE PatternFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_FeatureNominalIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS PerpendicularityCharacteristicActual;
CREATE TABLE PerpendicularityCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	DatumsOk BOOLEAN, 
	_Bonus integer, -- index into table ActualLinearValueType 
	_ReferenceLength integer, -- index into table LinearValueType 
	_DRFTransformActualId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	DatumsOk BOOLEAN, 
	_Bonus integer, -- index into table ActualLinearValueType 
	_ReferenceLength integer, -- index into table LinearValueType 
	_DRFTransformActualId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS PerpendicularityCharacteristicDefinition;
CREATE TABLE PerpendicularityCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	MaterialCondition MaterialModifierEnumType NOT NULL, 
	_ZoneShape integer, -- index into table PositionZoneShapeType 
	TangentPlane BOOLEAN, 
	_MaximumToleranceValue integer, -- index into table LinearValueType 
	_ProjectedToleranceZoneValue integer, -- index into table LinearValueType 
	EachRadialElement BOOLEAN, 
	EachElement BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	MaterialCondition MaterialModifierEnumType NOT NULL, 
	_ZoneShape integer, -- index into table PositionZoneShapeType 
	TangentPlane BOOLEAN, 
	_MaximumToleranceValue integer, -- index into table LinearValueType 
	_ProjectedToleranceZoneValue integer, -- index into table LinearValueType 
	EachRadialElement BOOLEAN, 
	EachElement BOOLEAN  
) ;

DROP TABLE IF EXISTS PerpendicularityCharacteristicItem;
CREATE TABLE PerpendicularityCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS PerpendicularityCharacteristicNominal;
CREATE TABLE PerpendicularityCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_CircularZoneLimit integer, -- index into table CharacteristicCircularZoneLimitType 
	_DirectionalZoneLimit integer, -- index into table CharacteristicDirectionalZoneLimitType 
	_RectangularZoneLimit integer, -- index into table CharacteristicRectangularZoneLimitType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_CircularZoneLimit integer, -- index into table CharacteristicCircularZoneLimitType 
	_DirectionalZoneLimit integer, -- index into table CharacteristicDirectionalZoneLimitType 
	_RectangularZoneLimit integer  -- index into table CharacteristicRectangularZoneLimitType 
) ;

DROP TABLE IF EXISTS PerpendicularityCharacteristicStatsEval;
CREATE TABLE PerpendicularityCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	_BonusStats integer, -- index into table StatsLinearType 
	_ReferenceLengthStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	_BonusStats integer, -- index into table StatsLinearType 
	_ReferenceLengthStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS PhysicalAddress;
CREATE TABLE PhysicalAddress (
	index  SERIAL PRIMARY KEY,
	_Description integer, -- index into table string 
	InternalLocation text, 
	StreetNumber text, 
	Street text, 
	PostalBox text, 
	Town text, 
	Region text, 
	PostalCode text, 
	Country text, 
	FacsimileNumber text, 
	TelephoneNumber text, 
	ElectronicMailAddress text, 
	TelexNumber text  
) ;

DROP TABLE IF EXISTS PhysicalModel;
CREATE TABLE PhysicalModel (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	Name text NOT NULL, 
	Version text, 
	Description text, 
	_Author integer, -- index into table AuthorType 
	Location text, 
	ModelNumber text  
) ;

DROP TABLE IF EXISTS PickSomeActionGroup;
CREATE TABLE PickSomeActionGroup (
	index  SERIAL PRIMARY KEY,
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_MeasureActionGroupFunction integer, -- index into table MeasureActionGroupFunctionType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_MeasureActionGroupFunction integer, -- index into table MeasureActionGroupFunctionType 
	_Steps integer, -- index into table NumberedPlanElementsType 
	NumberOfSteps integer NOT NULL  
) ;

DROP TABLE IF EXISTS Plane23Core;
CREATE TABLE Plane23Core (
	index  SERIAL PRIMARY KEY,
	domainU text,-- attribute
	domainV text,-- attribute
	form text NOT NULL,-- attribute
	form text NOT NULL,-- attribute
	Origin FLOAT[3] NOT NULL, 
	DirU FLOAT[3] NOT NULL, 
	DirV FLOAT[3] NOT NULL  
) ;

DROP TABLE IF EXISTS Plane23;
CREATE TABLE Plane23 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Plane23Core integer, -- index into table Plane23CoreType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS PlaneActualDetermination;
CREATE TABLE PlaneActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS PlaneBestFit;
CREATE TABLE PlaneBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS PlaneCast;
CREATE TABLE PlaneCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS PlaneCheckedFeature;
CREATE TABLE PlaneCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS PlaneChecked;
CREATE TABLE PlaneChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS PlaneClipping;
CREATE TABLE PlaneClipping (
	index  SERIAL PRIMARY KEY,
	index text,-- attribute
	enable text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Plane integer, -- index into table PlaneType 
	_PlaneXType integer, -- index into table PlaneXType 
	_Attributes integer, -- index into table AttributesType 
	_Plane integer, -- index into table PlaneType 
	_PlaneXType integer  -- index into table PlaneXType 
) ;

DROP TABLE IF EXISTS PlaneConstructionMethod;
CREATE TABLE PlaneConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Midplane integer, -- index into table PlaneMidplaneType 
	_Offset integer, -- index into table PlaneOffsetType 
	_Perpendicular integer, -- index into table PlanePerpendicularType 
	_Parallel integer, -- index into table PlaneParallelType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_TangentThrough integer, -- index into table PlaneTangentThroughType 
	_Transform integer, -- index into table ConicalSegmentTransformType 
	_Extract integer  -- index into table PlaneExtractType 
) ;

DROP TABLE IF EXISTS PlaneCopy;
CREATE TABLE PlaneCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BasePlane integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS PlaneExtract;
CREATE TABLE PlaneExtract (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_SurfaceFeature integer  -- index into table BaseFeatureType 
) ;

DROP TABLE IF EXISTS PlaneFeatureActual;
CREATE TABLE PlaneFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Normal integer, -- index into table UnitVectorSimpleType 
	_PolyLine integer, -- index into table PolyLineType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS PlaneFeatureDefinition;
CREATE TABLE PlaneFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer  -- index into table AttributesType 
) ;

DROP TABLE IF EXISTS PlaneFeatureItem;
CREATE TABLE PlaneFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS PlaneFeatureNominal;
CREATE TABLE PlaneFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_ActualPointType integer, -- index into table ActualPointType 
	_Location integer, -- index into table LocationType 
	Normal text NOT NULL, 
	_PolyLine integer  -- index into table PolyLineType 
) ;

DROP TABLE IF EXISTS PlaneMidplane;
CREATE TABLE PlaneMidplane (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BasePlane integer[]  -- index into table BaseFeatureType 
) ;

DROP TABLE IF EXISTS PlaneOffset;
CREATE TABLE PlaneOffset (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BasePlane integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Offset integer  -- index into table PlaneOffsetType 
) ;

DROP TABLE IF EXISTS PlaneParallel;
CREATE TABLE PlaneParallel (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_ParallelFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_PointFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS PlanePerpendicular;
CREATE TABLE PlanePerpendicular (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_PerpendicularFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_PointFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS PlanePointSamplingStrategy;
CREATE TABLE PlanePointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum PlanePointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS PlaneRecomp;
CREATE TABLE PlaneRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS PlaneReference;
CREATE TABLE PlaneReference (
	index  SERIAL PRIMARY KEY,
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Plane integer, -- index into table PlaneType 
	_PlaneXType integer, -- index into table PlaneXType 
	_Attributes integer, -- index into table AttributesType 
	_Plane integer, -- index into table PlaneType 
	_PlaneXType integer  -- index into table PlaneXType 
) ;

DROP TABLE IF EXISTS PlaneTangentThrough;
CREATE TABLE PlaneTangentThrough (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_TangentFeature integer, -- index into table BaseFeatureType 
	_PointFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS PlaneTransform;
CREATE TABLE PlaneTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BasePlane integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS Plane;
CREATE TABLE Plane (
	index  SERIAL PRIMARY KEY,
	_ActualPointType integer, -- index into table ActualPointType 
	_Point integer, -- index into table ElementReferenceType 
	Normal text NOT NULL  
) ;

DROP TABLE IF EXISTS PlaneX;
CREATE TABLE PlaneX (
	index  SERIAL PRIMARY KEY,
	_ActualPointType integer, -- index into table ActualPointType 
	_Point integer, -- index into table ElementReferenceType 
	Normal text NOT NULL, 
	_ActualPointType integer, -- index into table ActualPointType 
	_Point integer, -- index into table ElementReferenceType 
	Normal text NOT NULL, 
	Direction text NOT NULL  
) ;

DROP TABLE IF EXISTS Plus;
CREATE TABLE Plus (
	index  SERIAL PRIMARY KEY,
	__ArithmeticCharacteristicParameterType integer[], -- index into table ArithmeticCharacteristicParameterType 
	__ArithmeticFeatureParameterType integer[], -- index into table ArithmeticFeatureParameterType 
	__DividedByType integer[], -- index into table DividedByType 
	__MinusType integer[], -- index into table MinusType 
	__NegateType integer[], -- index into table NegateType 
	__PlusType integer[], -- index into table PlusType 
	__TimesType integer[], -- index into table TimesType 
	__ArithmeticCharacteristicParameterType integer[], -- index into table ArithmeticCharacteristicParameterType 
	__ArithmeticFeatureParameterType integer[], -- index into table ArithmeticFeatureParameterType 
	__DividedByType integer[], -- index into table DividedByType 
	__MinusType integer[], -- index into table MinusType 
	__NegateType integer[], -- index into table NegateType 
	__PlusType integer[], -- index into table PlusType 
	__TimesType integer[]  -- index into table TimesType 
) ;

DROP TABLE IF EXISTS PointAccuracyTest;
CREATE TABLE PointAccuracyTest (
	index  SERIAL PRIMARY KEY,
	_Accuracy integer  -- index into table NumericalLengthAccuracyType 
) ;

DROP TABLE IF EXISTS PointActualDetermination;
CREATE TABLE PointActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS PointAndVector;
CREATE TABLE PointAndVector (
	index  SERIAL PRIMARY KEY,
	_ActualPointType integer, -- index into table ActualPointType 
	_StartPoint integer, -- index into table PointSimpleType 
	Vector text NOT NULL  
) ;

DROP TABLE IF EXISTS PointCheckedFeature;
CREATE TABLE PointCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS PointChecked;
CREATE TABLE PointChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS PointCloudSet;
CREATE TABLE PointCloudSet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__PointCloud integer[]  -- index into table PointCloudType 
) ;

DROP TABLE IF EXISTS PointCloud;
CREATE TABLE PointCloud (
	index  SERIAL PRIMARY KEY,
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Points text NOT NULL, 
	_PointsBinary integer, -- index into table ArrayBinaryType 
	_Normals integer, -- index into table ArrayUnitVectorType 
	_NormalsBinary integer, -- index into table ArrayBinaryType 
	_PointsVisible integer, -- index into table ArrayIntType 
	_PointsVisibleBinary integer, -- index into table ArrayBinaryType 
	_PointsHidden integer, -- index into table ArrayIntType 
	_PointsHiddenBinary integer, -- index into table ArrayBinaryType 
	_PointsColor integer, -- index into table ArrayUnsignedByteType 
	_PointsColorBinary integer  -- index into table ArrayBinaryType 
) ;

DROP TABLE IF EXISTS PointConstructionMethod;
CREATE TABLE PointConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_Intersection integer, -- index into table PointFeatureIntersectionType 
	_Projection integer, -- index into table ArcProjectionType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_Transform integer, -- index into table ConicalSegmentTransformType 
	_FromCone integer, -- index into table PointFeatureFromConeType 
	_FromScan integer, -- index into table CylinderFromScanType 
	_CenterOfGravity integer, -- index into table PointFeatureCenterOfGravityType 
	_Pierce integer, -- index into table PointFeaturePierceType 
	_MidPoint integer, -- index into table PointFeatureMidPointType 
	_MovePoint integer, -- index into table PointFeatureMovePointType 
	_MovePointVector integer, -- index into table PointFeatureMovePointVectorType 
	_MovePointAxis integer, -- index into table PointFeatureMovePointAxisType 
	_Extreme integer  -- index into table PointFeatureExtremeType 
) ;

DROP TABLE IF EXISTS PointDefinedCurveActualDetermination;
CREATE TABLE PointDefinedCurveActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS PointDefinedCurveBestFit;
CREATE TABLE PointDefinedCurveBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS PointDefinedCurveCheckedFeature;
CREATE TABLE PointDefinedCurveCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS PointDefinedCurveChecked;
CREATE TABLE PointDefinedCurveChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS PointDefinedCurveConstructionMethod;
CREATE TABLE PointDefinedCurveConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Transform integer, -- index into table ConicalSegmentTransformType 
	_FromScan integer, -- index into table CylinderFromScanType 
	_Extract integer  -- index into table PlaneExtractType 
) ;

DROP TABLE IF EXISTS PointDefinedCurveCopy;
CREATE TABLE PointDefinedCurveCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BasePointDefinedCurve integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS PointDefinedCurveExtract;
CREATE TABLE PointDefinedCurveExtract (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_CurveFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS PointDefinedCurveFeatureActual;
CREATE TABLE PointDefinedCurveFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_DefiningPoints integer, -- index into table TargetPointsNominalType 
	_Plane integer, -- index into table PlaneType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS PointDefinedCurveFeatureDefinition;
CREATE TABLE PointDefinedCurveFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer  -- index into table AttributesType 
) ;

DROP TABLE IF EXISTS PointDefinedCurveFeatureItem;
CREATE TABLE PointDefinedCurveFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS PointDefinedCurveFeatureNominal;
CREATE TABLE PointDefinedCurveFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_DefiningPoints integer, -- index into table TargetPointsNominalType 
	_Plane integer, -- index into table PlaneType 
	_PlaneXType integer  -- index into table PlaneXType 
) ;

DROP TABLE IF EXISTS PointDefinedCurveFromScan;
CREATE TABLE PointDefinedCurveFromScan (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_SurfaceFeature integer, -- index into table BaseFeatureType 
	_SearchRadius integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS PointDefinedCurvePointSamplingStrategy;
CREATE TABLE PointDefinedCurvePointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum PointDefinedPointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS PointDefinedCurveRecomp;
CREATE TABLE PointDefinedCurveRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS PointDefinedCurveTransform;
CREATE TABLE PointDefinedCurveTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BasePointDefinedCurve integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS PointDefinedSurfaceActualDetermination;
CREATE TABLE PointDefinedSurfaceActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS PointDefinedSurfaceBestFit;
CREATE TABLE PointDefinedSurfaceBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS PointDefinedSurfaceCheckedFeature;
CREATE TABLE PointDefinedSurfaceCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS PointDefinedSurfaceChecked;
CREATE TABLE PointDefinedSurfaceChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS PointDefinedSurfaceConstructionMethod;
CREATE TABLE PointDefinedSurfaceConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Transform integer, -- index into table ConicalSegmentTransformType 
	_Extract integer  -- index into table PlaneExtractType 
) ;

DROP TABLE IF EXISTS PointDefinedSurfaceCopy;
CREATE TABLE PointDefinedSurfaceCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BasePointDefinedSurface integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS PointDefinedSurfaceExtract;
CREATE TABLE PointDefinedSurfaceExtract (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_SurfaceFeature integer  -- index into table BaseFeatureType 
) ;

DROP TABLE IF EXISTS PointDefinedSurfaceFeatureActual;
CREATE TABLE PointDefinedSurfaceFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_DefiningPoints integer, -- index into table TargetPointsNominalType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS PointDefinedSurfaceFeatureDefinition;
CREATE TABLE PointDefinedSurfaceFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer  -- index into table AttributesType 
) ;

DROP TABLE IF EXISTS PointDefinedSurfaceFeatureItem;
CREATE TABLE PointDefinedSurfaceFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS PointDefinedSurfaceFeatureNominal;
CREATE TABLE PointDefinedSurfaceFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_DefiningPoints integer  -- index into table TargetPointsNominalType 
) ;

DROP TABLE IF EXISTS PointDefinedSurfacePointSamplingStrategy;
CREATE TABLE PointDefinedSurfacePointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum PointDefinedPointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS PointDefinedSurfaceRecomp;
CREATE TABLE PointDefinedSurfaceRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS PointDefinedSurfaceTransform;
CREATE TABLE PointDefinedSurfaceTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BasePointDefinedSurface integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS PointDeviationStatsEval;
CREATE TABLE PointDeviationStatsEval (
	index  SERIAL PRIMARY KEY,
	_MeasurePointActualIds integer, -- index into table StatsArrayIdType 
	_DeviationStats integer  -- index into table StatsWithTolLinearType 
) ;

DROP TABLE IF EXISTS PointDeviation;
CREATE TABLE PointDeviation (
	index  SERIAL PRIMARY KEY,
	_MeasurePointActualId integer, -- index into table QIFReferenceFullType 
	_Deviation integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS PointDeviationsStatsEval;
CREATE TABLE PointDeviationsStatsEval (
	index  SERIAL PRIMARY KEY,
	__PointDeviationStats integer[]  -- index into table PointDeviationStatsEvalType 
) ;

DROP TABLE IF EXISTS PointDeviations;
CREATE TABLE PointDeviations (
	index  SERIAL PRIMARY KEY,
	__PointDeviation integer[]  -- index into table PointDeviationType 
) ;

DROP TABLE IF EXISTS PointEntity;
CREATE TABLE PointEntity (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	XYZ FLOAT[3] NOT NULL  
) ;

DROP TABLE IF EXISTS PointFeatureActual;
CREATE TABLE PointFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Normal integer  -- index into table UnitVectorSimpleType 
) ;

DROP TABLE IF EXISTS PointFeatureCast;
CREATE TABLE PointFeatureCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS PointFeatureCenterOfGravity;
CREATE TABLE PointFeatureCenterOfGravity (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS PointFeatureCopy;
CREATE TABLE PointFeatureCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BasePointFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS PointFeatureDefinition;
CREATE TABLE PointFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer  -- index into table AttributesType 
) ;

DROP TABLE IF EXISTS PointFeatureExtreme;
CREATE TABLE PointFeatureExtreme (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	Minimum BOOLEAN NOT NULL, 
	_BaseAxisFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	Vector text NOT NULL, 
	Radial text NOT NULL, 
	Xaxis text NOT NULL, 
	Yaxis text NOT NULL, 
	Zaxis text NOT NULL  
) ;

DROP TABLE IF EXISTS PointFeatureFromCone;
CREATE TABLE PointFeatureFromCone (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseCone integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS PointFeatureFromScan;
CREATE TABLE PointFeatureFromScan (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_SurfaceFeature integer, -- index into table BaseFeatureType 
	_SearchRadius integer, -- index into table LinearValueType 
	RetrievalMethod RetrievalMethodEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS PointFeatureIntersection;
CREATE TABLE PointFeatureIntersection (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__IntersectionFeature integer[]  -- index into table BaseFeatureType 
) ;

DROP TABLE IF EXISTS PointFeatureItem;
CREATE TABLE PointFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer  -- index into table ToroidalSegmentActualDeterminationType 
) ;

DROP TABLE IF EXISTS PointFeatureMidPoint;
CREATE TABLE PointFeatureMidPoint (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS PointFeatureMovePointAxis;
CREATE TABLE PointFeatureMovePointAxis (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseLocationFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Distance integer, -- index into table LinearValueType 
	_BaseAxisFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS PointFeatureMovePoint;
CREATE TABLE PointFeatureMovePoint (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Offset integer, -- index into table PlaneOffsetType 
	_DirectionalOffset integer  -- index into table DirectionalOffsetType 
) ;

DROP TABLE IF EXISTS PointFeatureMovePointVector;
CREATE TABLE PointFeatureMovePointVector (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Distance integer, -- index into table LinearValueType 
	Vector text NOT NULL  
) ;

DROP TABLE IF EXISTS PointFeatureNominal;
CREATE TABLE PointFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_ActualPointType integer, -- index into table ActualPointType 
	_Location integer, -- index into table LocationType 
	Normal text  
) ;

DROP TABLE IF EXISTS PointFeaturePierce;
CREATE TABLE PointFeaturePierce (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_SurfaceFeature integer, -- index into table BaseFeatureType 
	_CurveFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS PointFeatureProjection;
CREATE TABLE PointFeatureProjection (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_ProjectionPlane integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_ProjectionFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS PointFeatureTransform;
CREATE TABLE PointFeatureTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BasePointFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS PointIndex;
CREATE TABLE PointIndex (
	index  SERIAL PRIMARY KEY,
	Single integer NOT NULL, 
	_Range integer, -- index into table ActualDecimalType 
	All text NOT NULL  
) ;

DROP TABLE IF EXISTS PointListActual;
CREATE TABLE PointListActual (
	index  SERIAL PRIMARY KEY,
	linearUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	validity text NOT NULL,-- attribute
	xDecimalPlaces text NOT NULL,-- attribute
	xSignificantFigures text NOT NULL,-- attribute
	xValidity text NOT NULL,-- attribute
	yDecimalPlaces text NOT NULL,-- attribute
	ySignificantFigures text NOT NULL,-- attribute
	yValidity text NOT NULL,-- attribute
	zDecimalPlaces text NOT NULL,-- attribute
	zSignificantFigures text NOT NULL,-- attribute
	zValidity text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	xCombinedUncertainty text NOT NULL,-- attribute
	xMeanError text NOT NULL,-- attribute
	yCombinedUncertainty text NOT NULL,-- attribute
	yMeanError text NOT NULL,-- attribute
	zCombinedUncertainty text NOT NULL,-- attribute
	zMeanError text NOT NULL,-- attribute
	__MeasurePoint integer[]  -- index into table MeasurePointNominalType 
) ;

DROP TABLE IF EXISTS PointListNominal;
CREATE TABLE PointListNominal (
	index  SERIAL PRIMARY KEY,
	linearUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	validity text NOT NULL,-- attribute
	xDecimalPlaces text NOT NULL,-- attribute
	xSignificantFigures text NOT NULL,-- attribute
	xValidity text NOT NULL,-- attribute
	yDecimalPlaces text NOT NULL,-- attribute
	ySignificantFigures text NOT NULL,-- attribute
	yValidity text NOT NULL,-- attribute
	zDecimalPlaces text NOT NULL,-- attribute
	zSignificantFigures text NOT NULL,-- attribute
	zValidity text NOT NULL,-- attribute
	__MeasurePoint integer[]  -- index into table MeasurePointNominalType 
) ;

DROP TABLE IF EXISTS PointPointSamplingStrategy;
CREATE TABLE PointPointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum PointPointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS PointProfileCharacteristicActual;
CREATE TABLE PointProfileCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_WorstPositiveDeviation integer, -- index into table LinearValueType 
	_WorstNegativeDeviation integer, -- index into table LinearValueType 
	_PointDeviations integer, -- index into table PointDeviationsType 
	DatumsOk BOOLEAN, 
	_DRFTransformActualId integer, -- index into table QIFReferenceFullType 
	_SecondCompositeSegmentProfileActual integer, -- index into table CompositeSegmentProfileActualType 
	_ThirdCompositeSegmentProfileActual integer, -- index into table CompositeSegmentProfileActualType 
	_FourthCompositeSegmentProfileActual integer, -- index into table CompositeSegmentProfileActualType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_WorstPositiveDeviation integer, -- index into table LinearValueType 
	_WorstNegativeDeviation integer, -- index into table LinearValueType 
	_PointDeviations integer, -- index into table PointDeviationsType 
	DatumsOk BOOLEAN, 
	_DRFTransformActualId integer, -- index into table QIFReferenceFullType 
	_SecondCompositeSegmentProfileActual integer, -- index into table CompositeSegmentProfileActualType 
	_ThirdCompositeSegmentProfileActual integer, -- index into table CompositeSegmentProfileActualType 
	_FourthCompositeSegmentProfileActual integer  -- index into table CompositeSegmentProfileActualType 
) ;

DROP TABLE IF EXISTS PointProfileCharacteristicDefinition;
CREATE TABLE PointProfileCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_OuterDisposition integer, -- index into table LinearValueType 
	_UnequallyDisposedZone integer, -- index into table LinearValueType 
	OffsetZone BOOLEAN, 
	_SecondCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_ThirdCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_FourthCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	OrientationOnly BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_OuterDisposition integer, -- index into table LinearValueType 
	_UnequallyDisposedZone integer, -- index into table LinearValueType 
	OffsetZone BOOLEAN, 
	_SecondCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_ThirdCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_FourthCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	OrientationOnly BOOLEAN  
) ;

DROP TABLE IF EXISTS PointProfileCharacteristicItem;
CREATE TABLE PointProfileCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS PointProfileCharacteristicNominal;
CREATE TABLE PointProfileCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS PointProfileCharacteristicStatsEval;
CREATE TABLE PointProfileCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_WorstPositiveDeviationStats integer, -- index into table StatsLinearType 
	_WorstNegativeDeviationStats integer, -- index into table StatsLinearType 
	_PointDeviationsStats integer, -- index into table PointDeviationsStatsEvalType 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	_CompositeSegmentsStats integer, -- index into table CompositeSegmentsProfileStatsEvalType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_WorstPositiveDeviationStats integer, -- index into table StatsLinearType 
	_WorstNegativeDeviationStats integer, -- index into table StatsLinearType 
	_PointDeviationsStats integer, -- index into table PointDeviationsStatsEvalType 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	_CompositeSegmentsStats integer  -- index into table CompositeSegmentsProfileStatsEvalType 
) ;

DROP TABLE IF EXISTS PointRange;
CREATE TABLE PointRange (
	index  SERIAL PRIMARY KEY,
	Start integer NOT NULL, 
	Stop integer NOT NULL  
) ;

DROP TABLE IF EXISTS PointSet;
CREATE TABLE PointSet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__Point integer[]  -- index into table ElementReferenceType 
) ;

DROP TABLE IF EXISTS Point;
CREATE TABLE Point (
	index  SERIAL PRIMARY KEY,
	linearUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	validity text NOT NULL,-- attribute
	xDecimalPlaces text NOT NULL,-- attribute
	xSignificantFigures text NOT NULL,-- attribute
	xValidity text NOT NULL,-- attribute
	yDecimalPlaces text NOT NULL,-- attribute
	ySignificantFigures text NOT NULL,-- attribute
	yValidity text NOT NULL,-- attribute
	zDecimalPlaces text NOT NULL,-- attribute
	zSignificantFigures text NOT NULL,-- attribute
	zValidity text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS PointWithName;
CREATE TABLE PointWithName (
	index  SERIAL PRIMARY KEY,
	_ActualPointType integer, -- index into table ActualPointType 
	_Point integer, -- index into table ElementReferenceType 
	Name text  
) ;

DROP TABLE IF EXISTS PolyLine;
CREATE TABLE PolyLine (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	linearUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	validity text NOT NULL,-- attribute
	xDecimalPlaces text NOT NULL,-- attribute
	xSignificantFigures text NOT NULL,-- attribute
	xValidity text NOT NULL,-- attribute
	yDecimalPlaces text NOT NULL,-- attribute
	ySignificantFigures text NOT NULL,-- attribute
	yValidity text NOT NULL,-- attribute
	zDecimalPlaces text NOT NULL,-- attribute
	zSignificantFigures text NOT NULL,-- attribute
	zValidity text NOT NULL,-- attribute
	N text,-- attribute
	linearUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	validity text NOT NULL,-- attribute
	xDecimalPlaces text NOT NULL,-- attribute
	xSignificantFigures text NOT NULL,-- attribute
	xValidity text NOT NULL,-- attribute
	yDecimalPlaces text NOT NULL,-- attribute
	ySignificantFigures text NOT NULL,-- attribute
	yValidity text NOT NULL,-- attribute
	zDecimalPlaces text NOT NULL,-- attribute
	zSignificantFigures text NOT NULL,-- attribute
	zValidity text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS Polyline12Core;
CREATE TABLE Polyline12Core (
	index  SERIAL PRIMARY KEY,
	domain text,-- attribute
	domain text,-- attribute
	_Points integer, -- index into table ArrayPoint2dType 
	_PointsBinary integer  -- index into table ArrayBinaryType 
) ;

DROP TABLE IF EXISTS Polyline12;
CREATE TABLE Polyline12 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Polyline12Core integer  -- index into table Polyline12CoreType 
) ;

DROP TABLE IF EXISTS Polyline13Core;
CREATE TABLE Polyline13Core (
	index  SERIAL PRIMARY KEY,
	domain text,-- attribute
	domain text,-- attribute
	Points text NOT NULL, 
	_PointsBinary integer  -- index into table ArrayBinaryType 
) ;

DROP TABLE IF EXISTS Polyline13;
CREATE TABLE Polyline13 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Polyline13Core integer, -- index into table Polyline13CoreType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS PositionCharacteristicActual;
CREATE TABLE PositionCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	__ZoneData integer[], -- index into table ZoneDataType 
	DatumsOk BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	__ZoneData integer[], -- index into table ZoneDataType 
	DatumsOk BOOLEAN, 
	_DRFTransformActualId integer, -- index into table QIFReferenceFullType 
	_SecondCompositeSegmentPositionActual integer, -- index into table CompositeSegmentPositionActualType 
	_ThirdCompositeSegmentPositionActual integer, -- index into table CompositeSegmentPositionActualType 
	_FourthCompositeSegmentPositionActual integer  -- index into table CompositeSegmentPositionActualType 
) ;

DROP TABLE IF EXISTS PositionCharacteristicDefinition;
CREATE TABLE PositionCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	MaterialCondition MaterialModifierEnumType NOT NULL, 
	_ZoneShape integer, -- index into table PositionZoneShapeType 
	_ProjectedToleranceZoneValue integer, -- index into table LinearValueType 
	_SecondCompositeSegmentPositionDefinition integer, -- index into table CompositeSegmentPositionDefinitionType 
	_ThirdCompositeSegmentPositionDefinition integer, -- index into table CompositeSegmentPositionDefinitionType 
	_FourthCompositeSegmentPositionDefinition integer, -- index into table CompositeSegmentPositionDefinitionType 
	_ToPointToleranceValue integer, -- index into table LinearValueType 
	OrientationOnly BOOLEAN  
) ;

DROP TABLE IF EXISTS PositionCharacteristicItem;
CREATE TABLE PositionCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS PositionCharacteristicNominal;
CREATE TABLE PositionCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_ZoneLimit integer  -- index into table CharacteristicDirectionalZoneLimitType 
) ;

DROP TABLE IF EXISTS PositionCharacteristicStatsEval;
CREATE TABLE PositionCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	CapabilityCalculationMethod PositionCapabilityCalculationEnumType, 
	_CompositeSegmentsStats integer  -- index into table CompositeSegmentsProfileStatsEvalType 
) ;

DROP TABLE IF EXISTS PositionDiametricalZone;
CREATE TABLE PositionDiametricalZone (
	index  SERIAL PRIMARY KEY,
	Dimensionality DimensionCountEnumType, 
	ZoneOrientationVector text, 
	ElongatedZone BOOLEAN  
) ;

DROP TABLE IF EXISTS PositionNonDiametricalZone;
CREATE TABLE PositionNonDiametricalZone (
	index  SERIAL PRIMARY KEY,
	Dimensionality DimensionCountEnumType, 
	ZoneOrientationVector text, 
	BoundaryZone BOOLEAN  
) ;

DROP TABLE IF EXISTS PositionSphericalZone;
CREATE TABLE PositionSphericalZone (
	index  SERIAL PRIMARY KEY,
	Dimensionality DimensionCountEnumType  
) ;

DROP TABLE IF EXISTS PositionZoneShape;
CREATE TABLE PositionZoneShape (
	index  SERIAL PRIMARY KEY,
	_SphericalZone integer, -- index into table ConcentricitySphericalZoneType 
	_DiametricalZone integer, -- index into table OrientationDiametricalZoneType 
	_NonDiametricalZone integer  -- index into table StraightnessNonDiametricalZoneType 
) ;

DROP TABLE IF EXISTS PreInspectionTraceability;
CREATE TABLE PreInspectionTraceability (
	index  SERIAL PRIMARY KEY,
	_CustomerOrganizationType integer, -- index into table CustomerOrganizationType 
	_InspectingOrganization integer, -- index into table OrganizationType 
	_CustomerOrganization integer, -- index into table CustomerOrganizationType 
	SupplierCode text, 
	PurchaseOrderNumber text, 
	OrderNumber text, 
	_AsmPathIds integer, -- index into table ArrayReferenceType 
	ReportNumber text, 
	InspectionScope InspectionScopeEnumType, 
	InspectionMode InspectionModeEnumType, 
	_PartialInspection integer, -- index into table PartialInspectionType 
	_NotableEvents integer, -- index into table NotableEventsType 
	_InspectionSoftwareItems integer, -- index into table InspectionSoftwareItemsType 
	_InspectionProgram integer, -- index into table InspectionProgramType 
	_SecurityClassification integer, -- index into table SecurityClassificationType 
	_PlantLocation integer, -- index into table LocationType 
	_ReferencedQIFPlanInstance integer, -- index into table QPIdFullReferenceType 
	ReferencedQIFPlan text NOT NULL, 
	_FormalStandard integer  -- index into table FormalStandardType 
) ;

DROP TABLE IF EXISTS Precedence;
CREATE TABLE Precedence (
	index  SERIAL PRIMARY KEY,
	PrecedenceEnum PrecedenceEnumType NOT NULL, 
	OtherPrecedence text NOT NULL  
) ;

DROP TABLE IF EXISTS Predecessors;
CREATE TABLE Predecessors (
	index  SERIAL PRIMARY KEY,
	Predecessor integer NOT NULL  
) ;

DROP TABLE IF EXISTS PressureTolerance;
CREATE TABLE PressureTolerance (
	index  SERIAL PRIMARY KEY,
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	DefinedAsLimit BOOLEAN NOT NULL  
) ;

DROP TABLE IF EXISTS PressureUnit;
CREATE TABLE PressureUnit (
	index  SERIAL PRIMARY KEY,
	SIUnitName text, 
	UnitName text NOT NULL, 
	_UnitConversion integer  -- index into table UnitConversionType 
) ;

DROP TABLE IF EXISTS PressureValue;
CREATE TABLE PressureValue (
	index  SERIAL PRIMARY KEY,
	pressureUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS PrimaryAlignmentOperation;
CREATE TABLE PrimaryAlignmentOperation (
	index  SERIAL PRIMARY KEY,
	SequenceNumber integer NOT NULL, 
	SequenceNumber integer NOT NULL, 
	_PrimaryEntity integer, -- index into table AlignmentFeatureType 
	PrimaryAxis text NOT NULL  
) ;

DROP TABLE IF EXISTS PrimaryUnits;
CREATE TABLE PrimaryUnits (
	index  SERIAL PRIMARY KEY,
	_AreaUnit integer, -- index into table AreaUnitType 
	_AngularUnit integer, -- index into table AngularUnitType 
	_ForceUnit integer, -- index into table ForceUnitType 
	_LinearUnit integer, -- index into table LinearUnitType 
	_MassUnit integer, -- index into table MassUnitType 
	_PressureUnit integer, -- index into table PressureUnitType 
	_SpeedUnit integer, -- index into table SpeedUnitType 
	_TemperatureUnit integer, -- index into table TemperatureUnitType 
	_TimeUnit integer  -- index into table TimeUnitType 
) ;

DROP TABLE IF EXISTS PrintedDrawing;
CREATE TABLE PrintedDrawing (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	Name text NOT NULL, 
	Version text, 
	Description text, 
	_Author integer, -- index into table AuthorType 
	DrawingNumber text, 
	AdditionalChanges text, 
	Location text  
) ;

DROP TABLE IF EXISTS ProcessDifferenceStudyPlan;
CREATE TABLE ProcessDifferenceStudyPlan (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	NumberOfSamples integer NOT NULL, 
	SubgroupSize integer NOT NULL, 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_LinearAbsoluteDifference integer, -- index into table LinearValueType 
	_AngularAbsoluteDifference integer, -- index into table AngularValueType 
	_AreaAbsoluteDifference integer, -- index into table AreaValueType 
	_ForceAbsoluteDifference integer, -- index into table ForceValueType 
	_MassAbsoluteDifference integer, -- index into table MassValueType 
	_PressureAbsoluteDifference integer, -- index into table PressureValueType 
	_SpeedAbsoluteDifference integer, -- index into table SpeedValueType 
	_TemperatureAbsoluteDifference integer, -- index into table TemperatureValueType 
	_TimeAbsoluteDifference integer, -- index into table TimeValueType 
	__UserDefinedUnitAbsoluteDifference integer[], -- index into table UserDefinedUnitValueType 
	RelativeDifference DECIMAL(10,2) NOT NULL  
) ;

DROP TABLE IF EXISTS ProcessDifferenceStudyResults;
CREATE TABLE ProcessDifferenceStudyResults (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	NumberOfSamples integer NOT NULL, 
	SubgroupSize integer NOT NULL, 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_LinearAbsoluteDifference integer, -- index into table LinearValueType 
	_AngularAbsoluteDifference integer, -- index into table AngularValueType 
	_AreaAbsoluteDifference integer, -- index into table AreaValueType 
	_ForceAbsoluteDifference integer, -- index into table ForceValueType 
	_MassAbsoluteDifference integer, -- index into table MassValueType 
	_PressureAbsoluteDifference integer, -- index into table PressureValueType 
	_SpeedAbsoluteDifference integer, -- index into table SpeedValueType 
	_TemperatureAbsoluteDifference integer, -- index into table TemperatureValueType 
	_TimeAbsoluteDifference integer, -- index into table TimeValueType 
	__UserDefinedUnitAbsoluteDifference integer[], -- index into table UserDefinedUnitValueType 
	RelativeDifference text  
) ;

DROP TABLE IF EXISTS ProcessParameter;
CREATE TABLE ProcessParameter (
	index  SERIAL PRIMARY KEY,
	ParameterType text NOT NULL, 
	ParameterValue text NOT NULL  
) ;

DROP TABLE IF EXISTS ProductTraceability;
CREATE TABLE ProductTraceability (
	index  SERIAL PRIMARY KEY,
	ReportNumber text, 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_FixtureId integer, -- index into table QIFReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_InspectionSoftwareItems integer, -- index into table InspectionSoftwareItemsType 
	_InspectionProgram integer, -- index into table InspectionProgramType 
	_MeasurementDeviceIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS Product;
CREATE TABLE Product (
	index  SERIAL PRIMARY KEY,
	_Header integer, -- index into table QIFDocumentHeaderType 
	_GeometrySet integer, -- index into table GeometrySetType 
	_TopologySet integer, -- index into table TopologySetType 
	_NoteSet integer, -- index into table NoteSetType 
	_NoteFlagSet integer, -- index into table NoteFlagSetType 
	_PartNoteSet integer, -- index into table PartNoteSetType 
	_ViewSet integer, -- index into table ViewSetType 
	_LayerSet integer, -- index into table LayerSetType 
	_CoordinateSystemSet integer, -- index into table CoordinateSystemSetType 
	_VisualizationSet integer, -- index into table VisualizationSetType 
	_AuxiliarySet integer, -- index into table AuxiliarySetType 
	_PartSet integer, -- index into table PartSetType 
	_AssemblySet integer, -- index into table AssemblySetType 
	_ComponentSet integer, -- index into table ComponentSetType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_RootPart integer, -- index into table ElementReferenceType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_RootAssembly integer, -- index into table ElementReferenceType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_RootComponent integer, -- index into table ElementReferenceType 
	_AsmPaths integer  -- index into table AsmPathsType 
) ;

DROP TABLE IF EXISTS ProductionStudyPlan;
CREATE TABLE ProductionStudyPlan (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	NumberOfSamples integer NOT NULL, 
	SubgroupSize integer, 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	NumberOfSamples integer NOT NULL, 
	SubgroupSize integer, 
	_SamplingMethod integer, -- index into table SamplingMethodType 
	__ControlMethod integer[]  -- index into table ControlMethodType 
) ;

DROP TABLE IF EXISTS ProductionStudyResults;
CREATE TABLE ProductionStudyResults (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	NumberOfSamples integer NOT NULL, 
	SubgroupSize integer, 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	NumberOfSamples integer NOT NULL, 
	SubgroupSize integer, 
	__ControlIssueDetails integer[]  -- index into table ControlIssueDetailsType 
) ;

DROP TABLE IF EXISTS ProfileGroupFeatureActual;
CREATE TABLE ProfileGroupFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS ProfileGroupFeatureDefinition;
CREATE TABLE ProfileGroupFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer  -- index into table AttributesType 
) ;

DROP TABLE IF EXISTS ProfileGroupFeatureItem;
CREATE TABLE ProfileGroupFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS ProfileGroupFeatureNominal;
CREATE TABLE ProfileGroupFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_FeatureNominalIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS QIFDocumentHeader;
CREATE TABLE QIFDocumentHeader (
	index  SERIAL PRIMARY KEY,
	_Application integer, -- index into table ApplicationType 
	_Author integer, -- index into table AuthorType 
	_ApplicationSource integer, -- index into table ApplicationType 
	Description text, 
	Scope text  
) ;

DROP TABLE IF EXISTS QIFDocument;
CREATE TABLE QIFDocument (
	index  SERIAL PRIMARY KEY,
	versionQIF text,-- attribute
	idMax text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_VersionHistory integer, -- index into table VersionHistoryType 
	_Version integer, -- index into table string 
	_Header integer, -- index into table QIFDocumentHeaderType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	_FileUnits integer, -- index into table FileUnitsType 
	_DatumDefinitions integer, -- index into table DatumDefinitionsType 
	_DatumTargetDefinitions integer, -- index into table DatumTargetDefinitionsType 
	_Transforms integer, -- index into table TransformListType 
	_CoordinateSystems integer, -- index into table CoordinateSystemListType 
	_DatumReferenceFrames integer, -- index into table DatumReferenceFramesType 
	_MeasurementResources integer, -- index into table MeasurementResourcesType 
	_ThreadSpecifications integer, -- index into table ThreadSpecificationsType 
	_Product integer, -- index into table ProductType 
	_Features integer, -- index into table FeatureAspectsListsType 
	_Characteristics integer, -- index into table CharacteristicAspectsListsType 
	_MeasurementPlan integer, -- index into table MeasurementPlanType 
	_MeasurementsResults integer, -- index into table MeasurementsResultsType 
	_Statistics integer, -- index into table StatisticsType 
	_ManufacturingProcessTraceabilities integer, -- index into table ManufacturingProcessTraceabilitiesType 
	_Rules integer, -- index into table QIFRulesType 
	_UserDataXML integer  -- index into table UserDataXMLType 
) ;

DROP TABLE IF EXISTS QIFReferenceFull;
CREATE TABLE QIFReferenceFull (
	index  SERIAL PRIMARY KEY,
	asmPath text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS QIFRules;
CREATE TABLE QIFRules (
	index  SERIAL PRIMARY KEY,
	_Version integer, -- index into table string 
	_RulesUnits integer, -- index into table OtherUnitsType 
	_FeatureRules integer, -- index into table FeatureRulesType 
	_DMESelectionRules integer  -- index into table DMESelectionRulesType 
) ;

DROP TABLE IF EXISTS QPIdFullReference;
CREATE TABLE QPIdFullReference (
	index  SERIAL PRIMARY KEY,
	ItemQPId text NOT NULL, 
	DocumentQPId text  
) ;

DROP TABLE IF EXISTS Qualification;
CREATE TABLE Qualification (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	Description text NOT NULL  
) ;

DROP TABLE IF EXISTS Qualifications;
CREATE TABLE Qualifications (
	index  SERIAL PRIMARY KEY,
	__Qualification integer[]  -- index into table QualificationType 
) ;

DROP TABLE IF EXISTS Quaternion;
CREATE TABLE Quaternion (
	index  SERIAL PRIMARY KEY,
	Value FLOAT[4] NOT NULL  
) ;

DROP TABLE IF EXISTS RadialDifferentialScale;
CREATE TABLE RadialDifferentialScale (
	index  SERIAL PRIMARY KEY,
	PerpendicularScaleFactor DECIMAL(10,2) NOT NULL, 
	ParallelScaleFactor DECIMAL(10,2) NOT NULL, 
	Direction text NOT NULL  
) ;

DROP TABLE IF EXISTS RadiusCharacteristicActual;
CREATE TABLE RadiusCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS RadiusCharacteristicDefinition;
CREATE TABLE RadiusCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	ControlledRadius BOOLEAN  
) ;

DROP TABLE IF EXISTS RadiusCharacteristicItem;
CREATE TABLE RadiusCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS RadiusCharacteristicNominal;
CREATE TABLE RadiusCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS RadiusCharacteristicStatsEval;
CREATE TABLE RadiusCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS Rectangle;
CREATE TABLE Rectangle (
	index  SERIAL PRIMARY KEY,
	_Length integer, -- index into table LinearValueType 
	_ActualPointType integer, -- index into table ActualPointType 
	_CornerPoint integer, -- index into table PointType 
	_Width integer, -- index into table LinearValueType 
	WidthDirection text NOT NULL, 
	LengthDirection text NOT NULL  
) ;

DROP TABLE IF EXISTS RectangularUnitArea;
CREATE TABLE RectangularUnitArea (
	index  SERIAL PRIMARY KEY,
	_RectangularUnitAreaLength integer, -- index into table LinearValueType 
	_RectangularUnitAreaWidth integer, -- index into table LinearValueType 
	RectangularUnitAreaOrientation text  
) ;

DROP TABLE IF EXISTS Resolution;
CREATE TABLE Resolution (
	index  SERIAL PRIMARY KEY,
	_CombinedResolution integer, -- index into table LinearValueType 
	_XYZResolution integer, -- index into table XYZResolutionType 
	_XYZResolution integer  -- index into table XYZResolutionType 
) ;

DROP TABLE IF EXISTS Revolution23Core;
CREATE TABLE Revolution23Core (
	index  SERIAL PRIMARY KEY,
	angle text,-- attribute
	form text NOT NULL,-- attribute
	form text NOT NULL,-- attribute
	_ActualZoneAxisType integer, -- index into table ActualZoneAxisType 
	_Axis integer, -- index into table AxisType 
	_Generatrix integer  -- index into table Curve13CoreType 
) ;

DROP TABLE IF EXISTS Revolution23;
CREATE TABLE Revolution23 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Revolution23Core integer, -- index into table Revolution23CoreType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS RotaryTable;
CREATE TABLE RotaryTable (
	index  SERIAL PRIMARY KEY,
	_ActualPointType integer, -- index into table ActualPointType 
	_LocationOnCMM integer, -- index into table PointType 
	AxisDirection text NOT NULL, 
	ZeroIndexDirection text NOT NULL, 
	_TableRadius integer, -- index into table LinearValueType 
	_TableErrors integer  -- index into table TableErrorsType 
) ;

DROP TABLE IF EXISTS Ruled23Core;
CREATE TABLE Ruled23Core (
	index  SERIAL PRIMARY KEY,
	turnedSecondCurve text NOT NULL,-- attribute
	form text NOT NULL,-- attribute
	form text NOT NULL,-- attribute
	__Curve integer[]  -- index into table Curve13CoreType 
) ;

DROP TABLE IF EXISTS Ruled23;
CREATE TABLE Ruled23 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Ruled23Core integer, -- index into table Ruled23CoreType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS RunoutGroupFeatureActual;
CREATE TABLE RunoutGroupFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS RunoutGroupFeatureDefinition;
CREATE TABLE RunoutGroupFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer  -- index into table AttributesType 
) ;

DROP TABLE IF EXISTS RunoutGroupFeatureItem;
CREATE TABLE RunoutGroupFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS RunoutGroupFeatureNominal;
CREATE TABLE RunoutGroupFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_FeatureNominalIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS SamplingInterval;
CREATE TABLE SamplingInterval (
	index  SERIAL PRIMARY KEY,
	SamplingIntervalEnum SamplingIntervalEnumType NOT NULL, 
	OtherSamplingInterval text NOT NULL  
) ;

DROP TABLE IF EXISTS SamplingMethod;
CREATE TABLE SamplingMethod (
	index  SERIAL PRIMARY KEY,
	SampleSize integer NOT NULL, 
	SamplingPeriod integer NOT NULL, 
	SamplingFrequency integer NOT NULL, 
	_SamplingInterval integer  -- index into table SamplingIntervalType 
) ;

DROP TABLE IF EXISTS SamplingRigorIs;
CREATE TABLE SamplingRigorIs (
	index  SERIAL PRIMARY KEY,
	val text -- attribute
) ;

DROP TABLE IF EXISTS SavedView;
CREATE TABLE SavedView (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	ViewPlaneOrigin FLOAT[3] NOT NULL, 
	_Orientation integer, -- index into table QuaternionType 
	Ratio DOUBLE PRECISION NOT NULL, 
	Near DOUBLE PRECISION NOT NULL, 
	Far DOUBLE PRECISION NOT NULL, 
	Height DOUBLE PRECISION NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	ViewPlaneOrigin FLOAT[3] NOT NULL, 
	_Orientation integer, -- index into table QuaternionType 
	Ratio DOUBLE PRECISION NOT NULL, 
	Near DOUBLE PRECISION NOT NULL, 
	Far DOUBLE PRECISION NOT NULL, 
	Height DOUBLE PRECISION NOT NULL, 
	_AnnotationVisibleIds integer, -- index into table ArrayReferenceFullType 
	_AnnotationHiddenIds integer, -- index into table ArrayReferenceFullType 
	_BodyIds integer, -- index into table ArrayReferenceType 
	_ComponentIds integer, -- index into table ArrayReferenceFullType 
	_PlaneClippingIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS Scale;
CREATE TABLE Scale (
	index  SERIAL PRIMARY KEY,
	_ActualPointType integer, -- index into table ActualPointType 
	_Origin integer, -- index into table ActualOriginOffsetType 
	_UniformScale integer, -- index into table UniformScaleType 
	_RadialDifferentialScale integer, -- index into table RadialDifferentialScaleType 
	_AxialDifferentialScale integer  -- index into table AxialDifferentialScaleType 
) ;

DROP TABLE IF EXISTS SecondaryAlignmentOperation;
CREATE TABLE SecondaryAlignmentOperation (
	index  SERIAL PRIMARY KEY,
	SequenceNumber integer NOT NULL, 
	SequenceNumber integer NOT NULL, 
	_SecondaryEntity integer, -- index into table AlignmentFeatureType 
	SecondaryAxis text NOT NULL, 
	RotationAxis text  
) ;

DROP TABLE IF EXISTS SecurityClassification;
CREATE TABLE SecurityClassification (
	index  SERIAL PRIMARY KEY,
	SecurityClassificationEnum SecurityClassificationEnumType NOT NULL, 
	OtherSecurityClassification text NOT NULL  
) ;

DROP TABLE IF EXISTS Segment12Core;
CREATE TABLE Segment12Core (
	index  SERIAL PRIMARY KEY,
	domain text,-- attribute
	domain text,-- attribute
	StartPoint FLOAT[2] NOT NULL, 
	EndPoint FLOAT[2] NOT NULL  
) ;

DROP TABLE IF EXISTS Segment12;
CREATE TABLE Segment12 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Segment12Core integer  -- index into table Segment12CoreType 
) ;

DROP TABLE IF EXISTS Segment13Core;
CREATE TABLE Segment13Core (
	index  SERIAL PRIMARY KEY,
	domain text,-- attribute
	domain text,-- attribute
	StartPoint FLOAT[3] NOT NULL, 
	EndPoint FLOAT[3] NOT NULL  
) ;

DROP TABLE IF EXISTS Segment13;
CREATE TABLE Segment13 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Segment13Core integer, -- index into table Segment13CoreType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS Sensor;
CREATE TABLE Sensor (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Qualifications integer, -- index into table QualificationsType 
	_AAngle integer, -- index into table AngularValueType 
	_BAngle integer  -- index into table AngularValueType 
) ;

DROP TABLE IF EXISTS Sensors;
CREATE TABLE Sensors (
	index  SERIAL PRIMARY KEY,
	__Sensor integer[], -- index into table SensorType 
	__TouchProbeType integer[]  -- index into table TouchProbeType 
) ;

DROP TABLE IF EXISTS SequencedBaseFeature;
CREATE TABLE SequencedBaseFeature (
	index  SERIAL PRIMARY KEY,
	ReferencedComponent ReferencedComponentEnumType NOT NULL, 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	ReferencedComponent ReferencedComponentEnumType NOT NULL, 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	SequenceNumber integer NOT NULL  
) ;

DROP TABLE IF EXISTS SequencedDatum;
CREATE TABLE SequencedDatum (
	index  SERIAL PRIMARY KEY,
	_SimpleDatum integer, -- index into table DatumType 
	_CompoundDatum integer, -- index into table CompoundDatumType 
	SequenceNumber integer NOT NULL  
) ;

DROP TABLE IF EXISTS SetFeature;
CREATE TABLE SetFeature (
	index  SERIAL PRIMARY KEY 
) ;

DROP TABLE IF EXISTS ShapeClassIs;
CREATE TABLE ShapeClassIs (
	index  SERIAL PRIMARY KEY,
	val text -- attribute
) ;

DROP TABLE IF EXISTS ShapeClass;
CREATE TABLE ShapeClass (
	index  SERIAL PRIMARY KEY,
	ShapeClassEnum ShapeClassEnumType NOT NULL, 
	OtherShapeClass text NOT NULL  
) ;

DROP TABLE IF EXISTS ShellSet;
CREATE TABLE ShellSet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__Shell integer[]  -- index into table ShellType 
) ;

DROP TABLE IF EXISTS Shell;
CREATE TABLE Shell (
	index  SERIAL PRIMARY KEY,
	turned text NOT NULL,-- attribute
	closed text NOT NULL,-- attribute
	form text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FaceIds integer  -- index into table ArrayReferenceType 
) ;

DROP TABLE IF EXISTS SignOffs;
CREATE TABLE SignOffs (
	index  SERIAL PRIMARY KEY,
	__Employee integer[]  -- index into table EmployeeType 
) ;

DROP TABLE IF EXISTS SimpleStudyPlan;
CREATE TABLE SimpleStudyPlan (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	NumberOfSamples integer NOT NULL, 
	SubgroupSize integer, 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	NumberOfSamples integer NOT NULL, 
	SubgroupSize integer  
) ;

DROP TABLE IF EXISTS SimpleStudyResults;
CREATE TABLE SimpleStudyResults (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	NumberOfSamples integer NOT NULL, 
	SubgroupSize integer, 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	NumberOfSamples integer NOT NULL, 
	SubgroupSize integer  
) ;

DROP TABLE IF EXISTS SingleLeadThreadSpecification;
CREATE TABLE SingleLeadThreadSpecification (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Diameter integer, -- index into table LinearValueType 
	_ThreadSeries integer, -- index into table ThreadSeriesType 
	_ThreadToleranceClass integer, -- index into table ThreadClassType 
	_CrestDiameterToleranceClass integer, -- index into table ThreadClassType 
	LeftHanded BOOLEAN, 
	ModifiedThread BOOLEAN, 
	_ThreadLengthEngagement integer, -- index into table LinearValueType 
	_Diameter integer, -- index into table LinearValueType 
	_ThreadSeries integer, -- index into table ThreadSeriesType 
	_ThreadToleranceClass integer, -- index into table ThreadClassType 
	_CrestDiameterToleranceClass integer, -- index into table ThreadClassType 
	LeftHanded BOOLEAN, 
	ModifiedThread BOOLEAN, 
	_ThreadLengthEngagement integer, -- index into table LinearValueType 
	_ThreadDensity integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS SlotEnd;
CREATE TABLE SlotEnd (
	index  SERIAL PRIMARY KEY,
	SlotEndEnum SlotEndEnumType NOT NULL, 
	OtherSlotEnd text NOT NULL  
) ;

DROP TABLE IF EXISTS Software;
CREATE TABLE Software (
	index  SERIAL PRIMARY KEY,
	VendorName text NOT NULL, 
	ApplicationName text NOT NULL, 
	Version text, 
	Description text  
) ;

DROP TABLE IF EXISTS SpeedTolerance;
CREATE TABLE SpeedTolerance (
	index  SERIAL PRIMARY KEY,
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	DefinedAsLimit BOOLEAN NOT NULL  
) ;

DROP TABLE IF EXISTS SpeedUnit;
CREATE TABLE SpeedUnit (
	index  SERIAL PRIMARY KEY,
	SIUnitName text, 
	UnitName text NOT NULL, 
	_UnitConversion integer  -- index into table UnitConversionType 
) ;

DROP TABLE IF EXISTS SpeedValue;
CREATE TABLE SpeedValue (
	index  SERIAL PRIMARY KEY,
	speedUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS Sphere23Core;
CREATE TABLE Sphere23Core (
	index  SERIAL PRIMARY KEY,
	turnedV text NOT NULL,-- attribute
	scaleU text NOT NULL,-- attribute
	scaleV text NOT NULL,-- attribute
	form text NOT NULL,-- attribute
	form text NOT NULL,-- attribute
	Diameter DOUBLE PRECISION NOT NULL, 
	Location FLOAT[3] NOT NULL, 
	_LatitudeLongitudeSweep integer  -- index into table LatitudeLongitudeSweepType 
) ;

DROP TABLE IF EXISTS Sphere23;
CREATE TABLE Sphere23 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Sphere23Core integer, -- index into table Sphere23CoreType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS SphereActualDetermination;
CREATE TABLE SphereActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS SphereBestFit;
CREATE TABLE SphereBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS SphereCast;
CREATE TABLE SphereCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS SphereCheckedFeature;
CREATE TABLE SphereCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS SphereChecked;
CREATE TABLE SphereChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS SphereConstructionMethod;
CREATE TABLE SphereConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_Transform integer, -- index into table ConicalSegmentTransformType 
	_FromScan integer  -- index into table CylinderFromScanType 
) ;

DROP TABLE IF EXISTS SphereCopy;
CREATE TABLE SphereCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseSphere integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS SphereFeatureActual;
CREATE TABLE SphereFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Diameter integer, -- index into table LinearValueType 
	_DiameterMin integer, -- index into table ActualLinearValueType 
	_DiameterMax integer, -- index into table ActualLinearValueType 
	_LatitudeLongitudeSweep integer, -- index into table LatitudeLongitudeSweepType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS SphereFeatureDefinition;
CREATE TABLE SphereFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	InternalExternal InternalExternalEnumType NOT NULL, 
	_Diameter integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS SphereFeatureItem;
CREATE TABLE SphereFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS SphereFeatureNominal;
CREATE TABLE SphereFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_ActualPointType integer, -- index into table ActualPointType 
	_Location integer, -- index into table LocationType 
	_LatitudeLongitudeSweep integer  -- index into table LatitudeLongitudeSweepType 
) ;

DROP TABLE IF EXISTS SphereFromScan;
CREATE TABLE SphereFromScan (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_SurfaceFeature integer, -- index into table BaseFeatureType 
	_SearchRadius integer, -- index into table LinearValueType 
	Vector text  
) ;

DROP TABLE IF EXISTS SpherePointSamplingStrategy;
CREATE TABLE SpherePointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum SpherePointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS SphereRecomp;
CREATE TABLE SphereRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS SphereTransform;
CREATE TABLE SphereTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseSphere integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS Sphere;
CREATE TABLE Sphere (
	index  SERIAL PRIMARY KEY,
	_ActualPointType integer, -- index into table ActualPointType 
	_CenterPoint integer, -- index into table PointType 
	_Diameter integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS SphericalSegmentActualDetermination;
CREATE TABLE SphericalSegmentActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS SphericalSegmentBestFit;
CREATE TABLE SphericalSegmentBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS SphericalSegmentCast;
CREATE TABLE SphericalSegmentCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS SphericalSegmentCheckedFeature;
CREATE TABLE SphericalSegmentCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS SphericalSegmentChecked;
CREATE TABLE SphericalSegmentChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS SphericalSegmentConstructionMethod;
CREATE TABLE SphericalSegmentConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS SphericalSegmentCopy;
CREATE TABLE SphericalSegmentCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseSphericalSegment integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS SphericalSegmentFeatureActual;
CREATE TABLE SphericalSegmentFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Diameter integer, -- index into table LinearValueType 
	_DiameterMin integer, -- index into table ActualLinearValueType 
	_DiameterMax integer, -- index into table ActualLinearValueType 
	_LatitudeLongitudeSweep integer, -- index into table LatitudeLongitudeSweepType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS SphericalSegmentFeatureDefinition;
CREATE TABLE SphericalSegmentFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	InternalExternal InternalExternalEnumType NOT NULL, 
	_Diameter integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS SphericalSegmentFeatureItem;
CREATE TABLE SphericalSegmentFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS SphericalSegmentFeatureNominal;
CREATE TABLE SphericalSegmentFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_ActualPointType integer, -- index into table ActualPointType 
	_Location integer, -- index into table LocationType 
	_LatitudeLongitudeSweep integer  -- index into table LatitudeLongitudeSweepType 
) ;

DROP TABLE IF EXISTS SphericalSegmentPointSamplingStrategy;
CREATE TABLE SphericalSegmentPointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum SpherePointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS SphericalSegmentRecomp;
CREATE TABLE SphericalSegmentRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS SphericalSegmentTransform;
CREATE TABLE SphericalSegmentTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseSphericalSegment integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS Spline12Core;
CREATE TABLE Spline12Core (
	index  SERIAL PRIMARY KEY,
	normalized text NOT NULL,-- attribute
	domain text,-- attribute
	domain text,-- attribute
	_Knots integer, -- index into table ArrayDoubleType 
	_Orders integer, -- index into table ArrayNaturalType 
	_Coefficients integer  -- index into table ArrayPointType 
) ;

DROP TABLE IF EXISTS Spline12;
CREATE TABLE Spline12 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Spline12Core integer  -- index into table Spline12CoreType 
) ;

DROP TABLE IF EXISTS Spline13Core;
CREATE TABLE Spline13Core (
	index  SERIAL PRIMARY KEY,
	normalized text NOT NULL,-- attribute
	domain text,-- attribute
	domain text,-- attribute
	_Knots integer, -- index into table ArrayDoubleType 
	_Orders integer, -- index into table ArrayNaturalType 
	Coefficients text NOT NULL  
) ;

DROP TABLE IF EXISTS Spline13;
CREATE TABLE Spline13 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Spline13Core integer, -- index into table Spline13CoreType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS Spline23Core;
CREATE TABLE Spline23Core (
	index  SERIAL PRIMARY KEY,
	normalized text NOT NULL,-- attribute
	form text NOT NULL,-- attribute
	form text NOT NULL,-- attribute
	_KnotsU integer, -- index into table ArrayDoubleType 
	_KnotsV integer, -- index into table ArrayDoubleType 
	_OrdersU integer, -- index into table ArrayNaturalType 
	_OrdersV integer, -- index into table ArrayNaturalType 
	Coefficients text NOT NULL  
) ;

DROP TABLE IF EXISTS Spline23;
CREATE TABLE Spline23 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Spline23Core integer, -- index into table Spline23CoreType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS SquareCharacteristicActual;
CREATE TABLE SquareCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS SquareCharacteristicDefinition;
CREATE TABLE SquareCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS SquareCharacteristicItem;
CREATE TABLE SquareCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS SquareCharacteristicNominal;
CREATE TABLE SquareCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS SquareCharacteristicStatsEval;
CREATE TABLE SquareCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS StabilityStudyPlan;
CREATE TABLE StabilityStudyPlan (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyPlanInstanceQPId text, 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	CalculateAverageFeatures BOOLEAN, 
	_CharacteristicItemIds integer, -- index into table ArrayReferenceFullType 
	StatsValuesPerChar integer[], 
	StatsValuesPerSubgroup integer[], 
	__StatsValuesSummary integer[], -- index into table SummaryStatsValuesType 
	_PreInspectionTraceability integer, -- index into table PreInspectionTraceabilityType 
	Name text, 
	Description text, 
	_PlanId integer, -- index into table QIFReferenceFullType 
	_CorrectiveActionPlanId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	SampleSize integer NOT NULL, 
	SampleFrequency integer NOT NULL, 
	_SamplingInterval integer  -- index into table SamplingIntervalType 
) ;

DROP TABLE IF EXISTS StabilityStudyResults;
CREATE TABLE StabilityStudyResults (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	_Attributes integer, -- index into table AttributesType 
	ThisStatisticalStudyResultsInstanceQPId text, 
	_Status integer, -- index into table StatsEvalStatusType 
	__StudyIssue integer[], -- index into table StudyIssueType 
	_InspectionTraceability integer, -- index into table InspectionTraceabilityType 
	Name text, 
	Description text, 
	_StudyId integer, -- index into table QIFReferenceFullType 
	__ResultsId integer[], -- index into table QIFReferenceFullType 
	__ResultsQPId integer[], -- index into table QPIdFullReferenceType 
	__ResultsFile integer[], -- index into table ExternalFileReferenceType 
	__AverageFeature integer[], -- index into table AverageFeatureType 
	__CharacteristicsStats integer[], -- index into table CharacteristicsStatsType 
	__LinearStatsSummary integer[], -- index into table SummaryStatisticsLinearType 
	__AngularStatsSummary integer[], -- index into table SummaryStatisticsAngularType 
	__AreaStatsSummary integer[], -- index into table SummaryStatisticsAreaType 
	__ForceStatsSummary integer[], -- index into table SummaryStatisticsForceType 
	__MassStatsSummary integer[], -- index into table SummaryStatisticsMassType 
	__PressureStatsSummary integer[], -- index into table SummaryStatisticsPressureType 
	__SpeedStatsSummary integer[], -- index into table SummaryStatisticsSpeedType 
	__TemperatureStatsSummary integer[], -- index into table SummaryStatisticsTemperatureType 
	__TimeStatsSummary integer[], -- index into table SummaryStatisticsTimeType 
	__UserDefinedUnitStatsSummary integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	__StatsSummary integer[], -- index into table SummaryStatisticsType 
	__SummaryStatisticsAngularType integer[], -- index into table SummaryStatisticsAngularType 
	__SummaryStatisticsAreaType integer[], -- index into table SummaryStatisticsAreaType 
	__SummaryStatisticsForceType integer[], -- index into table SummaryStatisticsForceType 
	__SummaryStatisticsLinearType integer[], -- index into table SummaryStatisticsLinearType 
	__SummaryStatisticsMassType integer[], -- index into table SummaryStatisticsMassType 
	__SummaryStatisticsPressureType integer[], -- index into table SummaryStatisticsPressureType 
	__SummaryStatisticsSpeedType integer[], -- index into table SummaryStatisticsSpeedType 
	__SummaryStatisticsTemperatureType integer[], -- index into table SummaryStatisticsTemperatureType 
	__SummaryStatisticsTimeType integer[], -- index into table SummaryStatisticsTimeType 
	__SummaryStatisticsUserDefinedUnitType integer[], -- index into table SummaryStatisticsUserDefinedUnitType 
	SampleSize integer NOT NULL, 
	_MeasurementDeviceIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS StatisticalStudiesResults;
CREATE TABLE StatisticalStudiesResults (
	index  SERIAL PRIMARY KEY,
	__BiasStudyResultsType integer[], -- index into table BiasStudyResultsType 
	__CapabilityStudyResultsType integer[], -- index into table CapabilityStudyResultsType 
	__FirstArticleStudyResultsType integer[], -- index into table FirstArticleStudyResultsType 
	__GageRandRStudyResultsType integer[], -- index into table GageRandRStudyResultsType 
	__LinearityStudyResultsType integer[], -- index into table LinearityStudyResultsType 
	__ProcessDifferenceStudyResultsType integer[], -- index into table ProcessDifferenceStudyResultsType 
	__ProductionStudyResultsType integer[], -- index into table ProductionStudyResultsType 
	__SimpleStudyResultsType integer[], -- index into table SimpleStudyResultsType 
	__StabilityStudyResultsType integer[]  -- index into table StabilityStudyResultsType 
) ;

DROP TABLE IF EXISTS StatisticalStudyPlans;
CREATE TABLE StatisticalStudyPlans (
	index  SERIAL PRIMARY KEY,
	__BiasStudyPlanType integer[], -- index into table BiasStudyPlanType 
	__CapabilityStudyPlanType integer[], -- index into table CapabilityStudyPlanType 
	__FirstArticleStudyPlanType integer[], -- index into table FirstArticleStudyPlanType 
	__GageRandRStudyPlanType integer[], -- index into table GageRandRStudyPlanType 
	__LinearityStudyPlanType integer[], -- index into table LinearityStudyPlanType 
	__ProcessDifferenceStudyPlanType integer[], -- index into table ProcessDifferenceStudyPlanType 
	__ProductionStudyPlanType integer[], -- index into table ProductionStudyPlanType 
	__SimpleStudyPlanType integer[], -- index into table SimpleStudyPlanType 
	__StabilityStudyPlanType integer[]  -- index into table StabilityStudyPlanType 
) ;

DROP TABLE IF EXISTS Statistics;
CREATE TABLE Statistics (
	index  SERIAL PRIMARY KEY,
	_Version integer, -- index into table string 
	_StatisticalStudyPlans integer, -- index into table StatisticalStudyPlansType 
	_StatisticalStudiesResults integer, -- index into table StatisticalStudiesResultsType 
	_CorrectiveActionPlans integer  -- index into table CorrectiveActionPlansType 
) ;

DROP TABLE IF EXISTS StatsAngular;
CREATE TABLE StatsAngular (
	index  SERIAL PRIMARY KEY,
	angularUnit text NOT NULL,-- attribute
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text  
) ;

DROP TABLE IF EXISTS StatsArea;
CREATE TABLE StatsArea (
	index  SERIAL PRIMARY KEY,
	areaUnit text NOT NULL,-- attribute
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text  
) ;

DROP TABLE IF EXISTS StatsArrayId;
CREATE TABLE StatsArrayId (
	index  SERIAL PRIMARY KEY,
	_Ids integer, -- index into table ArrayReferenceFullType 
	__Exclusion integer[]  -- index into table ExclusionType 
) ;

DROP TABLE IF EXISTS StatsEvalStatus;
CREATE TABLE StatsEvalStatus (
	index  SERIAL PRIMARY KEY,
	StatsEvalStatusEnum StatsEvalStatusEnumType NOT NULL, 
	OtherStatsEvalStatus text NOT NULL  
) ;

DROP TABLE IF EXISTS StatsForce;
CREATE TABLE StatsForce (
	index  SERIAL PRIMARY KEY,
	forceUnit text NOT NULL,-- attribute
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text  
) ;

DROP TABLE IF EXISTS StatsLinear;
CREATE TABLE StatsLinear (
	index  SERIAL PRIMARY KEY,
	linearUnit text NOT NULL,-- attribute
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text  
) ;

DROP TABLE IF EXISTS StatsMass;
CREATE TABLE StatsMass (
	index  SERIAL PRIMARY KEY,
	massUnit text NOT NULL,-- attribute
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text  
) ;

DROP TABLE IF EXISTS StatsPassFail;
CREATE TABLE StatsPassFail (
	index  SERIAL PRIMARY KEY,
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	FailurePercentage DECIMAL(10,2), 
	NumberFailures integer  
) ;

DROP TABLE IF EXISTS StatsPressure;
CREATE TABLE StatsPressure (
	index  SERIAL PRIMARY KEY,
	pressureUnit text NOT NULL,-- attribute
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text  
) ;

DROP TABLE IF EXISTS StatsSpeed;
CREATE TABLE StatsSpeed (
	index  SERIAL PRIMARY KEY,
	speedUnit text NOT NULL,-- attribute
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text  
) ;

DROP TABLE IF EXISTS StatsTemperature;
CREATE TABLE StatsTemperature (
	index  SERIAL PRIMARY KEY,
	temperatureUnit text NOT NULL,-- attribute
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text  
) ;

DROP TABLE IF EXISTS StatsTime;
CREATE TABLE StatsTime (
	index  SERIAL PRIMARY KEY,
	timeUnit text NOT NULL,-- attribute
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text  
) ;

DROP TABLE IF EXISTS StatsUserDefinedUnit;
CREATE TABLE StatsUserDefinedUnit (
	index  SERIAL PRIMARY KEY,
	unitName text,-- attribute
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text  
) ;

DROP TABLE IF EXISTS StatsWithTolAngular;
CREATE TABLE StatsWithTolAngular (
	index  SERIAL PRIMARY KEY,
	angularUnit text NOT NULL,-- attribute
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	NumberOutOfTolerance integer NOT NULL, 
	_OutOfToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOutOfTolerance integer, -- index into table SubgroupIntegerType 
	NumberOverUpperTolerance integer, 
	_OverUpperToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOverUpperTolerance integer, -- index into table SubgroupIntegerType 
	NumberUnderLowerTolerance integer NOT NULL, 
	_UnderLowerToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberUnderLowerTolerance integer, -- index into table SubgroupIntegerType 
	Cp text, 
	Cpk text, 
	Pp text, 
	Ppk text, 
	Cm text, 
	Cmk text, 
	RelativeAppraiserVariation text, 
	RelativeEquipmentVariation text, 
	RelativeInteraction text, 
	RelativeGageRandR text, 
	RelativePartVariation text, 
	RelativeTotalVariation text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	NumberOutOfTolerance integer NOT NULL, 
	_OutOfToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOutOfTolerance integer, -- index into table SubgroupIntegerType 
	NumberOverUpperTolerance integer, 
	_OverUpperToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOverUpperTolerance integer, -- index into table SubgroupIntegerType 
	NumberUnderLowerTolerance integer NOT NULL, 
	_UnderLowerToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberUnderLowerTolerance integer, -- index into table SubgroupIntegerType 
	Cp text, 
	Cpk text, 
	Pp text, 
	Ppk text, 
	Cm text, 
	Cmk text, 
	RelativeAppraiserVariation text, 
	RelativeEquipmentVariation text, 
	RelativeInteraction text, 
	RelativeGageRandR text, 
	RelativePartVariation text, 
	RelativeTotalVariation text  
) ;

DROP TABLE IF EXISTS StatsWithTolArea;
CREATE TABLE StatsWithTolArea (
	index  SERIAL PRIMARY KEY,
	areaUnit text NOT NULL,-- attribute
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	NumberOutOfTolerance integer NOT NULL, 
	_OutOfToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOutOfTolerance integer, -- index into table SubgroupIntegerType 
	NumberOverUpperTolerance integer, 
	_OverUpperToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOverUpperTolerance integer, -- index into table SubgroupIntegerType 
	NumberUnderLowerTolerance integer NOT NULL, 
	_UnderLowerToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberUnderLowerTolerance integer, -- index into table SubgroupIntegerType 
	Cp text, 
	Cpk text, 
	Pp text, 
	Ppk text, 
	Cm text, 
	Cmk text, 
	RelativeAppraiserVariation text, 
	RelativeEquipmentVariation text, 
	RelativeInteraction text, 
	RelativeGageRandR text, 
	RelativePartVariation text, 
	RelativeTotalVariation text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	NumberOutOfTolerance integer NOT NULL, 
	_OutOfToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOutOfTolerance integer, -- index into table SubgroupIntegerType 
	NumberOverUpperTolerance integer, 
	_OverUpperToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOverUpperTolerance integer, -- index into table SubgroupIntegerType 
	NumberUnderLowerTolerance integer NOT NULL, 
	_UnderLowerToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberUnderLowerTolerance integer, -- index into table SubgroupIntegerType 
	Cp text, 
	Cpk text, 
	Pp text, 
	Ppk text, 
	Cm text, 
	Cmk text, 
	RelativeAppraiserVariation text, 
	RelativeEquipmentVariation text, 
	RelativeInteraction text, 
	RelativeGageRandR text, 
	RelativePartVariation text, 
	RelativeTotalVariation text  
) ;

DROP TABLE IF EXISTS StatsWithTolForce;
CREATE TABLE StatsWithTolForce (
	index  SERIAL PRIMARY KEY,
	forceUnit text NOT NULL,-- attribute
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	NumberOutOfTolerance integer NOT NULL, 
	_OutOfToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOutOfTolerance integer, -- index into table SubgroupIntegerType 
	NumberOverUpperTolerance integer, 
	_OverUpperToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOverUpperTolerance integer, -- index into table SubgroupIntegerType 
	NumberUnderLowerTolerance integer NOT NULL, 
	_UnderLowerToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberUnderLowerTolerance integer, -- index into table SubgroupIntegerType 
	Cp text, 
	Cpk text, 
	Pp text, 
	Ppk text, 
	Cm text, 
	Cmk text, 
	RelativeAppraiserVariation text, 
	RelativeEquipmentVariation text, 
	RelativeInteraction text, 
	RelativeGageRandR text, 
	RelativePartVariation text, 
	RelativeTotalVariation text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	NumberOutOfTolerance integer NOT NULL, 
	_OutOfToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOutOfTolerance integer, -- index into table SubgroupIntegerType 
	NumberOverUpperTolerance integer, 
	_OverUpperToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOverUpperTolerance integer, -- index into table SubgroupIntegerType 
	NumberUnderLowerTolerance integer NOT NULL, 
	_UnderLowerToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberUnderLowerTolerance integer, -- index into table SubgroupIntegerType 
	Cp text, 
	Cpk text, 
	Pp text, 
	Ppk text, 
	Cm text, 
	Cmk text, 
	RelativeAppraiserVariation text, 
	RelativeEquipmentVariation text, 
	RelativeInteraction text, 
	RelativeGageRandR text, 
	RelativePartVariation text, 
	RelativeTotalVariation text  
) ;

DROP TABLE IF EXISTS StatsWithTolLinear;
CREATE TABLE StatsWithTolLinear (
	index  SERIAL PRIMARY KEY,
	linearUnit text NOT NULL,-- attribute
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	NumberOutOfTolerance integer NOT NULL, 
	_OutOfToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOutOfTolerance integer, -- index into table SubgroupIntegerType 
	NumberOverUpperTolerance integer, 
	_OverUpperToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOverUpperTolerance integer, -- index into table SubgroupIntegerType 
	NumberUnderLowerTolerance integer NOT NULL, 
	_UnderLowerToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberUnderLowerTolerance integer, -- index into table SubgroupIntegerType 
	Cp text, 
	Cpk text, 
	Pp text, 
	Ppk text, 
	Cm text, 
	Cmk text, 
	RelativeAppraiserVariation text, 
	RelativeEquipmentVariation text, 
	RelativeInteraction text, 
	RelativeGageRandR text, 
	RelativePartVariation text, 
	RelativeTotalVariation text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	NumberOutOfTolerance integer NOT NULL, 
	_OutOfToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOutOfTolerance integer, -- index into table SubgroupIntegerType 
	NumberOverUpperTolerance integer, 
	_OverUpperToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOverUpperTolerance integer, -- index into table SubgroupIntegerType 
	NumberUnderLowerTolerance integer NOT NULL, 
	_UnderLowerToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberUnderLowerTolerance integer, -- index into table SubgroupIntegerType 
	Cp text, 
	Cpk text, 
	Pp text, 
	Ppk text, 
	Cm text, 
	Cmk text, 
	RelativeAppraiserVariation text, 
	RelativeEquipmentVariation text, 
	RelativeInteraction text, 
	RelativeGageRandR text, 
	RelativePartVariation text, 
	RelativeTotalVariation text  
) ;

DROP TABLE IF EXISTS StatsWithTolMass;
CREATE TABLE StatsWithTolMass (
	index  SERIAL PRIMARY KEY,
	massUnit text NOT NULL,-- attribute
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	NumberOutOfTolerance integer NOT NULL, 
	_OutOfToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOutOfTolerance integer, -- index into table SubgroupIntegerType 
	NumberOverUpperTolerance integer, 
	_OverUpperToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOverUpperTolerance integer, -- index into table SubgroupIntegerType 
	NumberUnderLowerTolerance integer NOT NULL, 
	_UnderLowerToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberUnderLowerTolerance integer, -- index into table SubgroupIntegerType 
	Cp text, 
	Cpk text, 
	Pp text, 
	Ppk text, 
	Cm text, 
	Cmk text, 
	RelativeAppraiserVariation text, 
	RelativeEquipmentVariation text, 
	RelativeInteraction text, 
	RelativeGageRandR text, 
	RelativePartVariation text, 
	RelativeTotalVariation text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	NumberOutOfTolerance integer NOT NULL, 
	_OutOfToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOutOfTolerance integer, -- index into table SubgroupIntegerType 
	NumberOverUpperTolerance integer, 
	_OverUpperToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOverUpperTolerance integer, -- index into table SubgroupIntegerType 
	NumberUnderLowerTolerance integer NOT NULL, 
	_UnderLowerToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberUnderLowerTolerance integer, -- index into table SubgroupIntegerType 
	Cp text, 
	Cpk text, 
	Pp text, 
	Ppk text, 
	Cm text, 
	Cmk text, 
	RelativeAppraiserVariation text, 
	RelativeEquipmentVariation text, 
	RelativeInteraction text, 
	RelativeGageRandR text, 
	RelativePartVariation text, 
	RelativeTotalVariation text  
) ;

DROP TABLE IF EXISTS StatsWithTolPressure;
CREATE TABLE StatsWithTolPressure (
	index  SERIAL PRIMARY KEY,
	pressureUnit text NOT NULL,-- attribute
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	NumberOutOfTolerance integer NOT NULL, 
	_OutOfToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOutOfTolerance integer, -- index into table SubgroupIntegerType 
	NumberOverUpperTolerance integer, 
	_OverUpperToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOverUpperTolerance integer, -- index into table SubgroupIntegerType 
	NumberUnderLowerTolerance integer NOT NULL, 
	_UnderLowerToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberUnderLowerTolerance integer, -- index into table SubgroupIntegerType 
	Cp text, 
	Cpk text, 
	Pp text, 
	Ppk text, 
	Cm text, 
	Cmk text, 
	RelativeAppraiserVariation text, 
	RelativeEquipmentVariation text, 
	RelativeInteraction text, 
	RelativeGageRandR text, 
	RelativePartVariation text, 
	RelativeTotalVariation text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	NumberOutOfTolerance integer NOT NULL, 
	_OutOfToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOutOfTolerance integer, -- index into table SubgroupIntegerType 
	NumberOverUpperTolerance integer, 
	_OverUpperToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOverUpperTolerance integer, -- index into table SubgroupIntegerType 
	NumberUnderLowerTolerance integer NOT NULL, 
	_UnderLowerToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberUnderLowerTolerance integer, -- index into table SubgroupIntegerType 
	Cp text, 
	Cpk text, 
	Pp text, 
	Ppk text, 
	Cm text, 
	Cmk text, 
	RelativeAppraiserVariation text, 
	RelativeEquipmentVariation text, 
	RelativeInteraction text, 
	RelativeGageRandR text, 
	RelativePartVariation text, 
	RelativeTotalVariation text  
) ;

DROP TABLE IF EXISTS StatsWithTolSpeed;
CREATE TABLE StatsWithTolSpeed (
	index  SERIAL PRIMARY KEY,
	speedUnit text NOT NULL,-- attribute
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	NumberOutOfTolerance integer NOT NULL, 
	_OutOfToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOutOfTolerance integer, -- index into table SubgroupIntegerType 
	NumberOverUpperTolerance integer, 
	_OverUpperToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOverUpperTolerance integer, -- index into table SubgroupIntegerType 
	NumberUnderLowerTolerance integer NOT NULL, 
	_UnderLowerToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberUnderLowerTolerance integer, -- index into table SubgroupIntegerType 
	Cp text, 
	Cpk text, 
	Pp text, 
	Ppk text, 
	Cm text, 
	Cmk text, 
	RelativeAppraiserVariation text, 
	RelativeEquipmentVariation text, 
	RelativeInteraction text, 
	RelativeGageRandR text, 
	RelativePartVariation text, 
	RelativeTotalVariation text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	NumberOutOfTolerance integer NOT NULL, 
	_OutOfToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOutOfTolerance integer, -- index into table SubgroupIntegerType 
	NumberOverUpperTolerance integer, 
	_OverUpperToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOverUpperTolerance integer, -- index into table SubgroupIntegerType 
	NumberUnderLowerTolerance integer NOT NULL, 
	_UnderLowerToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberUnderLowerTolerance integer, -- index into table SubgroupIntegerType 
	Cp text, 
	Cpk text, 
	Pp text, 
	Ppk text, 
	Cm text, 
	Cmk text, 
	RelativeAppraiserVariation text, 
	RelativeEquipmentVariation text, 
	RelativeInteraction text, 
	RelativeGageRandR text, 
	RelativePartVariation text, 
	RelativeTotalVariation text  
) ;

DROP TABLE IF EXISTS StatsWithTolTemperature;
CREATE TABLE StatsWithTolTemperature (
	index  SERIAL PRIMARY KEY,
	temperatureUnit text NOT NULL,-- attribute
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	NumberOutOfTolerance integer NOT NULL, 
	_OutOfToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOutOfTolerance integer, -- index into table SubgroupIntegerType 
	NumberOverUpperTolerance integer, 
	_OverUpperToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOverUpperTolerance integer, -- index into table SubgroupIntegerType 
	NumberUnderLowerTolerance integer NOT NULL, 
	_UnderLowerToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberUnderLowerTolerance integer, -- index into table SubgroupIntegerType 
	Cp text, 
	Cpk text, 
	Pp text, 
	Ppk text, 
	Cm text, 
	Cmk text, 
	RelativeAppraiserVariation text, 
	RelativeEquipmentVariation text, 
	RelativeInteraction text, 
	RelativeGageRandR text, 
	RelativePartVariation text, 
	RelativeTotalVariation text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	NumberOutOfTolerance integer NOT NULL, 
	_OutOfToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOutOfTolerance integer, -- index into table SubgroupIntegerType 
	NumberOverUpperTolerance integer, 
	_OverUpperToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOverUpperTolerance integer, -- index into table SubgroupIntegerType 
	NumberUnderLowerTolerance integer NOT NULL, 
	_UnderLowerToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberUnderLowerTolerance integer, -- index into table SubgroupIntegerType 
	Cp text, 
	Cpk text, 
	Pp text, 
	Ppk text, 
	Cm text, 
	Cmk text, 
	RelativeAppraiserVariation text, 
	RelativeEquipmentVariation text, 
	RelativeInteraction text, 
	RelativeGageRandR text, 
	RelativePartVariation text, 
	RelativeTotalVariation text  
) ;

DROP TABLE IF EXISTS StatsWithTolTime;
CREATE TABLE StatsWithTolTime (
	index  SERIAL PRIMARY KEY,
	timeUnit text NOT NULL,-- attribute
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	NumberOutOfTolerance integer NOT NULL, 
	_OutOfToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOutOfTolerance integer, -- index into table SubgroupIntegerType 
	NumberOverUpperTolerance integer, 
	_OverUpperToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOverUpperTolerance integer, -- index into table SubgroupIntegerType 
	NumberUnderLowerTolerance integer NOT NULL, 
	_UnderLowerToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberUnderLowerTolerance integer, -- index into table SubgroupIntegerType 
	Cp text, 
	Cpk text, 
	Pp text, 
	Ppk text, 
	Cm text, 
	Cmk text, 
	RelativeAppraiserVariation text, 
	RelativeEquipmentVariation text, 
	RelativeInteraction text, 
	RelativeGageRandR text, 
	RelativePartVariation text, 
	RelativeTotalVariation text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	NumberOutOfTolerance integer NOT NULL, 
	_OutOfToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOutOfTolerance integer, -- index into table SubgroupIntegerType 
	NumberOverUpperTolerance integer, 
	_OverUpperToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOverUpperTolerance integer, -- index into table SubgroupIntegerType 
	NumberUnderLowerTolerance integer NOT NULL, 
	_UnderLowerToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberUnderLowerTolerance integer, -- index into table SubgroupIntegerType 
	Cp text, 
	Cpk text, 
	Pp text, 
	Ppk text, 
	Cm text, 
	Cmk text, 
	RelativeAppraiserVariation text, 
	RelativeEquipmentVariation text, 
	RelativeInteraction text, 
	RelativeGageRandR text, 
	RelativePartVariation text, 
	RelativeTotalVariation text  
) ;

DROP TABLE IF EXISTS StatsWithTolUserDefinedUnit;
CREATE TABLE StatsWithTolUserDefinedUnit (
	index  SERIAL PRIMARY KEY,
	unitName text,-- attribute
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	NumberOutOfTolerance integer NOT NULL, 
	_OutOfToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOutOfTolerance integer, -- index into table SubgroupIntegerType 
	NumberOverUpperTolerance integer, 
	_OverUpperToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOverUpperTolerance integer, -- index into table SubgroupIntegerType 
	NumberUnderLowerTolerance integer NOT NULL, 
	_UnderLowerToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberUnderLowerTolerance integer, -- index into table SubgroupIntegerType 
	Cp text, 
	Cpk text, 
	Pp text, 
	Ppk text, 
	Cm text, 
	Cmk text, 
	RelativeAppraiserVariation text, 
	RelativeEquipmentVariation text, 
	RelativeInteraction text, 
	RelativeGageRandR text, 
	RelativePartVariation text, 
	RelativeTotalVariation text, 
	TotalNumber integer, 
	__SubgroupTotalNumber integer[], -- index into table SubgroupIntegerType 
	EffectiveNumber integer, 
	__SubgroupEffectiveNumber integer[], -- index into table SubgroupIntegerType 
	NumberSubgroups integer, 
	Average text, 
	__SubgroupAverage integer[], -- index into table SubgroupDecimalType 
	Difference text, 
	__SubgroupDifference integer[], -- index into table SubgroupDecimalType 
	RootMeanSquare text, 
	Maximum text NOT NULL, 
	_MaximumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMaximum integer, -- index into table SubgroupDecimalType 
	Minimum text NOT NULL, 
	_MinimumId integer, -- index into table QIFReferenceFullType 
	_SubgroupMinimum integer, -- index into table SubgroupDecimalType 
	Range text, 
	_SubgroupRange integer, -- index into table SubgroupDecimalType 
	AverageRange text, 
	StandardDeviation text, 
	Skew text, 
	Kurtosis text, 
	Normality text, 
	ProcessVariation text, 
	EstimatedStandardDeviation text, 
	UpperControlLimit text, 
	LowerControlLimit text, 
	UpperControlLimitRange text, 
	LowerControlLimitRange text, 
	NumberOutOfControl integer NOT NULL, 
	_OutOfControlIds integer, -- index into table ArrayReferenceFullType 
	AppraiserVariation text, 
	EquipmentVariation text, 
	Interaction text, 
	GageRandR text, 
	PartVariation text, 
	TotalVariation text, 
	Linearity text, 
	Bias text, 
	RelativeLinearity text, 
	RelativeBias text, 
	GoodnessOfFit text, 
	RegressionSlope text, 
	RegressionIntercept text, 
	UpperConfidenceLimit text, 
	LowerConfidenceLimit text, 
	TDistribution text, 
	NumberOutOfTolerance integer NOT NULL, 
	_OutOfToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOutOfTolerance integer, -- index into table SubgroupIntegerType 
	NumberOverUpperTolerance integer, 
	_OverUpperToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberOverUpperTolerance integer, -- index into table SubgroupIntegerType 
	NumberUnderLowerTolerance integer NOT NULL, 
	_UnderLowerToleranceIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupNumberUnderLowerTolerance integer, -- index into table SubgroupIntegerType 
	Cp text, 
	Cpk text, 
	Pp text, 
	Ppk text, 
	Cm text, 
	Cmk text, 
	RelativeAppraiserVariation text, 
	RelativeEquipmentVariation text, 
	RelativeInteraction text, 
	RelativeGageRandR text, 
	RelativePartVariation text, 
	RelativeTotalVariation text  
) ;

DROP TABLE IF EXISTS StepWithPredecessors;
CREATE TABLE StepWithPredecessors (
	index  SERIAL PRIMARY KEY,
	_Predecessors integer, -- index into table PredecessorsType 
	_Step integer  -- index into table NumberedPlanElementType 
) ;

DROP TABLE IF EXISTS StepsWithPredecessors;
CREATE TABLE StepsWithPredecessors (
	index  SERIAL PRIMARY KEY,
	__StepWithPredecessors integer[]  -- index into table StepWithPredecessorsType 
) ;

DROP TABLE IF EXISTS StraightnessCharacteristicActual;
CREATE TABLE StraightnessCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_MaxStraightness integer, -- index into table ActualLinearValueType 
	_ZoneOrientation integer, -- index into table ActualUnitVectorType 
	_ZoneLine integer  -- index into table ActualZoneAxisType 
) ;

DROP TABLE IF EXISTS StraightnessCharacteristicDefinition;
CREATE TABLE StraightnessCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_ToleranceZonePerUnitLength integer, -- index into table ToleranceZonePerUnitLengthType 
	_ToleranceZonePerUnitLength integer, -- index into table ToleranceZonePerUnitLengthType 
	MaterialCondition MaterialModifierEnumType, 
	_ZoneShape integer  -- index into table PositionZoneShapeType 
) ;

DROP TABLE IF EXISTS StraightnessCharacteristicItem;
CREATE TABLE StraightnessCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS StraightnessCharacteristicNominal;
CREATE TABLE StraightnessCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_ZoneLimit integer  -- index into table CharacteristicDirectionalZoneLimitType 
) ;

DROP TABLE IF EXISTS StraightnessCharacteristicStatsEval;
CREATE TABLE StraightnessCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_MaxStraightnessStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS StraightnessDiametricalZone;
CREATE TABLE StraightnessDiametricalZone (
	index  SERIAL PRIMARY KEY 
) ;

DROP TABLE IF EXISTS StraightnessNonDiametricalZone;
CREATE TABLE StraightnessNonDiametricalZone (
	index  SERIAL PRIMARY KEY,
	ZoneOrientationVector text  
) ;

DROP TABLE IF EXISTS StraightnessZoneShape;
CREATE TABLE StraightnessZoneShape (
	index  SERIAL PRIMARY KEY,
	_DiametricalZone integer, -- index into table OrientationDiametricalZoneType 
	_NonDiametricalZone integer  -- index into table StraightnessNonDiametricalZoneType 
) ;

DROP TABLE IF EXISTS StringValues;
CREATE TABLE StringValues (
	index  SERIAL PRIMARY KEY,
	StringValue text NOT NULL  
) ;

DROP TABLE IF EXISTS StudyIssue;
CREATE TABLE StudyIssue (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	_Traceability integer, -- index into table ProductTraceabilityType 
	_AssignableCauseIds integer, -- index into table ArrayReferenceFullType 
	_CorrectiveActionIds integer, -- index into table ArrayReferenceFullType 
	Resolution text, 
	_CharacteristicIds integer, -- index into table ArrayReferenceFullType 
	_SubgroupIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS SubgroupDecimal;
CREATE TABLE SubgroupDecimal (
	index  SERIAL PRIMARY KEY,
	subgroupId text,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS SubgroupInteger;
CREATE TABLE SubgroupInteger (
	index  SERIAL PRIMARY KEY,
	subgroupId text -- attribute
) ;

DROP TABLE IF EXISTS SummaryStatisticsAngular;
CREATE TABLE SummaryStatisticsAngular (
	index  SERIAL PRIMARY KEY,
	angularUnit text NOT NULL,-- attribute
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text, 
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text  
) ;

DROP TABLE IF EXISTS SummaryStatisticsArea;
CREATE TABLE SummaryStatisticsArea (
	index  SERIAL PRIMARY KEY,
	areaUnit text NOT NULL,-- attribute
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text, 
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text  
) ;

DROP TABLE IF EXISTS SummaryStatisticsForce;
CREATE TABLE SummaryStatisticsForce (
	index  SERIAL PRIMARY KEY,
	forceUnit text NOT NULL,-- attribute
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text, 
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text  
) ;

DROP TABLE IF EXISTS SummaryStatisticsLinear;
CREATE TABLE SummaryStatisticsLinear (
	index  SERIAL PRIMARY KEY,
	linearUnit text NOT NULL,-- attribute
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text, 
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text  
) ;

DROP TABLE IF EXISTS SummaryStatisticsMass;
CREATE TABLE SummaryStatisticsMass (
	index  SERIAL PRIMARY KEY,
	massUnit text NOT NULL,-- attribute
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text, 
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text  
) ;

DROP TABLE IF EXISTS SummaryStatisticsPressure;
CREATE TABLE SummaryStatisticsPressure (
	index  SERIAL PRIMARY KEY,
	pressureUnit text NOT NULL,-- attribute
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text, 
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text  
) ;

DROP TABLE IF EXISTS SummaryStatisticsSpeed;
CREATE TABLE SummaryStatisticsSpeed (
	index  SERIAL PRIMARY KEY,
	speedUnit text NOT NULL,-- attribute
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text, 
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text  
) ;

DROP TABLE IF EXISTS SummaryStatisticsTemperature;
CREATE TABLE SummaryStatisticsTemperature (
	index  SERIAL PRIMARY KEY,
	temperatureUnit text NOT NULL,-- attribute
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text, 
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text  
) ;

DROP TABLE IF EXISTS SummaryStatisticsTime;
CREATE TABLE SummaryStatisticsTime (
	index  SERIAL PRIMARY KEY,
	timeUnit text NOT NULL,-- attribute
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text, 
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text  
) ;

DROP TABLE IF EXISTS SummaryStatistics;
CREATE TABLE SummaryStatistics (
	index  SERIAL PRIMARY KEY,
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text  
) ;

DROP TABLE IF EXISTS SummaryStatisticsUserDefinedUnit;
CREATE TABLE SummaryStatisticsUserDefinedUnit (
	index  SERIAL PRIMARY KEY,
	unitName text,-- attribute
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text, 
	SummaryType StatsValuesEnumType NOT NULL, 
	Average text, 
	Maximum text, 
	Minimum text, 
	Range text, 
	StandardDeviation text  
) ;

DROP TABLE IF EXISTS SummaryStatsValues;
CREATE TABLE SummaryStatsValues (
	index  SERIAL PRIMARY KEY,
	SummaryType SummaryStatsValuesEnumType NOT NULL, 
	SummaryStats integer[] NOT NULL  
) ;

DROP TABLE IF EXISTS SurfaceCore;
CREATE TABLE SurfaceCore (
	index  SERIAL PRIMARY KEY,
	_Cone23CoreType integer, -- index into table Cone23CoreType 
	_Cylinder23CoreType integer, -- index into table Cylinder23CoreType 
	_Extrude23CoreType integer, -- index into table Extrude23CoreType 
	_Nurbs23CoreType integer, -- index into table Nurbs23CoreType 
	_Offset23CoreType integer, -- index into table Offset23CoreType 
	_Plane23CoreType integer, -- index into table Plane23CoreType 
	_Revolution23CoreType integer, -- index into table Revolution23CoreType 
	_Ruled23CoreType integer, -- index into table Ruled23CoreType 
	_Sphere23CoreType integer, -- index into table Sphere23CoreType 
	_Spline23CoreType integer, -- index into table Spline23CoreType 
	_Torus23CoreType integer  -- index into table Torus23CoreType 
) ;

DROP TABLE IF EXISTS SurfaceMeshSet;
CREATE TABLE SurfaceMeshSet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__MeshTriangle integer[]  -- index into table ElementReferenceType 
) ;

DROP TABLE IF EXISTS SurfaceOfRevolutionActualDetermination;
CREATE TABLE SurfaceOfRevolutionActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS SurfaceOfRevolutionBestFit;
CREATE TABLE SurfaceOfRevolutionBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS SurfaceOfRevolutionCast;
CREATE TABLE SurfaceOfRevolutionCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS SurfaceOfRevolutionCheckedFeature;
CREATE TABLE SurfaceOfRevolutionCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS SurfaceOfRevolutionChecked;
CREATE TABLE SurfaceOfRevolutionChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS SurfaceOfRevolutionConstructionMethod;
CREATE TABLE SurfaceOfRevolutionConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS SurfaceOfRevolutionCopy;
CREATE TABLE SurfaceOfRevolutionCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseSurfaceOfRevolution integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS SurfaceOfRevolutionFeatureActual;
CREATE TABLE SurfaceOfRevolutionFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Axis integer, -- index into table AxisType 
	_Sweep integer, -- index into table SweepType 
	_Length integer, -- index into table LinearValueType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS SurfaceOfRevolutionFeatureDefinition;
CREATE TABLE SurfaceOfRevolutionFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	InternalExternal InternalExternalEnumType NOT NULL, 
	_Length integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS SurfaceOfRevolutionFeatureItem;
CREATE TABLE SurfaceOfRevolutionFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS SurfaceOfRevolutionFeatureNominal;
CREATE TABLE SurfaceOfRevolutionFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_ActualZoneAxisType integer, -- index into table ActualZoneAxisType 
	_Axis integer, -- index into table AxisType 
	_Sweep integer, -- index into table SweepType 
	_ReferenceFeatureNominalId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS SurfaceOfRevolutionPointSamplingStrategy;
CREATE TABLE SurfaceOfRevolutionPointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum SurfaceOfRevolutionPointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS SurfaceOfRevolutionRecomp;
CREATE TABLE SurfaceOfRevolutionRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS SurfaceOfRevolutionTransform;
CREATE TABLE SurfaceOfRevolutionTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseSurfaceOfRevolution integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS SurfaceProfileCharacteristicActual;
CREATE TABLE SurfaceProfileCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_WorstPositiveDeviation integer, -- index into table LinearValueType 
	_WorstNegativeDeviation integer, -- index into table LinearValueType 
	_PointDeviations integer, -- index into table PointDeviationsType 
	DatumsOk BOOLEAN, 
	_DRFTransformActualId integer, -- index into table QIFReferenceFullType 
	_SecondCompositeSegmentProfileActual integer, -- index into table CompositeSegmentProfileActualType 
	_ThirdCompositeSegmentProfileActual integer, -- index into table CompositeSegmentProfileActualType 
	_FourthCompositeSegmentProfileActual integer, -- index into table CompositeSegmentProfileActualType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_WorstPositiveDeviation integer, -- index into table LinearValueType 
	_WorstNegativeDeviation integer, -- index into table LinearValueType 
	_PointDeviations integer, -- index into table PointDeviationsType 
	DatumsOk BOOLEAN, 
	_DRFTransformActualId integer, -- index into table QIFReferenceFullType 
	_SecondCompositeSegmentProfileActual integer, -- index into table CompositeSegmentProfileActualType 
	_ThirdCompositeSegmentProfileActual integer, -- index into table CompositeSegmentProfileActualType 
	_FourthCompositeSegmentProfileActual integer  -- index into table CompositeSegmentProfileActualType 
) ;

DROP TABLE IF EXISTS SurfaceProfileCharacteristicDefinition;
CREATE TABLE SurfaceProfileCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_OuterDisposition integer, -- index into table LinearValueType 
	_UnequallyDisposedZone integer, -- index into table LinearValueType 
	OffsetZone BOOLEAN, 
	_SecondCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_ThirdCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_FourthCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	OrientationOnly BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_OuterDisposition integer, -- index into table LinearValueType 
	_UnequallyDisposedZone integer, -- index into table LinearValueType 
	OffsetZone BOOLEAN, 
	_SecondCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_ThirdCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_FourthCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	OrientationOnly BOOLEAN, 
	_Extent integer  -- index into table ExtentType 
) ;

DROP TABLE IF EXISTS SurfaceProfileCharacteristicItem;
CREATE TABLE SurfaceProfileCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS SurfaceProfileCharacteristicNominal;
CREATE TABLE SurfaceProfileCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_CircularZoneLimit integer, -- index into table CharacteristicCircularZoneLimitType 
	_DirectionalZoneLimit integer, -- index into table CharacteristicDirectionalZoneLimitType 
	_RectangularZoneLimit integer  -- index into table CharacteristicRectangularZoneLimitType 
) ;

DROP TABLE IF EXISTS SurfaceProfileCharacteristicStatsEval;
CREATE TABLE SurfaceProfileCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_WorstPositiveDeviationStats integer, -- index into table StatsLinearType 
	_WorstNegativeDeviationStats integer, -- index into table StatsLinearType 
	_PointDeviationsStats integer, -- index into table PointDeviationsStatsEvalType 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	_CompositeSegmentsStats integer, -- index into table CompositeSegmentsProfileStatsEvalType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_WorstPositiveDeviationStats integer, -- index into table StatsLinearType 
	_WorstNegativeDeviationStats integer, -- index into table StatsLinearType 
	_PointDeviationsStats integer, -- index into table PointDeviationsStatsEvalType 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	_CompositeSegmentsStats integer  -- index into table CompositeSegmentsProfileStatsEvalType 
) ;

DROP TABLE IF EXISTS SurfaceProfileNonUniformCharacteristicActual;
CREATE TABLE SurfaceProfileNonUniformCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_WorstPositiveDeviation integer, -- index into table LinearValueType 
	_WorstNegativeDeviation integer, -- index into table LinearValueType 
	_PointDeviations integer, -- index into table PointDeviationsType 
	DatumsOk BOOLEAN, 
	_DRFTransformActualId integer, -- index into table QIFReferenceFullType 
	_SecondCompositeSegmentProfileActual integer, -- index into table CompositeSegmentProfileActualType 
	_ThirdCompositeSegmentProfileActual integer, -- index into table CompositeSegmentProfileActualType 
	_FourthCompositeSegmentProfileActual integer, -- index into table CompositeSegmentProfileActualType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_WorstPositiveDeviation integer, -- index into table LinearValueType 
	_WorstNegativeDeviation integer, -- index into table LinearValueType 
	_PointDeviations integer, -- index into table PointDeviationsType 
	DatumsOk BOOLEAN, 
	_DRFTransformActualId integer, -- index into table QIFReferenceFullType 
	_SecondCompositeSegmentProfileActual integer, -- index into table CompositeSegmentProfileActualType 
	_ThirdCompositeSegmentProfileActual integer, -- index into table CompositeSegmentProfileActualType 
	_FourthCompositeSegmentProfileActual integer  -- index into table CompositeSegmentProfileActualType 
) ;

DROP TABLE IF EXISTS SurfaceProfileNonUniformCharacteristicDefinition;
CREATE TABLE SurfaceProfileNonUniformCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_OuterDisposition integer, -- index into table LinearValueType 
	_UnequallyDisposedZone integer, -- index into table LinearValueType 
	OffsetZone BOOLEAN, 
	_SecondCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_ThirdCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_FourthCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	OrientationOnly BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_OuterDisposition integer, -- index into table LinearValueType 
	_UnequallyDisposedZone integer, -- index into table LinearValueType 
	OffsetZone BOOLEAN, 
	_SecondCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_ThirdCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_FourthCompositeSegmentProfileDefinition integer, -- index into table CompositeSegmentProfileDefinitionType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	OrientationOnly BOOLEAN, 
	_ToPointToleranceValue integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS SurfaceProfileNonUniformCharacteristicItem;
CREATE TABLE SurfaceProfileNonUniformCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS SurfaceProfileNonUniformCharacteristicNominal;
CREATE TABLE SurfaceProfileNonUniformCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_ZoneLimit integer  -- index into table CharacteristicDirectionalZoneLimitType 
) ;

DROP TABLE IF EXISTS SurfaceProfileNonUniformCharacteristicStatsEval;
CREATE TABLE SurfaceProfileNonUniformCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_WorstPositiveDeviationStats integer, -- index into table StatsLinearType 
	_WorstNegativeDeviationStats integer, -- index into table StatsLinearType 
	_PointDeviationsStats integer, -- index into table PointDeviationsStatsEvalType 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	_CompositeSegmentsStats integer, -- index into table CompositeSegmentsProfileStatsEvalType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_WorstPositiveDeviationStats integer, -- index into table StatsLinearType 
	_WorstNegativeDeviationStats integer, -- index into table StatsLinearType 
	_PointDeviationsStats integer, -- index into table PointDeviationsStatsEvalType 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	_CompositeSegmentsStats integer  -- index into table CompositeSegmentsProfileStatsEvalType 
) ;

DROP TABLE IF EXISTS SurfaceSet;
CREATE TABLE SurfaceSet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__Cone23Type integer[], -- index into table Cone23Type 
	__Cylinder23Type integer[], -- index into table Cylinder23Type 
	__Extrude23Type integer[], -- index into table Extrude23Type 
	__Nurbs23Type integer[], -- index into table Nurbs23Type 
	__Offset23Type integer[], -- index into table Offset23Type 
	__Plane23Type integer[], -- index into table Plane23Type 
	__Revolution23Type integer[], -- index into table Revolution23Type 
	__Ruled23Type integer[], -- index into table Ruled23Type 
	__Sphere23Type integer[], -- index into table Sphere23Type 
	__Spline23Type integer[], -- index into table Spline23Type 
	__Torus23Type integer[]  -- index into table Torus23Type 
) ;

DROP TABLE IF EXISTS SurfaceSubstituteFeatureAlgorithm;
CREATE TABLE SurfaceSubstituteFeatureAlgorithm (
	index  SERIAL PRIMARY KEY,
	SurfaceSubstituteFeatureAlgorithmEnum SurfaceSubstituteFeatureAlgorithmEnumType NOT NULL, 
	OtherSurfaceSubstituteFeatureAlgorithm text NOT NULL  
) ;

DROP TABLE IF EXISTS SurfaceTextureCharacteristicActual;
CREATE TABLE SurfaceTextureCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_RoughnessAverageValue integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS SurfaceTextureCharacteristicDefinition;
CREATE TABLE SurfaceTextureCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_RoughnessAverage integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS SurfaceTextureCharacteristicItem;
CREATE TABLE SurfaceTextureCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS SurfaceTextureCharacteristicNominal;
CREATE TABLE SurfaceTextureCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer  -- index into table KeyCharacteristicType 
) ;

DROP TABLE IF EXISTS SurfaceTextureCharacteristicStatsEval;
CREATE TABLE SurfaceTextureCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_RoughnessAverageValueStats integer  -- index into table StatsWithTolLinearType 
) ;

DROP TABLE IF EXISTS Sweep;
CREATE TABLE Sweep (
	index  SERIAL PRIMARY KEY,
	DirBeg text NOT NULL, 
	_DomainAngle integer  -- index into table AngleRangeType 
) ;

DROP TABLE IF EXISTS SymmetryCharacteristicActual;
CREATE TABLE SymmetryCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	__ZoneData integer[], -- index into table ZoneDataType 
	DatumsOk BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	__ZoneData integer[], -- index into table ZoneDataType 
	DatumsOk BOOLEAN, 
	_SecondCompositeSegmentSymmetryActual integer, -- index into table CompositeSegmentSymmetryActualType 
	_ThirdCompositeSegmentSymmetryActual integer  -- index into table CompositeSegmentSymmetryActualType 
) ;

DROP TABLE IF EXISTS SymmetryCharacteristicDefinition;
CREATE TABLE SymmetryCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	_SecondCompositeSegmentSymmetryDefinition integer, -- index into table CompositeSegmentSymmetryDefinitionType 
	_ThirdCompositeSegmentSymmetryDefinition integer  -- index into table CompositeSegmentSymmetryDefinitionType 
) ;

DROP TABLE IF EXISTS SymmetryCharacteristicItem;
CREATE TABLE SymmetryCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS SymmetryCharacteristicNominal;
CREATE TABLE SymmetryCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer  -- index into table KeyCharacteristicType 
) ;

DROP TABLE IF EXISTS SymmetryCharacteristicStatsEval;
CREATE TABLE SymmetryCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_CompositeSegmentsStats integer  -- index into table CompositeSegmentsProfileStatsEvalType 
) ;

DROP TABLE IF EXISTS TableErrors;
CREATE TABLE TableErrors (
	index  SERIAL PRIMARY KEY,
	_AxialError integer, -- index into table LinearValueType 
	_RadialError integer, -- index into table LinearValueType 
	_TangentialError integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS TargetPointActual;
CREATE TABLE TargetPointActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_Point integer, -- index into table ElementReferenceType 
	_Normal integer, -- index into table UnitVectorSimpleType 
	_Point integer, -- index into table ElementReferenceType 
	_Normal integer  -- index into table UnitVectorSimpleType 
) ;

DROP TABLE IF EXISTS TargetPointNominal;
CREATE TABLE TargetPointNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_ActualPointType integer, -- index into table ActualPointType 
	_Point integer, -- index into table ElementReferenceType 
	Normal text, 
	_ActualPointType integer, -- index into table ActualPointType 
	_Point integer, -- index into table ElementReferenceType 
	Normal text  
) ;

DROP TABLE IF EXISTS TargetPointsActual;
CREATE TABLE TargetPointsActual (
	index  SERIAL PRIMARY KEY,
	linearUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	validity text NOT NULL,-- attribute
	xDecimalPlaces text NOT NULL,-- attribute
	xSignificantFigures text NOT NULL,-- attribute
	xValidity text NOT NULL,-- attribute
	yDecimalPlaces text NOT NULL,-- attribute
	ySignificantFigures text NOT NULL,-- attribute
	yValidity text NOT NULL,-- attribute
	zDecimalPlaces text NOT NULL,-- attribute
	zSignificantFigures text NOT NULL,-- attribute
	zValidity text NOT NULL,-- attribute
	combinedUncertainty text NOT NULL,-- attribute
	meanError text NOT NULL,-- attribute
	xCombinedUncertainty text NOT NULL,-- attribute
	xMeanError text NOT NULL,-- attribute
	yCombinedUncertainty text NOT NULL,-- attribute
	yMeanError text NOT NULL,-- attribute
	zCombinedUncertainty text NOT NULL,-- attribute
	zMeanError text NOT NULL,-- attribute
	__TargetPoint integer[]  -- index into table TargetPointNominalType 
) ;

DROP TABLE IF EXISTS TargetPointsNominal;
CREATE TABLE TargetPointsNominal (
	index  SERIAL PRIMARY KEY,
	linearUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	validity text NOT NULL,-- attribute
	xDecimalPlaces text NOT NULL,-- attribute
	xSignificantFigures text NOT NULL,-- attribute
	xValidity text NOT NULL,-- attribute
	yDecimalPlaces text NOT NULL,-- attribute
	ySignificantFigures text NOT NULL,-- attribute
	yValidity text NOT NULL,-- attribute
	zDecimalPlaces text NOT NULL,-- attribute
	zSignificantFigures text NOT NULL,-- attribute
	zValidity text NOT NULL,-- attribute
	__TargetPoint integer[]  -- index into table TargetPointNominalType 
) ;

DROP TABLE IF EXISTS TemperatureTolerance;
CREATE TABLE TemperatureTolerance (
	index  SERIAL PRIMARY KEY,
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	DefinedAsLimit BOOLEAN NOT NULL  
) ;

DROP TABLE IF EXISTS Temperature;
CREATE TABLE Temperature (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_Temperature integer, -- index into table TemperatureValueType 
	TimeStamp TIMESTAMP NOT NULL  
) ;

DROP TABLE IF EXISTS TemperatureUnit;
CREATE TABLE TemperatureUnit (
	index  SERIAL PRIMARY KEY,
	SIUnitName text, 
	UnitName text NOT NULL, 
	_UnitConversion integer  -- index into table UnitConversionType 
) ;

DROP TABLE IF EXISTS TemperatureValue;
CREATE TABLE TemperatureValue (
	index  SERIAL PRIMARY KEY,
	temperatureUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS Temperatures;
CREATE TABLE Temperatures (
	index  SERIAL PRIMARY KEY,
	__Temperature integer[]  -- index into table TemperatureValueType 
) ;

DROP TABLE IF EXISTS TextInstruction;
CREATE TABLE TextInstruction (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	TextInstruction text NOT NULL  
) ;

DROP TABLE IF EXISTS TextThreadSpecification;
CREATE TABLE TextThreadSpecification (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	TextSpecification text NOT NULL  
) ;

DROP TABLE IF EXISTS Text;
CREATE TABLE Text (
	index  SERIAL PRIMARY KEY,
	Data text NOT NULL, 
	XY FLOAT[2] NOT NULL  
) ;

DROP TABLE IF EXISTS Texts;
CREATE TABLE Texts (
	index  SERIAL PRIMARY KEY,
	fontIndex text,-- attribute
	lineHeight text NOT NULL,-- attribute
	N text,-- attribute
	__Text integer[]  -- index into table string 
) ;

DROP TABLE IF EXISTS ThenPoints;
CREATE TABLE ThenPoints (
	index  SERIAL PRIMARY KEY,
	NumberOfPoints integer NOT NULL, 
	MinPoints integer NOT NULL, 
	PointDensity DECIMAL(10,2) NOT NULL, 
	MinPointDensity DECIMAL(10,2) NOT NULL  
) ;

DROP TABLE IF EXISTS ThicknessCharacteristicActual;
CREATE TABLE ThicknessCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS ThicknessCharacteristicDefinition;
CREATE TABLE ThicknessCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS ThicknessCharacteristicItem;
CREATE TABLE ThicknessCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS ThicknessCharacteristicNominal;
CREATE TABLE ThicknessCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS ThicknessCharacteristicStatsEval;
CREATE TABLE ThicknessCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS ThreadCharacteristicActual;
CREATE TABLE ThreadCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_PitchDiameter integer, -- index into table ActualLinearValueType 
	_FunctionalSize integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS ThreadCharacteristicDefinition;
CREATE TABLE ThreadCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_ThreadSpecificationId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS ThreadCharacteristicItem;
CREATE TABLE ThreadCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS ThreadCharacteristicNominal;
CREATE TABLE ThreadCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer  -- index into table KeyCharacteristicType 
) ;

DROP TABLE IF EXISTS ThreadCharacteristicStatsEval;
CREATE TABLE ThreadCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ThreadStats integer, -- index into table StatsPassFailType 
	_PitchDiameterStats integer, -- index into table StatsLinearType 
	_FunctionalSizeStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS ThreadClass;
CREATE TABLE ThreadClass (
	index  SERIAL PRIMARY KEY,
	ThreadClassEnum ThreadClassEnumType NOT NULL, 
	OtherThreadClass text NOT NULL  
) ;

DROP TABLE IF EXISTS ThreadSeries;
CREATE TABLE ThreadSeries (
	index  SERIAL PRIMARY KEY,
	ThreadSeriesEnum ThreadSeriesEnumType NOT NULL, 
	OtherThreadSeries text NOT NULL  
) ;

DROP TABLE IF EXISTS ThreadSpecification;
CREATE TABLE ThreadSpecification (
	index  SERIAL PRIMARY KEY,
	_SingleLeadSpecification integer, -- index into table SingleLeadThreadSpecificationType 
	_MultiLeadSpecification integer, -- index into table MultiLeadThreadSpecificationType 
	_TextThreadSpecification integer  -- index into table TextThreadSpecificationType 
) ;

DROP TABLE IF EXISTS ThreadSpecifications;
CREATE TABLE ThreadSpecifications (
	index  SERIAL PRIMARY KEY,
	__ThreadSpecification integer[]  -- index into table ThreadSpecificationType 
) ;

DROP TABLE IF EXISTS ThreadedFeatureActualDetermination;
CREATE TABLE ThreadedFeatureActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS ThreadedFeatureActual;
CREATE TABLE ThreadedFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Axis integer, -- index into table AxisType 
	_PitchDiameter integer, -- index into table ActualLinearValueType 
	_FunctionalSize integer, -- index into table ActualLinearValueType 
	_Length integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS ThreadedFeatureBestFit;
CREATE TABLE ThreadedFeatureBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ThreadedFeatureCast;
CREATE TABLE ThreadedFeatureCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ThreadedFeatureCheckedFeature;
CREATE TABLE ThreadedFeatureCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS ThreadedFeatureChecked;
CREATE TABLE ThreadedFeatureChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS ThreadedFeatureConstructionMethod;
CREATE TABLE ThreadedFeatureConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_Transform integer, -- index into table ConicalSegmentTransformType 
	_FromCylinder integer  -- index into table ThreadedFeatureFromCylinderType 
) ;

DROP TABLE IF EXISTS ThreadedFeatureCopy;
CREATE TABLE ThreadedFeatureCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseThreadedFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ThreadedFeatureDefinition;
CREATE TABLE ThreadedFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	InternalExternal InternalExternalEnumType NOT NULL, 
	_ThreadSpecificationId integer, -- index into table QIFReferenceFullType 
	_Length integer, -- index into table LinearValueType 
	_Bottom integer  -- index into table BottomType 
) ;

DROP TABLE IF EXISTS ThreadedFeatureFromCylinder;
CREATE TABLE ThreadedFeatureFromCylinder (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseCylinder integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Offset integer  -- index into table PlaneOffsetType 
) ;

DROP TABLE IF EXISTS ThreadedFeatureItem;
CREATE TABLE ThreadedFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS ThreadedFeatureNominal;
CREATE TABLE ThreadedFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_ActualZoneAxisType integer, -- index into table ActualZoneAxisType 
	_Axis integer  -- index into table AxisType 
) ;

DROP TABLE IF EXISTS ThreadedFeatureRecomp;
CREATE TABLE ThreadedFeatureRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS ThreadedFeatureTransform;
CREATE TABLE ThreadedFeatureTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseThreadedFeature integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS TimeDescription;
CREATE TABLE TimeDescription (
	index  SERIAL PRIMARY KEY,
	TimeDescriptionEnum TimeDescriptionEnumType NOT NULL, 
	OtherTimeDescription text NOT NULL  
) ;

DROP TABLE IF EXISTS TimeTolerance;
CREATE TABLE TimeTolerance (
	index  SERIAL PRIMARY KEY,
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	DefinedAsLimit BOOLEAN NOT NULL  
) ;

DROP TABLE IF EXISTS TimeUnit;
CREATE TABLE TimeUnit (
	index  SERIAL PRIMARY KEY,
	SIUnitName text, 
	UnitName text NOT NULL, 
	_UnitConversion integer  -- index into table UnitConversionType 
) ;

DROP TABLE IF EXISTS TimeValue;
CREATE TABLE TimeValue (
	index  SERIAL PRIMARY KEY,
	timeUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS Times;
CREATE TABLE Times (
	index  SERIAL PRIMARY KEY,
	__ArithmeticCharacteristicParameterType integer[], -- index into table ArithmeticCharacteristicParameterType 
	__ArithmeticFeatureParameterType integer[], -- index into table ArithmeticFeatureParameterType 
	__DividedByType integer[], -- index into table DividedByType 
	__MinusType integer[], -- index into table MinusType 
	__NegateType integer[], -- index into table NegateType 
	__PlusType integer[], -- index into table PlusType 
	__TimesType integer[], -- index into table TimesType 
	__ArithmeticCharacteristicParameterType integer[], -- index into table ArithmeticCharacteristicParameterType 
	__ArithmeticFeatureParameterType integer[], -- index into table ArithmeticFeatureParameterType 
	__DividedByType integer[], -- index into table DividedByType 
	__MinusType integer[], -- index into table MinusType 
	__NegateType integer[], -- index into table NegateType 
	__PlusType integer[], -- index into table PlusType 
	__TimesType integer[]  -- index into table TimesType 
) ;

DROP TABLE IF EXISTS ToleranceDefinitions;
CREATE TABLE ToleranceDefinitions (
	index  SERIAL PRIMARY KEY,
	_LinearTolerance integer, -- index into table LinearToleranceDefinitionType 
	_AngularTolerance integer  -- index into table AngularToleranceDefinitionType 
) ;

DROP TABLE IF EXISTS ToleranceZonePerUnitAngle;
CREATE TABLE ToleranceZonePerUnitAngle (
	index  SERIAL PRIMARY KEY,
	_ToleranceValuePerUnit integer, -- index into table LinearValueType 
	_UnitAngle integer  -- index into table AngularValueType 
) ;

DROP TABLE IF EXISTS ToleranceZonePerUnitArea;
CREATE TABLE ToleranceZonePerUnitArea (
	index  SERIAL PRIMARY KEY,
	_ToleranceValuePerUnit integer, -- index into table LinearValueType 
	_RectangularUnitArea integer, -- index into table RectangularUnitAreaType 
	_CircularUnitArea integer  -- index into table CircularUnitAreaType 
) ;

DROP TABLE IF EXISTS ToleranceZonePerUnitLength;
CREATE TABLE ToleranceZonePerUnitLength (
	index  SERIAL PRIMARY KEY,
	_ToleranceValuePerUnit integer, -- index into table LinearValueType 
	_UnitLength integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS ToleranceZonePerUnitPolarArea;
CREATE TABLE ToleranceZonePerUnitPolarArea (
	index  SERIAL PRIMARY KEY,
	_ToleranceValuePerUnit integer, -- index into table LinearValueType 
	_UnitAngle integer, -- index into table AngularValueType 
	_UnitLength integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS Tool;
CREATE TABLE Tool (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	_SensorIds integer  -- index into table ArrayReferenceFullType 
) ;

DROP TABLE IF EXISTS Tools;
CREATE TABLE Tools (
	index  SERIAL PRIMARY KEY,
	__Tool integer[]  -- index into table ToolType 
) ;

DROP TABLE IF EXISTS TopologySet;
CREATE TABLE TopologySet (
	index  SERIAL PRIMARY KEY,
	_VertexSet integer, -- index into table VertexSetType 
	_EdgeSet integer, -- index into table EdgeSetType 
	_LoopSet integer, -- index into table LoopSetType 
	_FaceSet integer, -- index into table FaceSetType 
	_ShellSet integer, -- index into table ShellSetType 
	_BodySet integer, -- index into table BodySetType 
	_PointCloudSet integer  -- index into table PointCloudSetType 
) ;

DROP TABLE IF EXISTS ToroidalSegmentActualDetermination;
CREATE TABLE ToroidalSegmentActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS ToroidalSegmentBestFit;
CREATE TABLE ToroidalSegmentBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ToroidalSegmentCast;
CREATE TABLE ToroidalSegmentCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ToroidalSegmentCheckedFeature;
CREATE TABLE ToroidalSegmentCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS ToroidalSegmentChecked;
CREATE TABLE ToroidalSegmentChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS ToroidalSegmentConstructionMethod;
CREATE TABLE ToroidalSegmentConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS ToroidalSegmentCopy;
CREATE TABLE ToroidalSegmentCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseToroidalSegment integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS ToroidalSegmentFeatureActual;
CREATE TABLE ToroidalSegmentFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Location integer, -- index into table LocationType 
	_AxisVector integer, -- index into table UnitVectorType 
	_MinorDiameter integer, -- index into table ActualLinearValueType 
	_MajorDiameter integer, -- index into table ActualLinearValueType 
	_LatitudeLongitudeSweep integer, -- index into table LatitudeLongitudeSweepType 
	_OrientedLatitudeLongitudeSweepType integer, -- index into table OrientedLatitudeLongitudeSweepType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS ToroidalSegmentFeatureDefinition;
CREATE TABLE ToroidalSegmentFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	InternalExternal InternalExternalEnumType NOT NULL, 
	_MinorDiameter integer, -- index into table ActualLinearValueType 
	_MajorDiameter integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS ToroidalSegmentFeatureItem;
CREATE TABLE ToroidalSegmentFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS ToroidalSegmentFeatureNominal;
CREATE TABLE ToroidalSegmentFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_ActualPointType integer, -- index into table ActualPointType 
	_Location integer, -- index into table LocationType 
	AxisVector text NOT NULL, 
	_LatitudeLongitudeSweep integer, -- index into table LatitudeLongitudeSweepType 
	_OrientedLatitudeLongitudeSweepType integer  -- index into table OrientedLatitudeLongitudeSweepType 
) ;

DROP TABLE IF EXISTS ToroidalSegmentPointSamplingStrategy;
CREATE TABLE ToroidalSegmentPointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum SurfaceOfRevolutionPointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS ToroidalSegmentRecomp;
CREATE TABLE ToroidalSegmentRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS ToroidalSegmentTransform;
CREATE TABLE ToroidalSegmentTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseToroidalSegment integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS Torus23Core;
CREATE TABLE Torus23Core (
	index  SERIAL PRIMARY KEY,
	turnedV text NOT NULL,-- attribute
	offsetV text NOT NULL,-- attribute
	scaleU text NOT NULL,-- attribute
	scaleV text NOT NULL,-- attribute
	form text NOT NULL,-- attribute
	form text NOT NULL,-- attribute
	DiameterMinor DOUBLE PRECISION NOT NULL, 
	DiameterMajor DOUBLE PRECISION NOT NULL, 
	_ActualZoneAxisType integer, -- index into table ActualZoneAxisType 
	_Axis integer, -- index into table AxisType 
	_LatitudeLongitudeSweep integer, -- index into table LatitudeLongitudeSweepType 
	_OrientedLatitudeLongitudeSweepType integer  -- index into table OrientedLatitudeLongitudeSweepType 
) ;

DROP TABLE IF EXISTS Torus23;
CREATE TABLE Torus23 (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Torus23Core integer, -- index into table Torus23CoreType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Transform integer  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS TorusActualDetermination;
CREATE TABLE TorusActualDetermination (
	index  SERIAL PRIMARY KEY,
	_Checked integer, -- index into table PointDefinedSurfaceCheckedFeatureType 
	_Set integer  -- index into table SetFeatureType 
) ;

DROP TABLE IF EXISTS TorusBestFit;
CREATE TABLE TorusBestFit (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	__BaseFeature integer[]  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS TorusCast;
CREATE TABLE TorusCast (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeature integer, -- index into table SequencedBaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS TorusCheckedFeature;
CREATE TABLE TorusCheckedFeature (
	index  SERIAL PRIMARY KEY,
	_CheckDetails integer  -- index into table ThreadedFeatureCheckedType 
) ;

DROP TABLE IF EXISTS TorusChecked;
CREATE TABLE TorusChecked (
	index  SERIAL PRIMARY KEY,
	_Measured integer, -- index into table MeasuredFeatureType 
	_Constructed integer  -- index into table OppositeLinesConstructionMethodType 
) ;

DROP TABLE IF EXISTS TorusConstructionMethod;
CREATE TABLE TorusConstructionMethod (
	index  SERIAL PRIMARY KEY,
	_BestFit integer, -- index into table ConicalSegmentBestFitType 
	_Recompensated integer, -- index into table ConicalSegmentRecompType 
	_Copy integer, -- index into table ConicalSegmentCopyType 
	_Cast integer, -- index into table ConicalSegmentCastType 
	_Transform integer, -- index into table ConicalSegmentTransformType 
	_FromScan integer  -- index into table CylinderFromScanType 
) ;

DROP TABLE IF EXISTS TorusCopy;
CREATE TABLE TorusCopy (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseTorus integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer  -- index into table SequencedBaseFeatureType 
) ;

DROP TABLE IF EXISTS TorusFeatureActual;
CREATE TABLE TorusFeatureActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_PointList integer, -- index into table PointListNominalType 
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	_Location integer, -- index into table LocationType 
	_AxisVector integer, -- index into table UnitVectorType 
	_MinorDiameter integer, -- index into table ActualLinearValueType 
	_MajorDiameter integer, -- index into table ActualLinearValueType 
	_LatitudeLongitudeSweep integer, -- index into table LatitudeLongitudeSweepType 
	_OrientedLatitudeLongitudeSweepType integer, -- index into table OrientedLatitudeLongitudeSweepType 
	_Form integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS TorusFeatureDefinition;
CREATE TABLE TorusFeatureDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	InternalExternal InternalExternalEnumType NOT NULL, 
	_MinorDiameter integer, -- index into table ActualLinearValueType 
	_MajorDiameter integer  -- index into table ActualLinearValueType 
) ;

DROP TABLE IF EXISTS TorusFeatureItem;
CREATE TABLE TorusFeatureItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	_FeatureNominalId integer, -- index into table QIFReferenceFullType 
	_ParentFeatureItemId integer, -- index into table QIFReferenceFullType 
	FeatureName text NOT NULL, 
	QPId text, 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	_DeterminationMode integer, -- index into table ToroidalSegmentActualDeterminationType 
	_SubstituteFeatureAlgorithm integer  -- index into table NonFeatureOfSizeSubstituteFeatureAlgorithmType 
) ;

DROP TABLE IF EXISTS TorusFeatureNominal;
CREATE TABLE TorusFeatureNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Name text, 
	_PointList integer, -- index into table PointListNominalType 
	FeatureDefinitionId text NOT NULL, 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	_ActualPointType integer, -- index into table ActualPointType 
	_Location integer, -- index into table LocationType 
	AxisVector text NOT NULL, 
	_LatitudeLongitudeSweep integer, -- index into table LatitudeLongitudeSweepType 
	_OrientedLatitudeLongitudeSweepType integer  -- index into table OrientedLatitudeLongitudeSweepType 
) ;

DROP TABLE IF EXISTS TorusFromScan;
CREATE TABLE TorusFromScan (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_SurfaceFeature integer, -- index into table BaseFeatureType 
	_SearchRadius integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS TorusPointSamplingStrategy;
CREATE TABLE TorusPointSamplingStrategy (
	index  SERIAL PRIMARY KEY,
	PointSamplingStrategyEnum SurfaceOfRevolutionPointSamplingStrategyEnumType NOT NULL, 
	UserDefinedStrategy text NOT NULL  
) ;

DROP TABLE IF EXISTS TorusRecomp;
CREATE TABLE TorusRecomp (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseFeaturePointList integer  -- index into table BaseFeaturePointListType 
) ;

DROP TABLE IF EXISTS TorusTransform;
CREATE TABLE TorusTransform (
	index  SERIAL PRIMARY KEY,
	NominalsCalculated BOOLEAN, 
	NominalsCalculated BOOLEAN, 
	_BaseTorus integer, -- index into table BaseFeatureType 
	_SequencedBaseFeatureType integer, -- index into table SequencedBaseFeatureType 
	_Transformation integer  -- index into table TransformationReferenceType 
) ;

DROP TABLE IF EXISTS TotalRunoutCharacteristicActual;
CREATE TABLE TotalRunoutCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	DatumsOk BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	DatumsOk BOOLEAN  
) ;

DROP TABLE IF EXISTS TotalRunoutCharacteristicDefinition;
CREATE TABLE TotalRunoutCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_DatumReferenceFrameId integer, -- index into table QIFReferenceFullType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_DirectionFeature integer, -- index into table DirectionFeatureType 
	_CollectionPlane integer, -- index into table CollectionPlaneType 
	_IntersectionPlane integer, -- index into table IntersectionPlaneType 
	_OrientationPlane integer, -- index into table OrientationPlaneType 
	_ToleranceValue integer, -- index into table LinearValueType 
	_DatumReferenceFrameId integer  -- index into table QIFReferenceFullType 
) ;

DROP TABLE IF EXISTS TotalRunoutCharacteristicItem;
CREATE TABLE TotalRunoutCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS TotalRunoutCharacteristicNominal;
CREATE TABLE TotalRunoutCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_ZoneLimit integer, -- index into table CharacteristicDirectionalZoneLimitType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_ZoneLimit integer  -- index into table CharacteristicDirectionalZoneLimitType 
) ;

DROP TABLE IF EXISTS TotalRunoutCharacteristicStatsEval;
CREATE TABLE TotalRunoutCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_DatumsOkStats integer, -- index into table StatsPassFailType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	CapabilityCalculationMethod OneSidedCapabilityCalculationEnumType, 
	_DatumsOkStats integer  -- index into table StatsPassFailType 
) ;

DROP TABLE IF EXISTS TouchProbe;
CREATE TABLE TouchProbe (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Qualifications integer, -- index into table QualificationsType 
	_AAngle integer, -- index into table AngularValueType 
	_BAngle integer, -- index into table AngularValueType 
	Name text NOT NULL, 
	Description text, 
	Manufacturer text, 
	ModelNumber text, 
	SerialNumber text, 
	_LocationId integer, -- index into table QIFReferenceFullType 
	_Location integer, -- index into table LocationType 
	_Qualifications integer, -- index into table QualificationsType 
	_AAngle integer, -- index into table AngularValueType 
	_BAngle integer, -- index into table AngularValueType 
	_TipDiameter integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS TransformInstance;
CREATE TABLE TransformInstance (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	linearUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	validity text NOT NULL,-- attribute
	xDecimalPlaces text NOT NULL,-- attribute
	xSignificantFigures text NOT NULL,-- attribute
	xValidity text NOT NULL,-- attribute
	yDecimalPlaces text NOT NULL,-- attribute
	ySignificantFigures text NOT NULL,-- attribute
	yValidity text NOT NULL,-- attribute
	zDecimalPlaces text NOT NULL,-- attribute
	zSignificantFigures text NOT NULL,-- attribute
	zValidity text NOT NULL,-- attribute
	linearUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	validity text NOT NULL,-- attribute
	xDecimalPlaces text NOT NULL,-- attribute
	xSignificantFigures text NOT NULL,-- attribute
	xValidity text NOT NULL,-- attribute
	yDecimalPlaces text NOT NULL,-- attribute
	ySignificantFigures text NOT NULL,-- attribute
	yValidity text NOT NULL,-- attribute
	zDecimalPlaces text NOT NULL,-- attribute
	zSignificantFigures text NOT NULL,-- attribute
	zValidity text NOT NULL,-- attribute
	_Rotation integer, -- index into table TransformRotationType 
	Origin FLOAT[3], 
	_Rotation integer, -- index into table TransformRotationType 
	Origin FLOAT[3], 
	_Rotation integer, -- index into table TransformRotationType 
	Origin FLOAT[3], 
	_Attributes integer, -- index into table AttributesType 
	Name text  
) ;

DROP TABLE IF EXISTS TransformList;
CREATE TABLE TransformList (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__Transform integer[]  -- index into table ConicalSegmentTransformType 
) ;

DROP TABLE IF EXISTS TransformMatrix;
CREATE TABLE TransformMatrix (
	index  SERIAL PRIMARY KEY,
	linearUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	validity text NOT NULL,-- attribute
	xDecimalPlaces text NOT NULL,-- attribute
	xSignificantFigures text NOT NULL,-- attribute
	xValidity text NOT NULL,-- attribute
	yDecimalPlaces text NOT NULL,-- attribute
	ySignificantFigures text NOT NULL,-- attribute
	yValidity text NOT NULL,-- attribute
	zDecimalPlaces text NOT NULL,-- attribute
	zSignificantFigures text NOT NULL,-- attribute
	zValidity text NOT NULL,-- attribute
	_Rotation integer, -- index into table TransformRotationType 
	Origin FLOAT[3], 
	_Rotation integer, -- index into table TransformRotationType 
	Origin FLOAT[3]  
) ;

DROP TABLE IF EXISTS TransformRotation;
CREATE TABLE TransformRotation (
	index  SERIAL PRIMARY KEY,
	XDirection FLOAT[3] NOT NULL, 
	YDirection FLOAT[3] NOT NULL, 
	ZDirection FLOAT[3] NOT NULL  
) ;

DROP TABLE IF EXISTS TransformationReference;
CREATE TABLE TransformationReference (
	index  SERIAL PRIMARY KEY,
	ReferencedComponent ReferencedComponentEnumType NOT NULL, 
	_CoordinateSystemId integer, -- index into table QIFReferenceFullType 
	SequenceNumber integer NOT NULL  
) ;

DROP TABLE IF EXISTS OfCoordinatesType;
CREATE TABLE OfCoordinatesType (
	index  SERIAL PRIMARY KEY,
	CoordinateEnum CoordinateEnumType NOT NULL, 
	OtherCoordinate text NOT NULL  
) ;

DROP TABLE IF EXISTS UniformScale;
CREATE TABLE UniformScale (
	index  SERIAL PRIMARY KEY,
	ScaleFactor DECIMAL(10,2) NOT NULL  
) ;

DROP TABLE IF EXISTS UnitConversion;
CREATE TABLE UnitConversion (
	index  SERIAL PRIMARY KEY,
	Factor DECIMAL(10,2) NOT NULL, 
	Offset DECIMAL(10,2)  
) ;

DROP TABLE IF EXISTS UnnumberedPlanElements;
CREATE TABLE UnnumberedPlanElements (
	index  SERIAL PRIMARY KEY,
	__EvaluateSpecifiedCharacteristicsActionType integer[], -- index into table EvaluateSpecifiedCharacteristicsActionType 
	__MeasureEvaluateAllActionType integer[], -- index into table MeasureEvaluateAllActionType 
	__MeasureEvaluateSpecifiedActionType integer[], -- index into table MeasureEvaluateSpecifiedActionType 
	__MeasureSpecifiedFeaturesActionType integer[], -- index into table MeasureSpecifiedFeaturesActionType 
	__MeasureSpecifiedMeasurandsActionType integer[], -- index into table MeasureSpecifiedMeasurandsActionType 
	__OneOfActionGroupType integer[], -- index into table OneOfActionGroupType 
	__OrderedActionGroupType integer[], -- index into table OrderedActionGroupType 
	__PartiallyOrderedActionGroupType integer[], -- index into table PartiallyOrderedActionGroupType 
	__PickSomeActionGroupType integer[], -- index into table PickSomeActionGroupType 
	__UnorderedActionGroupType integer[]  -- index into table UnorderedActionGroupType 
) ;

DROP TABLE IF EXISTS UnorderedActionGroup;
CREATE TABLE UnorderedActionGroup (
	index  SERIAL PRIMARY KEY,
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_MeasureActionGroupFunction integer, -- index into table MeasureActionGroupFunctionType 
	_WorkInstructionIds integer, -- index into table ArrayReferenceFullType 
	_MeasureActionGroupFunction integer, -- index into table MeasureActionGroupFunctionType 
	_Steps integer  -- index into table NumberedPlanElementsType 
) ;

DROP TABLE IF EXISTS UserDataXML;
CREATE TABLE UserDataXML (
	index  SERIAL PRIMARY KEY 
) ;

DROP TABLE IF EXISTS UserDefinedAngularCharacteristicActual;
CREATE TABLE UserDefinedAngularCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS UserDefinedAngularCharacteristicDefinition;
CREATE TABLE UserDefinedAngularCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	WhatToMeasure text NOT NULL  
) ;

DROP TABLE IF EXISTS UserDefinedAngularCharacteristicItem;
CREATE TABLE UserDefinedAngularCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS UserDefinedAngularCharacteristicNominal;
CREATE TABLE UserDefinedAngularCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS UserDefinedAngularCharacteristicStatsEval;
CREATE TABLE UserDefinedAngularCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS UserDefinedAreaCharacteristicActual;
CREATE TABLE UserDefinedAreaCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS UserDefinedAreaCharacteristicDefinition;
CREATE TABLE UserDefinedAreaCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	WhatToMeasure text NOT NULL  
) ;

DROP TABLE IF EXISTS UserDefinedAreaCharacteristicItem;
CREATE TABLE UserDefinedAreaCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS UserDefinedAreaCharacteristicNominal;
CREATE TABLE UserDefinedAreaCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS UserDefinedAreaCharacteristicStatsEval;
CREATE TABLE UserDefinedAreaCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS UserDefinedAttributeCharacteristicActual;
CREATE TABLE UserDefinedAttributeCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	Value text  
) ;

DROP TABLE IF EXISTS UserDefinedAttributeCharacteristicDefinition;
CREATE TABLE UserDefinedAttributeCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN  
) ;

DROP TABLE IF EXISTS UserDefinedAttributeCharacteristicItem;
CREATE TABLE UserDefinedAttributeCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS UserDefinedAttributeCharacteristicNominal;
CREATE TABLE UserDefinedAttributeCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_PassValues integer, -- index into table StringValuesType 
	_FailValues integer  -- index into table StringValuesType 
) ;

DROP TABLE IF EXISTS UserDefinedAttributeCharacteristicStatsEval;
CREATE TABLE UserDefinedAttributeCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_AttributeStats integer  -- index into table StatsPassFailType 
) ;

DROP TABLE IF EXISTS UserDefinedForceCharacteristicActual;
CREATE TABLE UserDefinedForceCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS UserDefinedForceCharacteristicDefinition;
CREATE TABLE UserDefinedForceCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	WhatToMeasure text NOT NULL  
) ;

DROP TABLE IF EXISTS UserDefinedForceCharacteristicItem;
CREATE TABLE UserDefinedForceCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS UserDefinedForceCharacteristicNominal;
CREATE TABLE UserDefinedForceCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS UserDefinedForceCharacteristicStatsEval;
CREATE TABLE UserDefinedForceCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS UserDefinedLinearCharacteristicActual;
CREATE TABLE UserDefinedLinearCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS UserDefinedLinearCharacteristicDefinition;
CREATE TABLE UserDefinedLinearCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	WhatToMeasure text NOT NULL  
) ;

DROP TABLE IF EXISTS UserDefinedLinearCharacteristicItem;
CREATE TABLE UserDefinedLinearCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS UserDefinedLinearCharacteristicNominal;
CREATE TABLE UserDefinedLinearCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS UserDefinedLinearCharacteristicStatsEval;
CREATE TABLE UserDefinedLinearCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS UserDefinedMassCharacteristicActual;
CREATE TABLE UserDefinedMassCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS UserDefinedMassCharacteristicDefinition;
CREATE TABLE UserDefinedMassCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	WhatToMeasure text NOT NULL  
) ;

DROP TABLE IF EXISTS UserDefinedMassCharacteristicItem;
CREATE TABLE UserDefinedMassCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS UserDefinedMassCharacteristicNominal;
CREATE TABLE UserDefinedMassCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS UserDefinedMassCharacteristicStatsEval;
CREATE TABLE UserDefinedMassCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS UserDefinedPressureCharacteristicActual;
CREATE TABLE UserDefinedPressureCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS UserDefinedPressureCharacteristicDefinition;
CREATE TABLE UserDefinedPressureCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	WhatToMeasure text NOT NULL  
) ;

DROP TABLE IF EXISTS UserDefinedPressureCharacteristicItem;
CREATE TABLE UserDefinedPressureCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS UserDefinedPressureCharacteristicNominal;
CREATE TABLE UserDefinedPressureCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS UserDefinedPressureCharacteristicStatsEval;
CREATE TABLE UserDefinedPressureCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS UserDefinedSpeedCharacteristicActual;
CREATE TABLE UserDefinedSpeedCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS UserDefinedSpeedCharacteristicDefinition;
CREATE TABLE UserDefinedSpeedCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	WhatToMeasure text NOT NULL  
) ;

DROP TABLE IF EXISTS UserDefinedSpeedCharacteristicItem;
CREATE TABLE UserDefinedSpeedCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS UserDefinedSpeedCharacteristicNominal;
CREATE TABLE UserDefinedSpeedCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS UserDefinedSpeedCharacteristicStatsEval;
CREATE TABLE UserDefinedSpeedCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS UserDefinedTemperatureCharacteristicActual;
CREATE TABLE UserDefinedTemperatureCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS UserDefinedTemperatureCharacteristicDefinition;
CREATE TABLE UserDefinedTemperatureCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	WhatToMeasure text NOT NULL  
) ;

DROP TABLE IF EXISTS UserDefinedTemperatureCharacteristicItem;
CREATE TABLE UserDefinedTemperatureCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS UserDefinedTemperatureCharacteristicNominal;
CREATE TABLE UserDefinedTemperatureCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS UserDefinedTemperatureCharacteristicStatsEval;
CREATE TABLE UserDefinedTemperatureCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS UserDefinedTimeCharacteristicActual;
CREATE TABLE UserDefinedTimeCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS UserDefinedTimeCharacteristicDefinition;
CREATE TABLE UserDefinedTimeCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	WhatToMeasure text NOT NULL  
) ;

DROP TABLE IF EXISTS UserDefinedTimeCharacteristicItem;
CREATE TABLE UserDefinedTimeCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS UserDefinedTimeCharacteristicNominal;
CREATE TABLE UserDefinedTimeCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS UserDefinedTimeCharacteristicStatsEval;
CREATE TABLE UserDefinedTimeCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS UserDefinedUnitCharacteristicActual;
CREATE TABLE UserDefinedUnitCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS UserDefinedUnitCharacteristicDefinition;
CREATE TABLE UserDefinedUnitCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN  
) ;

DROP TABLE IF EXISTS UserDefinedUnitCharacteristicItem;
CREATE TABLE UserDefinedUnitCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS UserDefinedUnitCharacteristicNominal;
CREATE TABLE UserDefinedUnitCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	DefinedAsLimit BOOLEAN NOT NULL  
) ;

DROP TABLE IF EXISTS UserDefinedUnitCharacteristicStatsEval;
CREATE TABLE UserDefinedUnitCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS UserDefinedUnit;
CREATE TABLE UserDefinedUnit (
	index  SERIAL PRIMARY KEY,
	WhatIsMeasured text NOT NULL, 
	UnitName text NOT NULL, 
	StandardName text  
) ;

DROP TABLE IF EXISTS UserDefinedUnitValue;
CREATE TABLE UserDefinedUnitValue (
	index  SERIAL PRIMARY KEY,
	unitName text,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS UserDefinedUnits;
CREATE TABLE UserDefinedUnits (
	index  SERIAL PRIMARY KEY,
	__UserDefinedUnit integer[]  -- index into table UserDefinedUnitType 
) ;

DROP TABLE IF EXISTS Vector;
CREATE TABLE Vector (
	index  SERIAL PRIMARY KEY,
	linearUnit text NOT NULL,-- attribute
	decimalPlaces text NOT NULL,-- attribute
	significantFigures text NOT NULL,-- attribute
	validity text NOT NULL,-- attribute
	xDecimalPlaces text NOT NULL,-- attribute
	xSignificantFigures text NOT NULL,-- attribute
	xValidity text NOT NULL,-- attribute
	yDecimalPlaces text NOT NULL,-- attribute
	ySignificantFigures text NOT NULL,-- attribute
	yValidity text NOT NULL,-- attribute
	zDecimalPlaces text NOT NULL,-- attribute
	zSignificantFigures text NOT NULL,-- attribute
	zValidity text NOT NULL -- attribute
) ;

DROP TABLE IF EXISTS VersionHistory;
CREATE TABLE VersionHistory (
	index  SERIAL PRIMARY KEY,
	__EarlierVersion integer[]  -- index into table VersionReferenceType 
) ;

DROP TABLE IF EXISTS VersionReference;
CREATE TABLE VersionReference (
	index  SERIAL PRIMARY KEY,
	TimeCreated TIMESTAMP, 
	_SignOffs integer, -- index into table SignOffsType 
	TimeCreated TIMESTAMP, 
	_SignOffs integer, -- index into table SignOffsType 
	QPIdReference text  
) ;

DROP TABLE IF EXISTS Version;
CREATE TABLE Version (
	index  SERIAL PRIMARY KEY,
	TimeCreated TIMESTAMP, 
	_SignOffs integer, -- index into table SignOffsType 
	TimeCreated TIMESTAMP, 
	_SignOffs integer, -- index into table SignOffsType 
	ThisInstanceQPId text  
) ;

DROP TABLE IF EXISTS VertexSet;
CREATE TABLE VertexSet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__Vertex integer[]  -- index into table PointType 
) ;

DROP TABLE IF EXISTS Vertex;
CREATE TABLE Vertex (
	index  SERIAL PRIMARY KEY,
	tolerance text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	color text NOT NULL,-- attribute
	transparency text NOT NULL,-- attribute
	hidden text NOT NULL,-- attribute
	size text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	id text,-- attribute
	label text NOT NULL,-- attribute
	label text NOT NULL,-- attribute
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_Attributes integer, -- index into table AttributesType 
	_EdgeOrientedType integer, -- index into table EdgeOrientedType 
	_Point integer  -- index into table ElementReferenceType 
) ;

DROP TABLE IF EXISTS VideoInstruction;
CREATE TABLE VideoInstruction (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	_ExternalFile integer  -- index into table ExternalFileReferenceType 
) ;

DROP TABLE IF EXISTS ViewSet;
CREATE TABLE ViewSet (
	index  SERIAL PRIMARY KEY,
	N text,-- attribute
	__CameraType integer[], -- index into table CameraType 
	__SavedViewType integer[]  -- index into table SavedViewType 
) ;

DROP TABLE IF EXISTS VisualizationSet;
CREATE TABLE VisualizationSet (
	index  SERIAL PRIMARY KEY,
	_Fonts integer, -- index into table FontsType 
	_PMIDisplaySet integer  -- index into table PMIDisplaySetType 
) ;

DROP TABLE IF EXISTS WidthCharacteristicActual;
CREATE TABLE WidthCharacteristicActual (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Status integer, -- index into table StatsEvalStatusType 
	_CharacteristicItemId integer, -- index into table QIFReferenceFullType 
	_FeatureActualIds integer, -- index into table ArrayReferenceFullType 
	_ActualComponentId integer, -- index into table QIFReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_ManufacturingProcessId integer, -- index into table QIFReferenceFullType 
	_NotedEventIds integer, -- index into table ArrayReferenceFullType 
	NonConformanceDesignator text, 
	_Value integer, -- index into table ActualSpeedValueType 
	_MaxValue integer, -- index into table AreaValueType 
	_MinValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS WidthCharacteristicDefinition;
CREATE TABLE WidthCharacteristicDefinition (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	FreeState BOOLEAN, 
	StatisticalCharacteristic BOOLEAN, 
	CommonZone BOOLEAN, 
	MedianFeature BOOLEAN, 
	EnvelopeRequirement BOOLEAN, 
	UnitedFeature BOOLEAN, 
	SeparateZone BOOLEAN, 
	DimensionType DimensionModifierEnumType, 
	_Tolerance integer, -- index into table AngularToleranceType 
	NonTolerance NonToleranceEnumType NOT NULL  
) ;

DROP TABLE IF EXISTS WidthCharacteristicItem;
CREATE TABLE WidthCharacteristicItem (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer, -- index into table LocationOnDrawingType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	Name text NOT NULL, 
	QPId text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_FeatureItemIds integer, -- index into table ArrayReferenceFullType 
	_NotableEventIds integer, -- index into table ArrayReferenceFullType 
	_MeasurementDeviceIds integer, -- index into table ArrayReferenceFullType 
	_CharacteristicNominalId integer, -- index into table QIFReferenceFullType 
	_LocationOnDrawing integer  -- index into table LocationOnDrawingType 
) ;

DROP TABLE IF EXISTS WidthCharacteristicNominal;
CREATE TABLE WidthCharacteristicNominal (
	index  SERIAL PRIMARY KEY,
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	id text,-- attribute
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer, -- index into table AreaValueType 
	_Attributes integer, -- index into table AttributesType 
	Description text, 
	CharacteristicDefinitionId text NOT NULL, 
	_FeatureNominalIds integer, -- index into table ArrayReferenceFullType 
	_EntityInternalIds integer, -- index into table ArrayReferenceFullType 
	_EntityExternalIds integer, -- index into table ArrayReferenceFullType 
	Name text, 
	_KeyCharacteristic integer, -- index into table KeyCharacteristicType 
	_TargetValue integer  -- index into table AreaValueType 
) ;

DROP TABLE IF EXISTS WidthCharacteristicStatsEval;
CREATE TABLE WidthCharacteristicStatsEval (
	index  SERIAL PRIMARY KEY,
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer, -- index into table StatsLinearType 
	_Attributes integer, -- index into table AttributesType 
	_ActualIds integer, -- index into table StatsArrayIdType 
	__Subgroup integer[], -- index into table ActualSubgroupType 
	_Status integer, -- index into table StatsEvalStatusType 
	_StudyIssue integer, -- index into table StudyIssueType 
	_DistributionTransformation integer, -- index into table DistributionTransformationType 
	_ValueStats integer, -- index into table StatsWithTolLinearType 
	_MaxValueStats integer, -- index into table StatsLinearType 
	_MinValueStats integer, -- index into table StatsLinearType 
	_DeviationStats integer, -- index into table StatsWithTolLinearType 
	_MaxDeviationStats integer, -- index into table StatsLinearType 
	_MinDeviationStats integer  -- index into table StatsLinearType 
) ;

DROP TABLE IF EXISTS WitnessLines;
CREATE TABLE WitnessLines (
	index  SERIAL PRIMARY KEY,
	width text,-- attribute
	_LeaderCircularType integer, -- index into table LeaderCircularType 
	_LeaderDoubleHeadCircularType integer, -- index into table LeaderDoubleHeadCircularType 
	_LeaderDoubleHeadExtendType integer, -- index into table LeaderDoubleHeadExtendType 
	_LeaderDoubleHeadType integer, -- index into table LeaderDoubleHeadType 
	_LeaderExtendType integer, -- index into table LeaderExtendType 
	_LeaderType integer, -- index into table LeaderType 
	_Segment1 integer, -- index into table LineSegment2dType 
	_LeaderCircularType integer, -- index into table LeaderCircularType 
	_LeaderDoubleHeadCircularType integer, -- index into table LeaderDoubleHeadCircularType 
	_LeaderDoubleHeadExtendType integer, -- index into table LeaderDoubleHeadExtendType 
	_LeaderDoubleHeadType integer, -- index into table LeaderDoubleHeadType 
	_LeaderExtendType integer, -- index into table LeaderExtendType 
	_LeaderType integer, -- index into table LeaderType 
	_Segment2 integer  -- index into table LineSegment2dType 
) ;

DROP TABLE IF EXISTS WorkInstructions;
CREATE TABLE WorkInstructions (
	index  SERIAL PRIMARY KEY,
	__DocumentFileInstructionType integer[], -- index into table DocumentFileInstructionType 
	__ImageInstructionType integer[], -- index into table ImageInstructionType 
	__TextInstructionType integer[], -- index into table TextInstructionType 
	__VideoInstructionType integer[]  -- index into table VideoInstructionType 
) ;

DROP TABLE IF EXISTS WorkingVolume;
CREATE TABLE WorkingVolume (
	index  SERIAL PRIMARY KEY,
	_XAxisLength integer, -- index into table LinearValueType 
	_YAxisLength integer, -- index into table LinearValueType 
	_ZAxisLength integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS XYZResolution;
CREATE TABLE XYZResolution (
	index  SERIAL PRIMARY KEY,
	_XResolution integer, -- index into table LinearValueType 
	_YResolution integer, -- index into table LinearValueType 
	_ZResolution integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS ZoneData;
CREATE TABLE ZoneData (
	index  SERIAL PRIMARY KEY,
	_FeatureItemId integer, -- index into table QIFReferenceFullType 
	_Bonus integer, -- index into table ActualLinearValueType 
	_ReferenceLength integer  -- index into table LinearValueType 
) ;

DROP TABLE IF EXISTS ZoneRadii;
CREATE TABLE ZoneRadii (
	index  SERIAL PRIMARY KEY,
	_MinRadius integer, -- index into table LinearValueType 
	_MaxRadius integer  -- index into table LinearValueType 
) ;


